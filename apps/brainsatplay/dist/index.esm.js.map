{
  "version": 3,
  "sources": ["../index.esc.js", "../components/statement.esc.js", "../components/feature.esc.js", "../components/twitch.esc.js", "../about.esc.js", "../work.esc.js", "../../../libraries/common/check.js", "../../../libraries/esmonitor/src/utils.ts", "../../../libraries/esmonitor/src/Poller.ts", "../../../libraries/esmonitor/src/listeners.ts", "../../../libraries/esmonitor/src/global.ts", "../../../libraries/esmonitor/src/info.ts", "../../../libraries/esmonitor/src/globals.ts", "../../../libraries/esc/standards.js", "../../../libraries/common/pathHelpers.ts", "../../../libraries/esmonitor/src/inspectable/handlers.ts", "../../../libraries/esmonitor/src/inspectable/define.ts", "../../../libraries/esmonitor/src/inspectable/index.ts", "../../../libraries/esmonitor/src/optionsHelpers.ts", "../../../libraries/common/drill.js", "../../../libraries/esmonitor/src/Monitor.ts", "../../../libraries/esmonitor/src/index.ts", "../../../libraries/common/clone.js", "../../../libraries/escompose/src/utils/misc.ts", "../../../libraries/drafts/edgelord/index.ts", "../../../libraries/escompose/src/loaders/native/utils.ts", "../../../libraries/escompose/src/loaders/native/compose/compile/wasm.ts", "../../../libraries/escompose/src/loaders/native/compose/compile/index.ts", "../../../libraries/escompose/src/loaders/native/compose/index.ts", "../../../libraries/escompose/src/loaders/native/path/index.ts", "../../../libraries/escompose/src/loaders/native/element/component.ts", "../../../libraries/escompose/src/loaders/native/element/index.ts", "../../../libraries/escompose/src/utils/define.ts", "../../../libraries/escompose/src/loaders/native/esc/start.ts", "../../../libraries/escompose/src/loaders/native/esc/stop.ts", "../../../libraries/escompose/src/loaders/native/esc/animate.ts", "../../../libraries/escompose/src/loaders/native/esc/create.ts", "../../../libraries/escompose/src/loaders/native/esc/hierarchy.ts", "../../../libraries/escompose/src/index.ts", "../../../libraries/drafts/router/index.ts", "../index.ts"],
  "sourcesContent": ["import * as statement from './components/statement.esc.js'\nimport * as feature from './components/feature.esc.js'\nimport * as twitch from './components/twitch.esc.js'\n\n\n\nconst borderStyle = {\n    borderBottom: '2px solid white',\n    paddingBottom: '0.5rem',\n    paddingRight: '1rem'\n}\n\nconst list = {\n    list: [],\n    __element: 'ul',\n    __onconnected: function () {\n        this.__element.innerHTML = ''\n        this.list.forEach(link => {\n            const li = document.createElement('li')\n            const a = document.createElement('a')\n            a.innerText = link.label\n            li.appendChild(a)\n            this.__element.appendChild(li)\n\n            if (link.oncreate) link.oncreate(li)\n\n            if (link.onclick) a.onclick = link.onclick\n            else a.href = link.href\n\n        })\n    },\n}\n\nconst links = [\n    { label: 'Home', href: '/' },\n    { label: 'About', href: '#about' },\n    { label: 'Work', href: '#work' },\n    { label: 'Ethos', href: '#ethos' },\n    { label: 'Twitch', href: '#twitch' },\n\n]\n\nexport const __children = {\n    nav: {\n        __element: 'nav',\n        __attributes: {\n            style: {\n                position: 'fixed',\n                top: '0px',\n                right: '0px',\n                paddingRight: '2rem',\n            }\n        },\n        __children: {\n            list: {\n                list: links,\n                __compose: list,\n                __attributes: {\n                    style: {\n                        textTransform: 'uppercase',\n                    }\n                },\n            }\n        }\n    },\n    content: {\n        __children: {\n\n            hero: {\n                __element: 'section',\n                __children: {\n                    container: {\n                        __children: {\n                            title: {\n                                __element: 'h1',\n                                __attributes: {\n                                    innerText: 'Brains@Play'\n                                },\n                            },\n                            subtitle: {\n                                __element: 'h2',\n                                __attributes: {\n                                    innerText: 'The Universal Web Development Cooperative'\n                                }\n                            },\n                            description: {\n                                __element: 'p',\n                                __attributes: {\n                                    innerText: 'We empower everyone to build better apps\u2014together.'\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            about: {\n                __element: 'section',\n                __attributes: {\n                    style: {\n                        background: 'darkslategray'\n                    }\n                },\n                __children: {\n                    container: {\n                        __children: {\n                            title: {\n                                __children: {\n                                    text: {\n                                        __element: 'h2',\n                                        __attributes: {\n                                            innerText: 'About Us'\n                                        }\n                                    },\n                                    support: {\n                                        __element: 'a',\n                                        __attributes: {\n                                            href: \"https://opencollective.com/brainsatplay\",\n                                            target: \"_blank\",\n                                        },\n                                        __children: {\n                                            image: {\n                                                __element: 'img',\n                                                __attributes: {\n                                                    height: 40,\n                                                    src: \"https://opencollective.com/brainsatplay/contribute/button@2x.png?color=white\"\n                                                }\n                                            }\n                                        }\n                                    }\n                                },\n                                __attributes: {\n                                    style: {\n                                        display: 'flex',\n                                        justifyContent: 'space-between',\n                                        alignItems: 'center',\n                                        ...borderStyle\n                                    }\n                                }\n                            },\n                            description: {\n                                __element: 'p',\n                                __attributes: {\n                                    innerHTML: \"Brains@Play is currently led by two developers\u2014<a href='https://github.com/garrettmflynn' target='_blank'>Garrett Flynn</a> and <a href='https://github.com/garrettmflynn' target='_blank'>Joshua Brewster</a>\u2014working to build a better Web with free software.\"\n                                }\n                            },\n                            statements: {\n                                __attributes: {\n                                    style: {\n                                        display: 'flex',\n                                        flexWrap: 'wrap'\n                                    }\n                                },\n                                __children: {\n                                    mission: {\n                                        header: 'Mission',\n                                        text: 'Make code universally <a>shareable</a>, <a>modifiable</a>, and <a>usable</a>.',\n                                        __compose: statement,\n                                        __attributes: {\n                                            style: {\n                                                flexBasis: '50%',\n                                                padding: '15px'\n                                            }\n                                        },\n                                    },\n\n                                    vision: {\n                                        header: 'Vision',\n                                        text: 'Engulf the Web in public experiments of communal organization and citizen science, engineering, and art.',\n                                        __compose: statement,\n                                        __attributes: {\n                                            style: {\n                                                flexBasis: '50%',\n                                                padding: '15px'\n                                            }\n                                        },\n                                    }\n                                }\n                            },\n                        }\n                    }\n                }\n            },\n            ethos: {\n                __element: 'section',\n                __children: {\n                    container: {\n                        __children: {\n                            title: {\n                                __element: 'h2',\n                                __attributes: {\n                                    innerText: 'Our Ethos',\n                                    style: {\n                                        ...borderStyle\n                                    }\n                                }\n                            },\n                            featureone: {\n                                number: '1',\n                                title: 'Recompose the Web',\n                                description: 'We are consuming the infrastructure of the Web.',\n                                projects: [\n                                    {\n                                        name: 'ES Components (ESC)',\n                                        link: 'https://github.com/brainsatplay/escomponent',\n                                        version: '0.1.7',\n                                        description: 'A specification for composable JavaScript objects with concurrent message-passing.',\n                                    },\n                                    {\n                                        name: 'ESCode',\n                                        link: 'https://github.com/brainsatplay/escode',\n                                        version: '0.1.7',\n                                        description: 'A framework for using ES Components using graphscript.',\n                                    },\n                                    {\n                                        name: 'Web Source Accessibility Guidelines (WSAG)',\n                                        active: false,\n                                        version: '0.0.0',\n                                        description: 'Identify best practices to allow anyone to use, modify, and share Web Components.',\n                                    },\n                                ],\n                                __compose: feature\n                            },\n                            featuretwo: {\n                                number: '2',\n                                title: 'Make Software Yours',\n                                description: 'Bring yourself to every page.',\n                                projects: [\n                                    {\n                                        name: 'Browser Extension',\n                                        link: 'https://github.com/brainsatplay/brainsatplay-extension',\n                                        version: '0.0.0',\n                                        oncreate: (element) => {\n\n                                            const extensionScriptId = 'brainsatplay-injection-proxy'\n\n                                            const openOptions = (id) => {\n                                                window.postMessage({\n                                                    source: id,\n                                                    command: 'openOptions' // direct shortcut command\n                                                })\n                                            }\n\n                                            const checkExtension = () => {\n                                                let hasExtension = false;\n\n                                                element.onclick = () => {\n                                                    const extensionURL = \"https://github.com/brainsatplay/brainsatplay-extension\"\n                                                    window.open(extensionURL, '_blank');\n                                                }\n\n                                                // Check if extension is installed\n                                                const el = document.getElementById(extensionScriptId);\n                                                if (el) {\n                                                    const version = el.getAttribute('data-version')\n                                                    if (version) {\n                                                        const id = el.getAttribute('data-id')\n                                                        // if (version >= requiredVersion) {\n                                                        hasExtension = true;\n                                                        element.onclick = () => openOptions(id)\n                                                        // }\n                                                    }\n                                                }\n\n                                                return hasExtension\n                                            }\n\n                                            window.onload = function () {\n                                                const res = checkExtension()\n                                                if (!res) setTimeout(checkExtension, 100)\n                                            }\n                                        },\n                                        description: 'Apply components across web pages.',\n                                    },\n                                    {\n                                        name: 'Desktop App',\n                                        link: 'https://github.com/brainsatplay/brainsatplay-electron',\n                                        version: '0.0.0',\n                                        onclick: () => {\n                                            customProtocolCheck(\n                                                \"brainsatplay://\",\n                                                () => {\n                                                    window.open(\"https://github.com/brainsatplay/brainsatplay-desktop\", \"_blank\");\n                                                    console.log(\"Custom protocol not found.\");\n                                                },\n                                                () => {\n                                                    console.log(\"Custom protocol found and opened the file successfully.\");\n                                                },\n                                                // 5000\n                                            )\n                                        },\n                                        description: 'Create composable cross-platform web systems.',\n                                    }\n                                ],\n                                __compose: feature\n                            },\n                            featurethree: {\n                                number: '3',\n                                title: 'Free Public Experimentation',\n                                description: 'We are supporting new scientific and human-computer interaction (HCI) advances that drive experimentation on the Web and translate quickly across sites.',\n                                projects: [\n                                    {\n                                        name: 'WebNWB',\n                                        link: 'https://github.com/brainsatplay/webnwb',\n                                        description: 'Enable citizen neuroscience.',\n                                        version: '0.0.12',\n                                    },\n                                    {\n                                        name: 'MyAlyce',\n                                        link: 'https://myalyce.com',\n                                        description: 'Enable citizen neuroscience.',\n                                        version: '0.0.0',\n                                    }\n                                ],\n                                __compose: feature\n                            },\n                        }\n                    }\n                }\n            },\n\n            twitch,\n        },\n    },\n\n    footer: {\n        __element: 'footer',\n        __attributes: {\n            style: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                backgroundColor: 'black',\n                color: 'white',\n                padding: '25px 50px'\n            }\n        },\n        __children: {\n            title: {\n                __children: {\n                    // logo: {\n                    //     __element: 'img',\n                    //     __attributes: {\n                    //         src: 'https://brainsatplay.com/assets/images/logo.png',\n                    //     }\n                    // },\n                    text: {\n                        __element: 'span',\n                        __attributes: {\n                            innerText: '\u00A9 Brains@Play 2022'\n                        }\n                    }\n                }\n            },\n            links: {\n                __compose: list,\n                list: [\n                    ...links\n                ]\n            },\n            social: {\n                __element: 'ul',\n                __children: {\n                    email: {\n                        __element: 'li',\n                        __children: {\n                            link: {\n                                __element: 'a',\n                                __attributes: {\n                                    href: 'mailto:contact@brainsatplay.com',\n                                    innerText: 'contact@brainsatplay.com'\n                                }\n                            },\n                        }\n                    },\n                    newsletter: {\n                        __element: 'li',\n                        __children: {\n                            link: {\n                                __element: 'a',\n                                __attributes: {\n                                    href: 'https://brainsatplay.substack.com',\n                                    innerText: 'Sign up for our newsletter',\n                                    style: {\n                                        fontSize: '0.8rem'\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n", "export function __onconnected () {\n    if (this.header !== undefined) this.__children.header.__element.innerText = this.header\n    if (this.text !== undefined) this.__children.text.__element.innerHTML = this.text\n}\n\nexport const __children = {\n    header: {\n        __element: 'h3',\n        __attributes: {\n            innerText: 'Header'\n        }\n    },\n    text: {\n        __element: 'p',\n        __attributes: {\n            innerHTML: 'This is the text.'\n        }\n    }\n}", "export function __onconnected () {\n    const properties = ['number', 'title', 'description']\n    properties.forEach(property => {\n        if (this[property] !== undefined) this.__children.container.__children[property].__element.innerText = this[property]\n    })\n\n    if (this.projects !== undefined) {\n        this.projects.forEach(project => {\n            const li = document.createElement('li')\n            const a = document.createElement('a')\n            const span = document.createElement('sub')\n            span.style.fontSize = '75%'\n            span.style.userSelect = 'none'\n\n            if (project.active === false) {\n                li.style.opacity = '0.5'\n                li.style.pointerEvents = 'none'\n                li.style.userSelect = 'none'\n            } else {\n                if (project.oncreate) project.oncreate(li)\n\n                if (project.onclick)  a.onclick = project.onclick\n                else if (project.href) a.href = project.href\n            }\n\n            li.appendChild(a)\n            li.appendChild(span)\n            a.innerText = project.name\n            span.innerText = ` ${project.version}`\n\n\n            this.__children.container.__children.projects.__element.appendChild(li)\n        })\n    }\n\n}\n\nexport const __attributes = {\n    style: {\n        padding: '1rem',\n    }\n}\n\nexport const __children = {\n    container: {\n        __children: {\n            number: {\n                __element: 'p',\n                __attributes: {\n                    innerText: '',\n                    style: {\n                        fontSize: '0.9rem',\n                        paddingBottom: '0.5rem',\n                        margin: '0px'\n                    }\n                }\n            },\n            title: {\n                __element: 'h3',\n                __attributes: {\n                    innerText: 'Feature'\n                }\n            },\n            description: {\n                __element: 'p',\n                __attributes: {\n                    innerText: 'This is a feature that is featured.'\n                }\n            },\n            projects: {\n                __element: 'ul',\n                __children: { }\n            }\n        }\n    }\n}", "\nexport const channel = \"brainsatplay\"\nexport const width = '100%'\nexport const height = 480\n\nexport const __element = 'div'\nexport const __onconnected = function () {\n\n    const script = document.createElement('script')\n    script.src = 'https://embed.twitch.tv/embed/v1.js'\n    document.body.appendChild(script)\n\n    script.onload = () => {\n        new Twitch.Embed(this.__element,{\n            width: this.width,\n            height: this.height,\n            channel: this.channel,\n            // // Only needed if this page is going to be embedded on other websites\n            // parent: [\"embed.example.com\", \"othersite.example.com\"]\n        })\n    }\n}", "\nexport const __children = {\n    hero: {\n        __element: 'section',\n        __children: {\n            container: {\n                __children: {\n                    title: {\n                        __element: 'h1',\n                        __attributes: {\n                            innerText: 'About Us'\n                        },\n                    },\n                    subtitle: {\n                        __element: 'h2',\n                        __attributes: {\n                            innerText: 'It all began with a dream of agency for every brain.'\n                        }\n                    },\n                    description: {\n                        __element: 'p',\n                        __attributes: {\n                            innerText: 'We started working in 2021 and never stopped.'\n                        }\n                    },\n                    message: {\n                        __element: 'p',\n                        __attributes: {\n                            innerText: `Now it's cool to have a brain!`\n                        }\n                    }\n                },\n            },\n        }\n    },\n}\n", "\nexport const __children = {\n    hero: {\n        __element: 'section',\n        __children: {\n            container: {\n                __children: {\n                    title: {\n                        __element: 'h1',\n                        __attributes: {\n                            innerText: 'Our Work'\n                        },\n                    },\n                    subtitle: {\n                        __element: 'h2',\n                        __attributes: {\n                            innerText: 'The Universal Web Development Cooperative'\n                        }\n                    },\n                }\n            }\n        }\n    },\n}\n", "const moduleStringTag = '[object Module]'\n\nexport const esm = (object) => {\n    const res = object && (!!Object.keys(object).reduce((a,b) => {\n        const desc = Object.getOwnPropertyDescriptor(object, b)\n        const isModule = (desc && desc.get && !desc.set) ? 1 : 0\n        return a + isModule\n    }, 0) || Object.prototype.toString.call(object) === moduleStringTag)\n\n    return !!res\n}", "import { Options } from \"../../common/types\"\nimport { ArrayPath, MonitorOptions } from \"./types\"\n\n\nexport const isSame = (a,b) => {\n    if (a && typeof a === 'object' && b && typeof b === 'object') {\n        const jA = JSON.stringify(a)\n        const jB = JSON.stringify(b)\n        return jA === jB\n    } else return a === b\n}\n\n\nexport const iterateSymbols = (obj, callback) => {\n    return Promise.all(Object.getOwnPropertySymbols(obj).map((sym: symbol) => callback(sym, obj[sym])))\n}\n\nexport const  getPath = (type, info) => {\n    const pathType = info.path[type]\n    if (!pathType) throw new Error('Invalid Path Type')\n    const filtered = pathType.filter((v) => typeof v === 'string')\n    return filtered.join(info.keySeparator)\n}\n\nexport const getPathInfo = (path, options: MonitorOptions) => {\n    let splitPath = path\n    if (typeof path === 'string') splitPath = path.split(options.keySeparator)\n    else if (typeof path === 'symbol') splitPath = [path]\n    return {\n        id: splitPath[0],\n        path: splitPath.slice(1) as ArrayPath,\n    }\n}\n\nexport const runCallback = (callback, path, info, output, setGlobal=true) => {\n    if (callback instanceof Function) {\n        \n        // Promises\n        if (output && typeof output === 'object' && typeof output.then === 'function') output.then(value => callback(path, info, value))\n\n        // Normal\n        else callback(path, info, output)\n    }\n\n    // ------------------ Set Manually in Inspected State ------------------\n    if (setGlobal && globalThis.ESMonitorState) {\n        const callback = globalThis.ESMonitorState.callback\n        globalThis.ESMonitorState.state[path] = { output, value: info }\n        runCallback(callback, path, info, output, false)\n    }\n}", "import * as utils from './utils'\nimport { ListenerInfo, PollingOptions, ReferenceShortcut } from './types'\n\nconst defaultSamplingRate = 60\n\nexport default class Poller {\n\n    #pollingId?: NodeJS.Timer;\n    #sps: number;\n\n    listeners: {[x:symbol]: ListenerInfo} = {}\n\n    get sps(){\n        return this.#sps\n    }\n\n    set sps(sps: number) {\n        this.#sps = sps\n\n        const listeners = this.listeners\n        const nListeners = Object.keys(listeners).length\n        if (nListeners){\n            this.stop()\n            this.start()\n        }\n    }\n\n    constructor(\n        listeners?: Poller['listeners'],\n        sps?: Poller['sps']\n    ) {\n        if (listeners) this.listeners = listeners // Initialize listeners externally\n        if (sps) this.sps = sps // Set sampling rate externally\n    }\n\n    setOptions = (opts: PollingOptions = {}) => {\n        for (let key in opts) this[key] = opts[key] // Merge polling option\n    }\n\n\n    // Basic Object Manipulation\n    add = (info: ListenerInfo) => {\n        const sub = info.sub\n        this.listeners[sub] = info\n        this.start() // Start polling if not already started\n        return true\n    }\n    get = (sub: ListenerInfo['sub']) => this.listeners[sub]\n    remove = (sub: ListenerInfo['sub']) => {\n        delete this.listeners[sub]\n        if (!Object.keys(this.listeners).length) this.stop() // Stop polling if no listeners\n    }\n\n    // Poll Listeners\n    poll = (listeners) => {\n        utils.iterateSymbols(listeners, (sym, o) => {\n            let { callback, current, history } = o\n\n            // Resolving the path once\n            if (!o.path.resolved) o.path.resolved = utils.getPath('output', o)\n\n            if (!utils.isSame(current, history)){\n                utils.runCallback(callback, o.path.resolved, {}, current)\n                if (typeof current === 'object') {\n                    if (Array.isArray(current)) history = [...current]\n                    else history = {...current}\n                } else listeners[sym].history = current\n            }\n        })\n    }\n\n    // Start Polling\n    start = (listeners = this.listeners) => {\n        if (!this.sps) this.sps = defaultSamplingRate // Set default sampling rate\n        else if (!this.#pollingId) {\n            console.warn('[escode]: Starting Polling!')\n            this.#pollingId = setInterval(() => this.poll(listeners), 1000/this.sps)\n        }\n    }\n\n    // Stop Polling\n    stop = () => {\n        if (this.#pollingId) {\n            console.warn('[escode]: Stopped Polling!')\n            clearInterval(this.#pollingId)\n            this.#pollingId = undefined\n        }\n    }\n}\n", "import { ArrayPath, ListenerInfo, ListenerLookups, ListenerPool, ListenerRegistry, MonitorOptions, ReferenceShortcut } from \"./types\"\nimport * as utils from './utils'\nimport * as infoUtils from './info'\nimport { isProxy } from './globals'\nimport { getFromPath } from \"../../common/pathHelpers\"\nimport { setFromOptions } from \"./optionsHelpers\"\n\nexport const info = (id, callback, path, originalValue, base, listeners, options: MonitorOptions, refShortcut: Partial<ReferenceShortcut> = {}) => {\n    if (typeof path === 'string') path = path.split(options.keySeparator)\n    const relativePath = path.join(options.keySeparator)\n\n    const refs = base\n\n    const shortcutRef = refShortcut.ref\n    const shortcutPath = refShortcut.path\n\n    const get = (path: ArrayPath) => {\n        const thisBase = shortcutRef ?? base\n \n        const res = getFromPath(thisBase, path, {\n            keySeparator: options.keySeparator,\n            fallbacks: options.fallbacks,\n        })\n\n        return res\n    }\n\n    const set = (path: ArrayPath, value) => {\n        const thisBase = shortcutRef ?? base\n\n        setFromOptions(path, value, options, {\n            reference: thisBase,\n            listeners\n        })\n    }\n\n    // Derive onUpdate Function\n    let onUpdate = options.onUpdate\n    let infoToOutput = {}\n\n    if (onUpdate && typeof onUpdate === 'object' && onUpdate.callback instanceof Function) {\n        infoToOutput = onUpdate.info ?? {}\n        onUpdate = onUpdate.callback\n    }\n\n    const absolute = [id, ...path]\n    let pathInfo = {\n        absolute,\n        relative: relativePath.split(options.keySeparator),\n        parent: absolute.slice(0,-1)\n    } as Partial<ListenerInfo['path']>\n\n    pathInfo.output =  pathInfo[options.pathFormat]\n    const completePathInfo = pathInfo as ListenerInfo['path']\n\n    const info = {\n        id, \n        path: completePathInfo, \n        keySeparator: options.keySeparator,\n\n        infoToOutput,\n        callback: (...args) => {\n            const output = callback(...args)\n            \n            // ------------------ Run onUpdate Callback ------------------\n            if (onUpdate instanceof Function) onUpdate(...args)\n\n            // Return Standard Output\n            return output\n        }, \n        get current() { return get(shortcutPath ?? info.path.absolute) },\n        set current(val) { set(shortcutPath ?? info.path.absolute, val) },\n        get parent() { \n            return get(shortcutPath ? shortcutPath?.slice(0,-1) : info.path.parent) \n        },\n        get reference(){ return refs[id] },\n        set reference(val){ refs[id] = val },\n        original: originalValue,\n        history: (typeof originalValue === 'object') ? Object.assign({}, originalValue) : originalValue,\n        sub: Symbol('subscription'),\n        last: path.slice(-1)[0],\n    } as ListenerInfo\n\n    return info\n}\n\n\nconst registerInLookup = (name, sub, lookups) => {\n\n    if (lookups) {\n        const id = Math.random()\n        lookups.symbol[sub] = {\n            name,\n            id \n        } // set in lookup\n        if (!lookups.name[name]) lookups.name[name] = {}\n        lookups.name[name][id] = sub\n    }\n}\n\nexport const register = (info, collection, lookups?: ListenerLookups) => {\n    // Place in Function Registry\n    const absolute = utils.getPath('absolute', info)\n    if (!collection[absolute]) collection[absolute] = {}\n    collection[absolute][info.sub] = info\n\n    // Place in Lookup Registry\n    registerInLookup(absolute, info.sub, lookups)\n    return true\n}\n\nconst listeners = {\n    functions, \n    setters\n}\n\n// Set Listener with Minimal Information\nexport const set = (type, absPath, value, callback, base, allListeners: Partial<ListenerRegistry>, options: MonitorOptions) => {\n\n    const { id, path } = utils.getPathInfo(absPath, options)\n\n    const fullInfo = info(id, callback, path, value, base, listeners, options)\n\n    // ------------------ Set Listener in Registry ------------------\n    if (listeners[type]) listeners[type](fullInfo, allListeners[type], allListeners.lookup) // goes up to register()\n    else {\n        const path = utils.getPath('absolute', fullInfo)\n        allListeners[type][path][fullInfo.sub] = fullInfo\n        if (allListeners.lookup) registerInLookup(path, fullInfo.sub, allListeners.lookup)\n    }\n}\n\nconst get = (info, collection) => collection[utils.getPath('absolute', info)]\n\n\nconst handler = (info, collection, subscribeCallback, lookups?: ListenerLookups) => {\n    \n    // Create Listener for this Object\n    let success = !!get(info, collection)\n    if (!success) {\n        let parent = info.parent\n        let val = parent?.[info.last] // Parent may not exist yet...but we still want to register a potential listener\n        success = subscribeCallback(val, parent)\n    }\n\n    // Register in Collection\n    // if (success) \n    return register(info, collection, lookups)\n    // else console.warn('Listener revoked for non-existent parent:', info.path.absolute ) \n}\n\n\nexport const setterExecution = (listeners, value) => {\n    return utils.iterateSymbols(listeners, (_, o: ListenerInfo) => {\n        const path = utils.getPath('output', o)\n        utils.runCallback(o.callback, path,  {}, value)\n    })\n}\n\nexport function setters (info: ListenerInfo, collection: ListenerPool, lookups?: ListenerLookups) {\n\n    const thisValue = this \n    return handler(info, collection['setters'], (value, parent) => {\n\n        let val = value\n        if (!parent) return\n\n        if (!parent[isProxy]) { \n\n            let redefine = true\n            try {\n                delete parent[info.last] // removing original definition\n            }  catch (e) {\n                console.error('Unable to redeclare setters. May already be a dynamic object...')\n                redefine  = false\n            }\n\n            if (redefine) {\n                try {\n                    Object.defineProperty(parent, info.last, {\n                        get: () => val,\n                        set: async (v) => {\n                            const isFunction = typeof val === 'function'\n                            val = v\n                            if (!isFunction) {\n                                const listeners = Object.assign({}, collection['setters'][utils.getPath('absolute', info)])\n                                setterExecution(listeners, v)\n                            }\n                            else val = getProxyFunction.call(thisValue, info, collection, val)\n                        },\n                        enumerable: true,\n                        configurable: true // TODO: Ensure that you are removing later...\n                    })\n                } catch (e) {\n                    throw e\n                }\n            }\n        }\n    }, lookups)\n}\n\n\nexport function getProxyFunction(info, collection, fn) {\n    return function (...args) {\n        const listeners = collection['functions'][utils.getPath('absolute', info)]\n        return functionExecution(this, listeners, fn ?? info.original, args)\n    }\n}\n\nexport const functionExecution = (context, listeners, func, args) => {\n    listeners = Object.assign({}, listeners)\n    const keys = Object.getOwnPropertySymbols(listeners)\n    const infoTemplate = listeners[keys[0]] ?? {} as ListenerInfo // Info is same, callback is different\n    const executionInfo = infoUtils.get((...args) => func.call(context, ...args), args, infoTemplate.infoToOutput)\n\n    utils.iterateSymbols(listeners, (_, o: ListenerInfo) => {\n        const path = utils.getPath('output', o)\n        utils.runCallback(o.callback, path, executionInfo.value, executionInfo.output)\n    })\n\n    return executionInfo\n}\n\n\nexport function functions (info: ListenerInfo, collection: ListenerPool, lookups?: ListenerLookups) {\n\n    // Register for functions\n    return handler(info, collection['functions'], (_, parent) => {      \n        if (!parent[isProxy]) { \n            parent[info.last] = getProxyFunction.call(this, info, collection)\n\n            // Also register as a setter\n            return setters(info, collection, lookups)\n        }\n    }, lookups)\n}", "import { Info } from \"./types\";\n\ntype GlobalESMonitorState = {\n    state: {[x:string]: {output: any, value: any}},\n    callback?: Function | undefined,\n    info: Info\n}\n\ndeclare global {\n    interface Window { ESMonitorState: GlobalESMonitorState; }\n}\n\n// ------------- Global Inspectable (monitored for all changes) -------------\nglobalThis.ESMonitorState = {\n    state: {},\n    callback: undefined,\n    info: {}\n} as GlobalESMonitorState\n\n\nexport default globalThis.ESMonitorState", "import global from './global'\nimport { ActiveInfo } from './types'\n\nexport const performance = async (callback, args) => {\n    \n    const tic = globalThis.performance.now()\n    const output = await callback(...args)\n    const toc = globalThis.performance.now()\n    \n    return {\n        output,\n        value: toc - tic\n    }\n}\n\nconst infoFunctions = {\n    performance\n}\n\nexport const get = (func, args, info) => {\n\n    let result = {\n        value: { },\n        output: undefined,\n    } as {\n        value: ActiveInfo,\n        output: any\n    }\n    \n    \n    const infoToGet = {...global.info, ...info}\n\n    for (let key in infoToGet)  {\n        if (infoToGet[key] && infoFunctions[key]) {\n            const ogFunc = func\n            func = async (...args) => {\n                const o = await infoFunctions[key](ogFunc, args)\n                result.value[key] = o.value\n                return o.output\n            }   \n        }\n    }\n\n    result.output = func(...args)\n    return result\n}", "export const isProxy = Symbol(\"isProxy\")\n\nexport const fromInspectable = Symbol(\"fromInspectable\")\n\nexport const fromInspectableHandler = Symbol(\"fromInspectableHandler\")", "export const keySeparator = '.'\n\nexport const defaultPath = 'default'\n\nexport const esSourceKey = '__esmpileSourceBundle'\n\nexport const isPrivate = (key) => false //key[0] === '_' // No private keys\n\n\nexport const specialKeys = {\n\n    isGraphScript: '__',\n\n    default: defaultPath,\n\n    start: '__onconnected', // asked to start\n    stop: '__ondisconnected',\n    connected: '__connected', // wait until connected\n    resolved: '__resolved', // wait until fully resolved\n    started: '__started', // wait until started\n\n    hierarchy: '__children',\n    element: '__element',\n    webcomponents: '__define',\n    attributes: '__attributes',\n\n    listeners: {\n        value: '__listeners',\n        branch: '__branch',\n        bind: '__bind',\n        trigger: '__trigger',\n        format: '__format',\n    },\n\n    trigger: '__trigger',\n    compose: '__compose',\n    apply: '__apply',\n\n    // Internal to Compose\n    uri: 'src',\n    reference: 'ref',\n\n    childPosition: '__childposition',\n\n    attribute: 'escomponent',\n    options: '__options',\n\n    parent: '__parent',\n    component: '__component',\n\n    source: '__source',\n    path: '__path',\n\n    animate: '__animate',\n    states: '__states',\n\n    promise: '__childresolved',\n    editor: '__editor',\n\n    flow: '__manager',\n\n    original: '__original',\n\n    resize: '__onresize',    \n    \n\n    proxy: '__proxy'\n}\n", "import { PathFormat, SetValueOptions } from \"../esmonitor/src/types\"\nimport * as standards from '../esc/standards'\n\nconst hasKey = (key, obj) =>  key in obj\n\n\nconst getShortcut = (path, shortcuts, keySeparator) => {\n    const sc = shortcuts[path[0]]\n    if (sc) {\n        const value = sc[path.slice(1).join(keySeparator)]\n        if (value) return value\n    }\n}\n\nexport const getFromPath = (baseObject, path, opts: any = {}) => {\n\n\n    const fallbackKeys = opts.fallbacks ?? []\n    const keySeparator = opts.keySeparator ?? standards.keySeparator\n\n    if (opts.shortcuts) {\n        const shortcut = getShortcut(path, opts.shortcuts, keySeparator)\n        if (shortcut) {\n            if (opts.output === 'info') return { value: shortcut, exists: true, shortcut: true }\n            else return shortcut\n        }\n    }\n\n\n    if (typeof path === 'string') path = path.split(keySeparator).flat()\n    else if (typeof path == 'symbol') path = [path]\n\n    let exists;\n    path = [...path]\n\n    path = path.map(o => (typeof o === \"string\") ? o.split(keySeparator) : o).flat()\n\n\n    let ref =  baseObject\n    \n    for (let i = 0; i < path.length; i++) {\n\n        if (ref) {\n\n            const str = path[i]\n            // Try Inside ES Components\n            if (!hasKey(str, ref) && '__children' in ref) {\n                for (let i in fallbackKeys) {\n                    const key = fallbackKeys[i]\n                    if (hasKey(key, ref)) {\n                        ref = ref[key]\n                        break\n                    }\n                }\n            }\n            \n            // Try Standard Path\n            exists = hasKey(str, ref)\n\n            if (exists) ref = ref[str]\n            else {\n                ref = undefined\n                exists = true\n            }\n        }\n    }\n\n    if (opts.output === 'info') return { value: ref, exists }\n    else return ref\n}\n\n\nexport const setFromPath = (path: PathFormat, value: any, ref:any, opts: SetValueOptions = {}) => {\n    const create = opts?.create ?? false\n    const keySeparator = opts?.keySeparator ?? standards.keySeparator\n\n    if (typeof path === 'string') path = path.split(keySeparator)\n    else if (typeof path == 'symbol') path = [path]\n    path = [...path]\n\n    const copy = [...path]\n    const last = copy.pop() as string | symbol\n\n    if (ref.__children) ref = ref.__children \n\n    for (let i = 0; i < copy.length; i++) {\n        const str = copy[i]  \n        let has = hasKey(str, ref)\n        \n        // Create if not found\n        if (create && !has) {\n            ref[str] = {}\n            has = true\n        }\n\n        // Swap reference\n        if (has) ref = ref[str]\n\n        // Transfer to ESComponents automatically (if not second-to-last key...)\n        if (ref.__children) ref = ref.__children \n    }\n\n    ref[last] = value\n\n    return true\n}", "import * as listenerUtils from \"../listeners\";\nimport { runCallback } from \"../utils\";\nimport { \n    fromInspectable,\n    isProxy \n} from '../globals'\nimport Inspectable from \".\";\nimport define from \"./define\";\n\nexport const functions = function () {\n    const inspectable = this as Inspectable\n    return {\n        apply: async function (target, thisArg, argumentsList) {\n            try {\n\n                let foo = target\n                const isFromInspectable = argumentsList[0]?.[fromInspectable] \n                if (isFromInspectable) {\n                    foo = argumentsList[0].value\n                    argumentsList = argumentsList.slice(1)\n                }\n\n                let listeners = inspectable.listeners.functions\n                // Notify of Function Execution\n                const pathStr = inspectable.path.join(inspectable.options.keySeparator)\n\n                const toActivate =  (listeners) ? listeners[pathStr] : undefined\n                let output, executionInfo: any = {};\n\n                if (toActivate){\n                    executionInfo = listenerUtils.functionExecution(thisArg, toActivate, foo, argumentsList)\n                    output = executionInfo.output\n                } \n                \n                // Default Behavior\n                else {\n                    output = foo.apply(thisArg, argumentsList);\n                    executionInfo = inspectable?.state?.[pathStr]?.value ?? {}\n                }\n\n                \n                // Notify with Proxy Callback\n                const callback = inspectable.options.callback\n\n                runCallback(callback, pathStr, executionInfo, output)\n\n                // Return output to function\n                return output\n\n            } catch (e) {\n                console.warn(`Function failed:`, e, inspectable.path);\n            }\n        }\n    };\n}\n\nexport const objects = function () {\n    const inspectable = this as Inspectable\n    return {\n\n        get (target, prop, receiver) {\n            if (prop === isProxy) return true;\n            return Reflect.get(target, prop, receiver);\n        },\n        \n        set(target, prop, newVal, receiver) {            \n            \n            if (prop === isProxy) return true;\n            const pathStr = [...inspectable.path, prop].join(inspectable.options.keySeparator)\n\n            const isFromProxy = newVal?.[isProxy]\n            const isFromInspectable = newVal?.[fromInspectable]\n            if (isFromInspectable) newVal = newVal.value\n\n            const listeners = inspectable.listeners.setters \n\n            // Set New Listeners Automatically (if global callback is specified)\n            const desc = Object.getOwnPropertyDescriptor(target, prop)\n            const createListener = desc && !desc.get && !desc.set\n\n            if (createListener) {\n                if (typeof inspectable.options.globalCallback === 'function') {\n                    const id = inspectable.path[0]\n                    define.call(inspectable, prop, true) // Get notified when changed on the target\n                    listenerUtils.set('setters', pathStr, newVal, inspectable.options.globalCallback, {[id]: inspectable.root}, inspectable.listeners, inspectable.options)\n                }\n            }\n\n\n            // Create Proxies for Objects\n            if (newVal) {\n                const newProxy = inspectable.create(prop, target, newVal)\n                if (newProxy) newVal = newProxy\n            }\n\n            const toActivate = !isFromProxy\n            if (\n                listeners \n                && toActivate // Don't manually trigger for proxies\n                && !inspectable.newKeys.has(prop) // Don't manually trigger for new keys\n            ) {\n                const toActivate = listeners[pathStr]\n                if (toActivate) listenerUtils.setterExecution(toActivate, newVal) // run callbacks\n            }\n\n            const callback = inspectable.options.callback\n            const info = inspectable?.state?.[pathStr]?.value ?? {}\n            runCallback(callback, pathStr, info, newVal)\n\n            if (isFromInspectable || !toActivate) return true\n            else return Reflect.set(target, prop, newVal, receiver);\n        },\n        // deleteProperty(target, key) {\n        //     console.log('Delete', key)\n        //     // if (!(key in target)) { return false; }\n        //     // return target.removeItem(key);\n        //     return true\n        // }\n    }\n}\n", "import { fromInspectable, isProxy } from \"../globals\"\n\nfunction define(key, registerAsNewKey: boolean) {\n\n    const inspectable = this\n\n    const target = this.target\n\n    if (!this.parent) {\n        let value = target[key]\n\n        // Intercept functions\n        if (typeof value === 'function') {\n            target[key] = async (...args) => await this.proxy[key]({ [fromInspectable]: true, value }, ...args)\n        } \n\n        // Basic Getter / Setter for Original Input\n        else {\n\n            try {\n                Object.defineProperty(target, key, {\n                    get: () => value,\n\n                    // Support setting from inspectable too\n                    set: function (val) {\n                        value = val\n                        inspectable.proxy[key] = {[isProxy]: this[isProxy], [fromInspectable]: true, value: val}\n                    },\n                    enumerable: true,\n                    configurable: true // TODO: Ensure that you are removing later...\n                })\n\n            } catch (e) {\n                console.error(`Could not reassign ${key} to a top-level setter...`)\n            }\n        }\n    }\n\n    if (registerAsNewKey) this.newKeys.add(key)\n\n    // Create More Proxies Inside\n    this.create(key, target, undefined, true)\n}\n\nexport default define;", "import * as handlers from './handlers';\nimport * as check from '../../../common/check'\nimport { ArrayPath, ListenerRegistry, InspectableOptions } from '../types';\nimport * as standards from '../../../esc/standards'\nimport { setFromPath } from '../../../common/pathHelpers';\nimport { isProxy } from '../globals';\nimport define from './define';\n\nexport type InspectableProxy = ProxyConstructor & {\n    __proxy: ProxyConstructor,\n    __esInspectable: Inspectable\n}\n\n\nconst canCreate = (parent, key?, val?) => {\n\n    try {\n        if (val === undefined) val = parent[key]\n    } catch (e) {\n        return e\n    }\n\n    // Check if we already have a proxy\n    const alreadyIs = parent[key] && parent[key][isProxy]\n    if (alreadyIs) return false // Already a proxy\n\n\n    const type = typeof val\n    const isObject = type === 'object'\n    const isFunction = type == 'function'\n    \n\n    // Only listen to objects and functions\n    const notObjOrFunc = !val || !(isObject || isFunction )\n    if (notObjOrFunc) return false\n\n    if (val instanceof Element) return false // Avoid HTML elements\n    if (val instanceof EventTarget) return false // Avoid HTML elements\n\n    const isESM = isObject && check.esm(val)\n\n    if (isFunction) return true\n    else {\n        \n        const desc = Object.getOwnPropertyDescriptor(parent, key)\n\n        if (desc &&((desc.value && desc.writable) || desc.set)) {\n            if (!isESM) return true // Cannot create a Proxy object for ESM\n        } else if (!parent.hasOwnProperty(key)) return true\n    }\n\n    return false\n\n}\n\nexport default class Inspectable {\n\n    path: ArrayPath = []\n    parent?: Inspectable\n    options: InspectableOptions\n    proxy: ProxyConstructor\n    listeners: Partial<ListenerRegistry> = {}\n    newKeys = new Set()\n\n    target: any\n    root: any\n\n    state: {[x:string]: any} = {}\n\n    constructor ( target:any = {}, opts: Partial<InspectableOptions> = {}, name?, parent?) {\n\n        if (!opts.pathFormat) opts.pathFormat = 'relative'\n        if (!opts.keySeparator) opts.keySeparator = standards.keySeparator\n\n        // -------------- Only Listen to ES Components --------------\n\n        if (target.__proxy) this.proxy = target.__proxy\n        else if (target[isProxy]) this.proxy = target\n        else {\n\n            this.target = target\n            this.options = opts as InspectableOptions\n            this.parent = parent\n\n            if (this.parent) {\n                this.root = this.parent.root\n                this.path = [...this.parent.path]\n                this.state = this.parent.state ?? {} // Share state with the parent\n            } else this.root = target\n\n            if (name) this.path.push(name)\n            if (this.options.listeners) this.listeners = this.options.listeners\n\n            if (this.options.path) {\n                if (this.options.path instanceof Function) this.path = this.options.path(this.path)\n                else if (Array.isArray(this.options.path)) this.path = this.options.path\n                else console.log('Invalid path', this.options.path)\n            }\n\n            // remove symbols from the path\n            if (this.path) this.path = this.path.filter(str => typeof str === 'string')\n\n\n            if (!this.options.keySeparator) this.options.keySeparator = standards.keySeparator\n\n            let type = this.options.type\n            if (type != 'object') type = (typeof target === 'function')  ? 'function' : 'object';\n            const handler =  handlers[`${type}s`].call(this)\n\n            this.proxy = new Proxy(target, handler)\n\n            // Set status on original\n            Object.defineProperty(target, '__proxy', { value: this.proxy, enumerable: false })\n            Object.defineProperty(target, '__esInspectable', { value: this, enumerable: false })\n\n\n            // Create Nested Inspectable Proxies\n            for (let key in target) define.call(this, key)\n        }\n\n        return this.proxy as any // Replace class passed to the user with the proxy\n\n    }\n\n    set = (path, info, update) => {\n\n        this.state[path] = {\n            output: update,\n            value: info,\n        }\n\n        // Set on Proxy Object\n        setFromPath(path, update, this.proxy, { create: true });\n    }\n\n    check = canCreate\n\n    create = (key, parent, val?, set = false) => {\n\n        const create = this.check(parent, key, val)\n        if (val === undefined) val = parent[key] \n\n        if (create && !(create instanceof Error)) {\n            parent[key] = new Inspectable(val, this.options, key, this)\n            return parent[key]\n        }\n\n        if (set) {\n            try {\n                this.proxy[key] = val ?? parent[key] // Notify on initialization\n            } catch (e) {\n                const isESM = check.esm(parent)\n                const path = [...this.path, key]\n                console.error(`Could not set value (${path.join(this.options.keySeparator)})${isESM ? ' because the parent is an ESM.' : ''}`, isESM ? '' : e)\n            }\n        }\n\n        return\n    }\n}", "import { setFromPath } from \"../../common/pathHelpers\"\nimport Inspectable from \"./inspectable\"\nimport { MonitorOptions, SetFromOptionsType } from \"./types\"\n\nexport const setFromOptions = (path, value, baseOptions: MonitorOptions, opts: SetFromOptionsType) => {\n\n        const ref = opts.reference\n        \n        const id = (Array.isArray(path)) ? path[0] : (typeof path === 'string') ? path.split(baseOptions.keySeparator)[0] : path\n        let isDynamic = opts.hasOwnProperty('static') ? !opts.static : false\n\n        if (isDynamic && !globalThis.Proxy) {\n            isDynamic = false\n            console.warn('Falling back to using function interception and setters...')\n        }\n\n        if (isDynamic) {\n            value = new Inspectable(value, {\n                pathFormat: baseOptions.pathFormat,\n                keySeparator: baseOptions.keySeparator,\n                listeners: opts.listeners,\n                path: (path) => path.filter((str) => !baseOptions.fallbacks || !baseOptions.fallbacks.includes(str)),\n                // listenDeeper: ['__path'],\n                // listenDeeper: ['test']\n            }, id)\n        }\n\n        let options = {keySeparator: baseOptions.keySeparator, ...opts}\n        setFromPath(path, value, ref, options)\n\n        return value\n    }", "import { esm } from './check.js'\n\nexport const drillSimple = (obj, callback, options) => {\n\n    let accumulator = options.accumulator\n    if (!accumulator) accumulator = options.accumulator = {}\n\n    const ignore = options.ignore || []\n    const path = options.path || []\n    const condition = options.condition ||  true\n\n    const seen = []\n    const fromSeen = []\n    \n    let drill = (obj, acc={}, globalInfo) => {\n\n        for (let key in obj) {\n            if (ignore.includes(key)) continue\n            const val = obj[key]\n            const newPath = [...globalInfo.path, key]\n\n            const info = {\n                typeof: typeof val,\n                name: val?.constructor?.name,\n                simple: true,\n                object: val && typeof val === 'object',\n                path: newPath\n            }\n            if (info.object) {\n                const name = info.name\n\n                const isESM = esm(val) // make sure to catch ESM\n\n                if (isESM || name === 'Object' || name === 'Array') {\n                    info.simple = true\n                    const idx = seen.indexOf(val)\n                    if (idx !== -1) acc[key] =fromSeen[idx]\n                    else {\n                        seen.push(val)\n\n                        const pass = condition instanceof Function ? condition(key, val, info) : condition\n                        info.pass = pass\n                        \n                        acc[key] = callback(key, val, info)\n\n                        if (pass) {\n                            fromSeen.push(acc[key])\n                            acc[key] = drill(val, acc[key], {...globalInfo, path: newPath}) // Drill simple objects\n                        }\n                    }\n                } \n                else {\n                    info.simple = false\n                    acc[key] = callback(key, val, info)\n                }\n            } else acc[key] = callback(key, val, info)\n        } \n\n        return acc\n    }\n\n    return drill(obj, accumulator, { path })\n}", "import * as check from '../../common/check.js'\nimport Poller from './Poller.js'\n\nimport { PathFormat, InternalOptions, ListenerRegistry, ArrayPath, MonitorOptions, SetFromOptionsType } from './types'\nimport * as listeners from './listeners'\nimport { iterateSymbols, getPath, getPathInfo } from './utils.js'\nimport { drillSimple } from '../../common/drill.js'\nimport { getFromPath } from '../../common/pathHelpers.js'\n\nimport * as standards from '../../esc/standards'\nimport { setFromOptions } from './optionsHelpers.js'\n\nconst createLookup = () => {\n    return { symbol: {}, name: {} }\n}\n\nexport default class Monitor {\n\n    poller = new Poller()\n\n    options: MonitorOptions = {\n        pathFormat: 'relative',\n        keySeparator: standards.keySeparator,\n    }\n    \n    listeners: ListenerRegistry = {\n        polling: this.poller.listeners,\n        functions: {},\n        setters: {},\n        lookup: createLookup()\n    }\n\n    references: {\n        [x:string | symbol]: {\n            [x:string | symbol]: any\n        }\n    } = {}\n\n    constructor(opts:Partial<MonitorOptions>={}){\n\n        // Make listener lookup non-enumerable\n        Object.defineProperty(this.listeners, 'lookup', {\n            value: createLookup(),\n            enumerable: false,\n            configurable: false\n        })\n\n        Object.assign(this.options, opts)\n        this.poller.setOptions(opts.polling)\n    }\n\n    get = (path, output?, reference = this.references, throwError = true) => {\n\n        return getFromPath(reference, path, {\n            keySeparator: this.options.keySeparator,\n            fallbacks: this.options.fallbacks,\n            output\n        }, throwError)\n    }\n\n    set = (path, value, opts: SetFromOptionsType= {}) => {\n        const optsCopy = {...opts}\n        if (!optsCopy.reference) optsCopy.reference = this.references\n        if (!optsCopy.listeners) optsCopy.listeners = this.listeners\n\n        return setFromOptions(path, value, this.options, optsCopy)\n    }\n\n    // A simple wrapper for listen()\n    on = (absPath: PathFormat, callback) => {\n        const info = getPathInfo(absPath, this.options)\n        return this.listen(info.id, callback, info.path)\n    }\n\n\n    getInfo = (label, callback, path, original) => {\n\n        const info = listeners.info(label, callback, path, original, this.references, this.listeners, this.options)\n        const id = Math.random()\n        const lookups = this.listeners.lookup\n        const name = getPath('absolute', info)\n        lookups.symbol[info.sub] = {\n            name,\n            id\n        }\n\n        if (!lookups.name[name]) lookups.name[name] = {}\n        lookups.name[name][id] = info.sub\n        \n        return info\n    }\n\n    listen = (id, callback, path: PathFormat = [], __internal: Partial<InternalOptions> = {}) => {\n\n\n        if (typeof path === 'string') path = path.split(this.options.keySeparator)\n        else if (typeof path === 'symbol') path = [path]\n\n        const arrayPath = path as ArrayPath\n\n        let baseRef = this.get(id)\n\n        if (!baseRef) {\n            console.error(`Reference does not exist.`, id)\n            return\n        }\n\n\n        if (!__internal.poll) __internal.poll = check.esm(baseRef) // Inherit ESM status\n        if (!__internal.seen) __internal.seen = []\n\n        const __internalComplete = __internal as InternalOptions\n\n        // Drill Reference based on Path\n        const thisPath = [id, ...arrayPath]\n        const ref = this.get(thisPath)\n\n\n        // Create listeners for Objects\n        const toMonitorInternally = (val, allowArrays=false) => {\n            const first = val && typeof val === 'object'\n            \n            // Only Objects\n            if (!first) return false\n\n            // No Elements\n            const isEl = val instanceof Element\n            if(isEl) return false\n\n            if (allowArrays) return true\n            else return !Array.isArray(val)\n        }\n\n\n        // ------------------ Create Subscription ------------------\n\n        // Case #1: Subscribe to each object property individually\n        let subs = {}\n        const subscribeAll = toMonitorInternally(ref, true)\n        if (subscribeAll) {\n\n            if (ref.__esInspectable) ref.__esInspectable.options.globalCallback = callback\n\n            drillSimple(ref, (_, __, drillInfo) => {\n                if (drillInfo.pass) return \n                else {\n                    const fullPath = [...arrayPath, ...drillInfo.path]\n                    const internalSubs = this.listen(id, callback, fullPath, __internalComplete) // subscribe to all\n                    Object.assign(subs, internalSubs)\n                }\n            }, {\n                condition: (_, val) => toMonitorInternally(val)\n            })\n        } \n\n        // Case #2: Subscribe to specific property\n        let info;\n        let success = false\n        try {\n            \n            // Force Polling\n            info = this.getInfo(id, callback, arrayPath, ref)\n\n            if (info) {\n                if (__internalComplete.poll) success = this.poller.add(info)\n\n                // Direct Methods\n                else {\n\n                    let type = 'setters' // trigger setters\n                    if (typeof ref === 'function') type = 'functions' // intercept function calls\n\n                    success = this.add(type, info)\n                }\n            }\n            \n        } catch (e) {\n            console.error('Fallback to polling:', path, e)\n            success = this.poller.add(info)\n            // __internalComplete.poll = true\n        }\n        \n\n        if (success) {\n            subs[getPath('absolute', info)] = info.sub\n\n            // Notify User of Initialization\n            if (this.options.onInit instanceof Function) {\n                const executionInfo = {}\n                for (let key in info.infoToOutput) executionInfo[key] = undefined\n                this.options.onInit(getPath('output', info), executionInfo)\n            }\n\n            return subs\n        } else {\n            console.error('Failed to subscribe to:', path)\n            return\n        }\n    }\n\n    add = (type, info) => {\n        if (listeners[type]) return listeners[type](info, this.listeners, this.listeners.lookup)\n        else {\n            this.listeners[type][getPath('absolute', info)][info.sub] = info\n            return true\n        }\n    }\n\n    // Unsubscribe from a subscription\n    remove = (subs) => {\n\n        // Clear All Subscriptions if None Specified\n        if (!subs) {\n            subs = {\n                ...this.listeners.functions,\n                ...this.listeners.setters,\n                ...this.listeners.polling,\n            }\n        }\n\n\n        if (typeof subs!== 'object') subs = { sub: subs }\n\n        for (let key in subs) {\n\n            let innerSub = subs[key]\n\n            const handleUnsubscribe = (sub) => {\n                const res = this.unsubscribe(sub)\n                if (res === false) console.warn(`Subscription for ${key} does not exist.`, sub)\n            }\n\n            if (typeof innerSub !== 'symbol') iterateSymbols(innerSub, handleUnsubscribe)\n            else handleUnsubscribe(innerSub)\n        }\n\n        return true \n    }\n\n    unsubscribe = (sub) => {\n            const info = this.listeners.lookup.symbol[sub]\n            const absPath = info.name\n\n            // Remove from Polling listeners\n            const polling = this.poller.get(sub)\n\n            const funcs = this.listeners.functions[absPath]\n            const func = funcs?.[sub]\n            const setters = this.listeners.setters[absPath]\n            const setter = setters?.[sub]\n\n            if (polling) this.poller.remove(sub)\n            \n            // Reassign to Original Function\n            else if (func) {\n                delete funcs[sub]\n                if (!Object.getOwnPropertySymbols(funcs).length) {\n                    Object.defineProperty(func.parent, func.last, {\n                        value: func.original,\n                        writable: true\n                    })\n                    delete this.listeners.functions[absPath]\n                }\n            }\n            \n            // Transition Back to Standard Object\n            else if (setter) {\n                delete setters[sub]\n                if (!Object.getOwnPropertySymbols(setters).length) {\n                    const parent = setter.parent\n                    if (parent) {\n                        const last = setter.last\n                        const value = parent[last] // Parent always exists!\n                        Object.defineProperty(parent, last, { value, writable: true })\n                    }\n                    delete this.listeners.setters[absPath]\n                }\n            } else return false\n\n            delete this.listeners.lookup.symbol[sub] // Remove from global listener collection\n\n            const nameLookup = this.listeners.lookup.name[info.name]\n            delete nameLookup[info.id]\n            if (!Object.getOwnPropertyNames(nameLookup).length )delete this.listeners.lookup.name[info.name]\n\n    }\n}", "import Monitor from './Monitor'\n\n\n\nexport default Monitor \n\n// export {\n//     Monitor\n// }", "import { drillSimple } from \"./drill\"\n\nexport const deep = (obj, opts={}) => {\n\n    if (typeof obj === 'object') {\n        if (Array.isArray(obj)) {\n            obj = [...obj] // Clone the orignal object\n            opts.accumulator = []\n        } else {\n            obj = {...obj} // Clone the orignal object\n            opts.accumulator =  {}\n        }\n    } else return obj\n\n    drillSimple(obj, (key, val, info) => {\n        if (info.simple && info.object) return Array.isArray(val) ? [] : {}\n        // else if (info.typeof === 'function') return val.bind({})\n        else return val\n    }, opts)\n\n    return opts.accumulator\n}", "const isPromise = (o) => typeof o === 'object' && typeof o.then === 'function'\n\n// Resolve if promise or object\nexport const resolve = (object, callback?) => {\n\n    // can resolve arrays with promises\n    if (typeof object === 'object' && Array.isArray(object) && object.find(v => isPromise(v))) object = Promise.all(object)\n\n    // resolves with or without callback \n    if (isPromise(object)) {\n        return new Promise(resolvePromise => {\n            object.then(async (res) => {\n                const output = (callback) ? callback(res) : res\n                resolvePromise(output)\n            })\n        })\n    } else {\n        return (callback) ? callback(object) : object\n    }\n}\n\n// ------------ Merge ------------\n// Merge individual object keys AND nest functions to maintain their bindings\n// -------------------------------\n\nexport const merge = (\n    main, \n    override, \n\n    path: any[] = [],  // for debugging only\n    updateOriginal: boolean = false, // choose to update original\n    flipPrecedence: boolean = false, // flip precedence of merge\n    composeFunctions: boolean = false, // use composition on functions\n    seen: any[]=[], // for circular references\n) => {\n\n    let copy = (updateOriginal) ? main : Object.assign({}, main) // choose to copy\n\n    if (flipPrecedence) [copy, override] = [override, copy]\n\n    if (override){\n\n        const keys = Object.keys(copy)\n        const newKeys = new Set(Object.keys(override))\n\n        keys.forEach(k => {\n            newKeys.delete(k)\n\n            const thisPath = [...path, k]\n\n            // Merge individual object keys\n            if (typeof override[k] === 'object' && !Array.isArray(override[k])) {\n\n                    // Track seen so you don't drill infinitely on circular references\n                    if (typeof copy[k] === 'object') {\n                        const val = copy[k]\n                        const idx = seen.indexOf(val)\n                        if (idx !== -1) copy[k] = seen[idx]\n                        else {\n                            seen.push(val)\n                            copy[k] =  merge(val, override[k], thisPath, updateOriginal, false, composeFunctions, seen)\n                        }\n                    }\n                    else copy[k] = override[k]\n            } \n\n            // Nest functions\n            else if (typeof override[k] === 'function') {\n\n                const original = copy[k]\n                const isFunc = typeof original === 'function'\n                if (isFunc && !original.functionList) original.functionList = [original]\n\n                const newFunc = override[k]\n                const composeFunction = newFunc.__compose === true\n\n                // Direct Function Replacement\n                if (!isFunc || (!composeFunctions && !composeFunction)) copy[k] = newFunc\n                \n                // Function Composition\n                else {\n                    if (!original.functionList.includes(newFunc)) {\n                        const func = copy[k] = function(...args) {\n                            const res = original.call(this, ...args);\n                            return newFunc.call(this, ...Array.isArray(res) ? res : [res]);\n                        } as Function & {functionList?: Function[]}\n                        if (!func.functionList) func.functionList = [original]\n                        func.functionList.push(override)\n                    } else console.warn(`This function was already composed into ${thisPath.join('.')}. Ignoring duplicate.`)\n                }\n\n            }\n            \n            // Replace values and arrays\n            else if (k in override) copy[k] = override[k]\n        })\n\n        newKeys.forEach(k => copy[k] = override[k])\n    }\n\n    return copy // named exports\n}", "import { Graph } from \"../../Graph2\"\n\n\n// Special Key Definition\nconst defaultPath = 'default'\nconst operatorPath = '__operator'\nconst specialKeys = {\n    path: '__path',\n    isGraphScript: '__',\n    listeners: {\n        value: '__listeners',\n        branch: '__branch',\n        bind: '__bind',\n        trigger: '__trigger',\n        format: '__format',\n    },\n}\n\n// Symbols to Recognize\nconst listenerObject = Symbol('listenerObject')\nconst toSet = Symbol('toSet')\nconst subscriptionKey = Symbol('subscriptionKey')\nconst configKey = Symbol('configKey')\nconst toResolveWithKey = Symbol('toResolveWithKey')\n\n// Configuration Options\nconst isConfigObject = (o) => specialKeys.listeners.format in o || specialKeys.listeners.branch in o || specialKeys.listeners.trigger in o || specialKeys.listeners.bind in o\n\n// Status Definitions\nconst initializedStatus = 'INITIALIZED'\nconst registeredStatus = 'REGISTERED'\n\n// Global References\nconst globalFrom = {} as any\nconst globalTo = {} as any\nconst globalActive = {}\n\nclass Edgelord {\n\n    original = {};\n    active = {}\n    globals: any = {}\n    context: any = {\n        options: {},\n    }\n    rootPath: string = ''\n    status = ''\n\n    graph: Graph\n    \n    #triggers: any[] = []\n    #queue: any[] = []\n    #toResolveWith: Edgelord\n\n    constructor (listeners?, root?, context?) {\n        if (listeners || root || context) this.setInitialProperties(listeners, root, context)\n    }\n\n    setInitialProperties = (listeners = {}, root, context={}) => {\n\n        Object.assign(this.context, context)\n        if (root) this.rootPath = root\n\n        if (!this.context.options.keySeparator) this.context.options.keySeparator = this.context.monitor.options.keySeparator\n        \n        this.original = listeners\n\n        const globals = [{name: 'active', ref: globalActive}, {name: 'from', ref: globalFrom}, {name: 'to', ref: globalTo}]\n        globals.forEach((o) => {\n            if (!o.ref[this.context.id]) o.ref[this.context.id] = {}\n            this.globals[o.name] = o.ref[this.context.id]\n        })\n\n        this.#toResolveWith = this.getManager()\n        this.runEachListener(listeners, this.addToGlobalLog)\n    }\n\n    getManager = (mode ='from') => {\n        \n            // Check if a higher-level listener is sending information from this root context\n            let target = (mode === 'to') ? this.globals.to : this.globals.from\n            this.rootPath.split(this.context.options.keySeparator).forEach((key) => {\n                if (!target[key]) target[key] = {}\n                target = target[key]\n            })\n\n            // if (Object.keys(target).length) this.#sendsToExternalGraph = true\n            return target[toResolveWithKey] ?? this\n    }\n\n    onStart = (f) => {\n        const res = this.#toResolveWith\n        const isSame = res === this\n        if (isSame) {\n            if (this.status === initializedStatus) f()\n            else this.#queue.push(f)\n        } else res.onStart(f)\n    }\n\n    runEachListener = (listeners, callback) => {\n        if (!callback) return\n        for (const first in listeners) {\n            const second = listeners[first]\n\n            if (!second) {\n                console.warn('Skipping empty listener:', first)\n                continue;\n            }\n\n            // NOTE: Listener sheets are to / from\n            if (second && typeof second === 'object') {\n                const from = second\n                const to = first\n                for (let fromPath in from) {\n                    callback(\n                        fromPath,  // From Path\n                        to, // To Path\n                        from[fromPath] // Value\n                    )\n                }\n            } \n            \n            // Immediate Absolute Paths Only\n            // NOTE: Direct listeners are from / to\n            else {\n                const from = first\n                const to = second\n\n                const typeOf = typeof to\n                if (typeOf === 'function') callback(from, '', to)\n                else if (typeOf === 'string') callback(from, to, to)\n                else console.error('Improperly Formatted Listener', to)\n            }\n        }\n\n    }\n\n    register = (listeners = this.original) =>  {\n\n        this.runEachListener(listeners, this.add)\n        this.status = registeredStatus\n    }\n\n    #initialize = (o) => {\n        const res = this.context.monitor.get(o.path, 'info')\n        if (typeof res.value === 'function') {\n            const args = (Array.isArray(o.args)) ? o.args : [o.args]\n            res.value(...args)\n        }\n        else console.error('Cannot yet trigger values...', o)\n    }\n\n    initialize = (o?) => {\n        if (!this.status) this.#triggers.push(o)\n        else if (this.status === registeredStatus) {\n            this.status = initializedStatus\n            this.#triggers.forEach(this.#initialize)\n            this.#queue.forEach(f => f())\n            this.#queue = []\n            this.#triggers = []\n        } else this.#initialize(o)\n    }\n\n    start = () => {\n        this.register()\n        this.initialize()\n    }\n\n    #getAbsolutePath = (name) => {\n        const sep = this.context.monitor.options.keySeparator\n        return (\n            !name \n            || !this.rootPath \n            || (this.rootPath === name.slice(0, this.rootPath.length) && name[this.rootPath.length] === sep)\n        ) ? name : [this.rootPath, name].join(sep)\n    }\n\n    #getPathInfo = (path) => {\n\n        const output = {\n            absolute: {},\n            relative: {}\n        } as any\n\n        // Transform name to absolute \n        console.log('OG Path', path)\n        path =  this.#getAbsolutePath(path)\n        console.log('Got Path', path)\n        let rel = this.rootPath ? path.replace(`${this.rootPath}.`, '') : path\n        const baseArr = path.split(this.context.options.keySeparator)\n        output.absolute.array = [this.context.id, ...baseArr]\n        output.relative.array = rel.split(this.context.options.keySeparator)\n\n        let obj = this.context.monitor.get(output.relative.array, undefined, this.context.instance, false) // Allow for getting properties\n        \n        // Fallback to direct graph reference\n        if (this.context.graph) {\n\n            // Correct for paths that are relative to the bound object\n            if (obj && this.context.bound) {\n                output.absolute.array = [this.context.id, this.context.bound, ...output.absolute.array.slice(1)]\n                output.relative.array.unshift(this.context.bound)\n            } \n            \n            // Assume you are targeting the global graph\n            else if (!obj) {\n                const rel = output.relative.array.join(this.context.options.keySeparator)\n                obj = this.context.graph.get(rel)\n            }\n        }\n        \n        const isGraphScript = obj && typeof obj === 'object' && specialKeys.isGraphScript in obj\n\n        // Updates based on default / operators\n        if (isGraphScript) {\n\n            // Fallback to operator updates\n            if (obj[operatorPath]){\n                output.absolute.array.push(operatorPath)\n                output.relative.array.push(operatorPath)\n            } \n            \n            // Fallback to default updates\n            else if (obj[defaultPath]){\n                output.absolute.array.push(defaultPath)\n                output.relative.array.push(defaultPath)\n            } \n        }\n\n        output.absolute.value = output.absolute.array.slice(1).join(this.context.options.keySeparator) // update path\n        output.relative.value = output.relative.array.join(this.context.options.keySeparator) // update path\n        \n        return output\n    }\n\n    add = (from, to, value: any = true, subscription?) => {\n\n        console.log('Adding', from, to, value, subscription)\n        if (!value) return // Any non-truthy value is not accepted\n\n        const fromInfo = this.#getPathInfo(from)\n        const toInfo = this.#getPathInfo(to)\n\n        // Check global for subscription\n        const absPath = fromInfo.absolute.value\n        if (!subscription) subscription = this.globals.active[absPath]?.[subscriptionKey]\n\n        // Only subscribe once\n        if (!subscription) {\n            subscription =this.context.monitor.on(fromInfo.absolute.array, (path, _, update) => this.activate(path, update), {\n                ref: this.context.instance,\n                path: fromInfo.relative.array\n            })\n            // console.log('Subscribing', fromInfo.absolute.array, subscription)\n        }\n\n        // Use updated string value if modified\n        if (typeof value == 'string') value = toInfo.absolute.array.slice(1).join(this.context.options.keySeparator)\n\n        const info = {\n            value,\n            [listenerObject]: true\n        }\n\n        const refs = [this.active, this.globals.active]\n\n        refs.forEach(ref => {\n            if(!ref[absPath]) ref[absPath] = {}\n            const base = ref[absPath]\n            if (!base[subscriptionKey]) {\n                Object.defineProperty(base, subscriptionKey, {\n                    value: subscription,\n                    configurable: true\n                })\n            }\n            base[toInfo.absolute.value] = info\n        })\n\n        // // Update Original\n        // let base = this.original[toInfo.relative.value]\n        // if (!base) base = this.original[toInfo.relative.value] = {}\n        // if (typeof base !== 'object') {\n        //     if (typeof base === 'function') base = this.original[toInfo.relative.value] = {[Symbol('function listener')]: base} // Move function to arbitrary key\n        //     else base = this.original[toInfo.relative.value] = {[base]: true} // Move string to  a complex listener\n        // }\n        // base[fromInfo.relative.value] = value // complex listener\n\n        // Initalize triggers (possible on higherl-level manager)\n        const args = value[specialKeys.listeners.trigger]\n        if (args) this.#toResolveWith.initialize({\n            path: fromInfo.absolute.array,\n            args\n        })\n\n        this.addToGlobalLog(absPath)\n\n\n        return info\n    }\n\n    addToGlobalLog = (path, mode = 'from') => {\n\n        const absolutePath = this.#getAbsolutePath(path)\n\n        // Register in global registry\n        let target = (mode === 'to') ? this.globals.to : this.globals.from\n        const globalPath = absolutePath.split(this.context.options.keySeparator)\n        globalPath.forEach((key) => {\n            if (!target[key]) target[key] = {}\n            target = target[key]\n            if (!(target[toResolveWithKey])) target[toResolveWithKey] = this // Always set with the lowest\n        })\n\n    }\n\n    // Local removal\n    remove = (from, to) => {\n        const fromInfo = this.#getPathInfo(from)\n        const toInfo = this.#getPathInfo(to)\n\n        const path = [fromInfo.absolute.value, toInfo.absolute.value]\n        const toRemove = [\n            { ref: this.active, path },\n            { ref: this.globals.active, path, unlisten: true }, // Remove subscription if required\n            // { ref: this.original, path: [toInfo.relative.value, fromInfo.relative.value] }, // Just removing from the list\n        ]\n\n\n        toRemove.forEach(o => {\n            const { ref, path, unlisten } = o\n\n            let base = ref[path[0]]\n\n            if (typeof base === 'object') {\n                delete base[path[1]] // complex listener\n                if (Object.keys(base).length === 0) {\n                    delete ref[path[0]]\n                    const sub = base[subscriptionKey]\n                    if (unlisten && sub) {\n                        this.context.monitor.remove(sub) // Cleaning up subscriptions (active only)\n                    }\n                    delete base[subscriptionKey]\n                }\n\n            } else delete ref[path[0]] // simple listener\n\n        })\n\n    }\n\n    // Local clearing\n    clear = (name) => {\n        const value = this.#getAbsolutePath(name)\n\n        Object.keys(this.active).forEach(from => {\n            Object.keys(this.active[from]).forEach(to => {\n                if (\n                    !value\n                    || from.slice(0, value.length) === value // Matches from\n                    || to.slice(0, value.length) === value // Matches to\n                ) this.remove(from, to)\n            })\n        })\n    }\n\n    has = (from, ref=this.active) => !!ref[from]\n\n    get = (from, ref=this.active) => ref[from]\n\n\n\n    // ----------------- Global Flow Activation Management -----------------\n    activate = (from, update) => {\n\n    const listenerGroups = [{\n        info: this.get(from, this.globals.active),\n        name\n    }]\n\n    listenerGroups.forEach(group => {\n\n        const info = group.info\n\n        if (info) {\n\n            if (info[listenerObject]) {\n\n                this.pass(from, {\n                    value: info.value,\n                    parent: this.active,\n                    key: group.name,\n                    subscription: info.subscription,\n                    __value: true\n                }, update)\n            } else if (typeof info === 'object') {\n                for (let key in info) {\n                    this.pass(from, {\n                        parent: info,\n                        key,\n                        subscription: info[key].subscription,\n                        value: info[key].value,\n                    }, update)\n                }\n            } else console.error('Improperly Formatted Listener', info)\n        }\n    })\n}\n\npass = (from, target, update) => {\n\n    const id = this.context.id\n    const isValue = target?.__value\n    let parent = target.parent\n    let to = target.key\n\n\n    // const rootArr = root.split(this.context.options.keySeparator)\n    const info = target.parent[to]\n    target = info.value\n\n    let config = info?.[configKey] // Grab config\n\n    let ogValue = target\n    const type = typeof target\n\n    const checkIfSetter = (path, willSet) => {\n\n        const info = this.context.monitor.get(path, 'info')\n        if (info.exists) {\n            const val = info.value\n            const noDefault = typeof val !== 'function' && !val?.default\n            const value = (noDefault) ? toSet : val\n\n            const res = { value }\n\n            if (willSet) {\n                target = res.value\n                parent[to] = res\n            }\n\n            return res\n        } else return { value: undefined } //, root: undefined }\n\n    }\n\n    const transform = (willSet?) => {\n        const fullPath = [id]\n        // if (root) fullPath.push(...rootArr) // correcting for relative string\n        fullPath.push(...to.split(this.context.options.keySeparator))\n        return checkIfSetter(fullPath, willSet)\n    }\n\n    // ------------------ Grab Correct Target to Listen To ------------------\n\n\n    const getPathArray = (latest) => {\n        const path = [id]\n        const topPath: any[] = []\n        if (this.rootPath) topPath.push(...this.rootPath.split(this.context.options.keySeparator)) // correcting for relative string\n        topPath.push(...latest.split(this.context.options.keySeparator))\n        path.push(...topPath)\n        return path\n    }\n\n    // Confirmation of the target\n    if (typeof target === 'boolean') {\n        if (!isValue) transform(true)\n        else console.error(`Cannot use a boolean for ${specialKeys.listeners.value}...`)\n    }\n\n    // Name of the target\n    else if (type === 'string') {\n        const path = getPathArray(ogValue)\n        checkIfSetter(path, true)\n\n        if (isValue) {\n            parent[to] = { [ogValue]: parent[to] }\n            to = ogValue\n        }\n    }\n\n    else if (target && type === 'object') {\n\n        // Check if configuration object\n        const isConfig = isConfigObject(ogValue)\n\n        if (isConfig) {\n\n            if ('value' in ogValue) {\n                if (isValue) {\n                    target = parent[to] = ogValue.value // setting value\n                } else {\n                    target = parent[to].value = ogValue.value // setting value\n                }\n            } else transform(true)\n\n            if (ogValue){\n                if (ogValue) config = ogValue\n            }\n\n            Object.defineProperty(parent[to], configKey, { value: config })\n        }\n\n    }\n\n    // ------------------ Special Keywords ------------------\n    let isValidInput = true\n\n    if (config) {\n\n        \n        const bindKey = specialKeys.listeners.value\n        if (bindKey in config) {\n\n            // (de)Register listeners at runtime...\n            const path = getPathArray(config[bindKey].original ?? config[bindKey])\n            if (typeof config[bindKey] === 'string') {\n                const res = this.context.monitor.get(path)\n                if (!res)  target = `because ${path.slice(1).join(this.context.options.keySeparator)} does not point correctly to an existing component.`\n                else {\n                    config[bindKey] = {\n                        value: res,\n                        original: config[bindKey]\n                    }\n                }\n            } else if (!config[bindKey].value.__parent) {\n                target = `because ${config[bindKey].original ?? id.toString()} has become unparented.`\n            }\n\n        } \n        \n        else {\n\n            const branchKey = specialKeys.listeners.branch\n            const formatKey = specialKeys.listeners.format\n\n            if (branchKey in config) {\n\n                const isValid = config[branchKey].find(o => {\n\n                    let localValid: boolean[] = []\n                    if ('if' in o) localValid.push(o.if(update)) // Condition Function\n                    if ('is' in o) localValid.push(o.is === update) // Equality Check\n                    const isValidLocal = localValid.length > 0 && localValid.reduce((a, b) => a && b, true)\n\n                    if (isValidLocal) {\n                        if ('value' in o)  update = o.value // set first argument to branch value\n                    }\n\n                    return isValidLocal\n                })\n\n                if (!isValid) isValidInput = false\n            }\n\n\n            \n            // NOTE: May turn into an array here\n            if (formatKey in config) {\n                try {\n                    update = config[formatKey](update)\n                    if (update === undefined) isValidInput = false\n                } catch (e) { console.error('Failed to format arguments', e) }\n            }\n\n        }\n    }\n\n    // ------------------ Handle Target ------------------\n\n    // console.log('target', target, isValidInput, update)\n    if (\n        isValidInput // Ensure input is valid\n        && update !== undefined // Ensure input is not exactly undefined (though null is fine)\n    ) {\n\n        const arrayUpdate = Array.isArray(update) ? update : [update]\n\n\n        // Set New Value on Parent\n        if (target === toSet) {\n            const parentPath = [id]\n            // if (root) parentPath.push(...rootArr) // TODO: Check if this needs fixing\n            parentPath.push(...to.split(this.context.options.keySeparator))\n            const idx = parentPath.pop()\n            const info = this.context.monitor.get(parentPath, 'info')\n            if (info.value) info.value[idx] = update\n            else console.error(`Cannot set value on ${parentPath.filter(str => typeof str !== 'symbol').join(this.context.options.keySeparator)} from ${from}`)\n        }\n\n        // Direct Object with Default Function\n        else if (target?.default) target.default.call(target, ...arrayUpdate) // Call with parent context\n\n        // Direct Function\n        else if (typeof target === 'function') {\n            const noContext = parent[to][listenerObject]\n            if (noContext) target.call(config?.[specialKeys.listeners.bind]?.value ?? this.context.instance, ...arrayUpdate) // Call with top-level context\n            else target(...arrayUpdate) // Call with default context\n        }\n\n        // Failed\n        else {\n\n            let baseMessage = (to) ? `listener: ${from} \u2014> ${to}` : `listener from ${from}`\n            if (parent) {\n                console.warn(`Deleting ${baseMessage}`, target)\n                delete parent[to]\n            } else console.error(`Failed to add ${baseMessage}`, target)\n        }\n    }\n}\n\n\n}\n\nexport default Edgelord", "export const isPathString = (value) => typeof value === 'string' && (value.includes('/') || value.includes('.'))", "const fetchAndInstantiateTask = async (uri, importObject) => {\n    const wasmArrayBuffer = await fetch(uri).then(response => response.arrayBuffer());\n    return WebAssembly.instantiate(wasmArrayBuffer, importObject);\n};\n\n// https://github.com/torch2424/wasm-by-example/blob/master/demo-util/\nconst load = async (uri, importObject) => {\n\n    if (!importObject) importObject = { env: { abort: () => console.log(\"Abort!\") } };\n\n    if (WebAssembly.instantiateStreaming) return await WebAssembly.instantiateStreaming( fetch(uri), importObject );\n    else return await fetchAndInstantiateTask(uri, importObject);\n};\n\nexport default load", "import { Options } from \"../../../../../../common/types\"\nimport { specialKeys } from \"../../../../../../esc/standards\"\nimport { deep as deepClone } from \"../../../../../../common/clone\"\n\nimport wasm from './wasm'\n\n\nconst catchError = (o, e) => {\n    // Insert an Error Component\n    if (o[specialKeys.reference]) {\n        console.warn('[escompose]: Falling back to ES Component reference...', e)\n        return o[specialKeys.reference] // fallback to reference key\n    }\n    else return createErrorComponent(e.message)\n}\n\nconst genericErrorMessage = `Cannot transform ${specialKeys.compose} string without a compose utility function`\n\nexport default function compile(o, opts: Options) {\n            \n    // Special URL key\n    let uri = (typeof o === 'string') ? o : o[specialKeys.uri]\n\n    if (uri && uri.slice(-5) === '.wasm') {\n        let relTo = o.relativeTo ?? opts?.relativeTo ?? window.location.href\n        if (relTo.slice(-1)[0] !== '/') relTo += '/'\n        const absoluteURI = new URL(uri, relTo).href\n        return new Promise(async (resolve) =>  {\n            const info = await wasm(absoluteURI, o.importOptions)\n            const copy = Object.assign({}, info.instance.exports) as any\n            // WebAssembly Support\n            for (let key in copy){\n                const val = copy[key]\n                if (val instanceof WebAssembly.Memory) copy[key] = new Uint8Array(val.buffer); // Replace Memory with Typed Array\n                else if (val instanceof WebAssembly.Global) {\n                    Object.defineProperty(copy, key, {\n                        get: () => val.value,\n                        set: (v) => val.value = v\n                    })\n                }\n            }\n\n            resolve(copy)\n        })\n    }\n\n    else if (uri && opts.utilities) {\n\n        // Get Text Bundle\n        const bundleOpts = opts.utilities.bundle\n        const gotBundleOpts = bundleOpts && typeof bundleOpts.function === 'function'\n        const compileOpts = opts.utilities.compile\n        const gotCompileOpts  = compileOpts && typeof compileOpts.function === 'function'\n        \n        if (!gotBundleOpts && !gotCompileOpts) o = catchError(o, new Error(genericErrorMessage))\n        else {\n            return new Promise(async (resolve) => {\n\n                try {\n\n                    if (gotBundleOpts) {\n                        const options = bundleOpts.options ?? {}\n                        if (!options.bundler) options.bundler = 'datauri' // link as datauri\n                        if (!options.bundle) options.collection ='global' // same collection across all instances on the page\n                        if (!options.relativeTo) options.relativeTo = opts.relativeTo ?? '.' // Specify relativeTo in different locations\n                        const bundle = bundleOpts.function(uri, options)\n\n                        // Track Bundle Resolution\n                        await bundle.compile()\n\n                        o = Object.assign({}, bundle.result)\n                    } \n                    \n                    // Just Compile\n                    else if (gotCompileOpts) {\n                        const options = compileOpts.options ?? {}\n                        if (!options.relativeTo) options.relativeTo = opts.relativeTo ?? '.' // Specify relativeTo in different locations\n                        const resolved = await compileOpts.function(o, options)\n                        o = resolved\n                    } \n                    \n                    // Show Error Message\n                    else {\n                        throw new Error(genericErrorMessage)\n                    }\n                } catch (e) { \n                    o = catchError(o, e)       \n                }\n\n                resolve(deepClone(o))\n            })\n        }\n    }\n\n    return deepClone(o[specialKeys.reference] ?? o) \n}\n\n\nfunction createErrorComponent (message) {\n    return {\n        [specialKeys.element]: 'p',\n        [specialKeys.hierarchy]: {\n            b: {\n                [specialKeys.element]: 'b',\n                [specialKeys.attributes]: {\n                    innerText: 'Error: '\n                }\n            },\n            span: {\n                [specialKeys.element]: 'span',\n                [specialKeys.attributes]: {\n                    innerText: message\n                }\n            }\n        }\n    }\n}", "import { isPathString } from '../utils'\n\n// Standard Notation\nimport { specialKeys } from \"../../../../../esc/standards\"\n\n// Utilities\nimport { resolve, merge as basicMerge } from \"../../../utils/misc\"\n\n// Helpers\nimport compile from './compile'\n\ntype anyObj = {[key: string]: any}\ntype esComposeType = anyObj | anyObj[]\n\n// ------------ Composition Loader Function ------------\n// This function is used to load the __compose property of an object\n// -----------------------------------------------------\nfunction compose(o, toApply, path, opts, updateOriginal=false) {\n\n    \n    o = basicMerge(o, toApply, path, updateOriginal); // basic merge\n\n    o = compileAndMerge(o, o[specialKeys.compose], path, opts, true, updateOriginal) // Basic Composition Support\n\n    return resolve(o, (o) => {\n\n        // ------------------ Set __apply Properties on Composition ------------------\n        const toApply = o[specialKeys.apply]\n        const toApplyFlag = (toApply && (typeof toApply === 'object' || isPathString(toApply)))\n        o = toApplyFlag ? compileAndMerge(o,toApply, path, opts, false, updateOriginal) : o // Reverse Composition Support\n        return resolve(o)\n    })\n}\n\nexport default compose\n\n// ------------ Merge Helper ------------\n// This merge function is used to merge two objects together WHILE RESOLVING COMPONENTS THAT MUST BE COMPILED\n// --------------------------------------\nfunction compileAndMerge(properties, composition: esComposeType = {}, path: any[] = [], opts: any = {}, flipPrecedence=false, updateOriginal=false) {\n\n    // Ensure __compose is an array\n    if (!Array.isArray(composition)) composition = [composition]\n\n    // Merge nested __compose objects\n    let promise = resolve(composition.map(o => {\n       const compiled = compile(o, opts) // Resolve from text if required\n\n       const checkAndPushTo = (target, acc: any[] = [], forcePush = true) => {\n\n        if (Array.isArray(target)) target.forEach(o => checkAndPushTo(o, acc), true)\n\n        else if (target[specialKeys.compose]) { \n\n                acc.push(target)\n\n                const val = target[specialKeys.compose]    \n                delete target[specialKeys.compose]\n                const newTarget = resolve(compile(val, opts)) // Resolve from text if required\n                checkAndPushTo(newTarget, acc)\n        }\n        else if (forcePush) acc.push(target)\n\n        return acc\n       }\n       \n       return resolve(compiled, (compiled) => checkAndPushTo(compiled))\n    }))\n\n    return resolve(promise, (composition) => {\n\n        const flat = composition.flat();\n\n        let composed = {}\n\n        flat.forEach((toCompose) => composed = basicMerge(\n            composed, \n            toCompose, \n            path, \n            false, \n            false, \n            // true // NOTE: Would allow functions to be nested inside each other\n        ));\n\n        return basicMerge(\n            properties, \n            composed, \n            path, \n            updateOriginal, \n            flipPrecedence, \n            // true\n        );\n    })\n}", "const pathLoader = (keys, base, id, opts, parent?) => {\n\n    parent = (parent instanceof Element ? parent?.[keys.component] : parent) ?? base[keys.parent]\n\n    const hasParent = parent[keys.isGraphScript]\n        \n    const isESC = {value: '', enumerable: false, writable: true} as any\n\n    if (hasParent){\n        if (typeof id === 'string') {\n            const path = parent[keys.path]\n            if (path) isESC.value = [path, id]\n            else isESC.value = [id]\n            isESC.value = isESC.value.join(opts.keySeparator)\n        }\n    }\n\n    Object.defineProperty(base, keys.path, isESC)    \n\n}\n\n\nexport default pathLoader", "import { deep } from '../../../../../common/clone'\nimport { specialKeys } from '../../../../../esc/standards'\nimport createComponent from '../../../index'\n\n// Allow Specifying a Customized Element using Autonomous Element format\nconst registry = {}\nconst ogCreateElement = document.createElement\ndocument.createElement = function (name, options) {\n    const info = registry[name]\n    const created = (info && !info.autonomous) ? ogCreateElement.call(this, info.tag, {is: name}) : ogCreateElement.call(this, name, options)\n    return created\n}\n\n// TODO: Add support for componentizing SVG elements\nconst tagToClassMap = {\n    li: 'LI',\n    ol: 'OL',\n    ul: 'UL',\n    br: 'BR',\n    p: 'Paragraph',\n    textarea: 'TextArea',\n    a: 'Anchor',\n}\n\nconst isAutonomous = false\n\n\nexport const define = (config, esm) => {\n\n    // Register the Component\n    if (!registry[config.name]) {\n\n        // Split the Instances\n        esm = deep(esm)\n\n\n        // Derive the Base Class Name\n        const clsName = (isAutonomous) ? '' : (tagToClassMap[config.extends] ?? config.extends[0].toUpperCase() + config.extends.slice(1))\n\n        const BaseClass = (new Function(`\n\n        class ESComponentBase extends HTML${clsName}Element { \n            #properties;\n            constructor(properties={}){\n                super()\n               this.#properties = properties\n            }\n        }\n        return ESComponentBase;\n\n        `))() as CustomElementConstructor;\n        \n        // Create a New Class Per Definition\n        class ESComponent extends BaseClass {\n            __component;\n\n            constructor(properties){\n                super(properties)\n                esm[specialKeys.element] = this\n                createComponent(esm)\n            }\n\n            connectedCallback() {\n                const component = this[specialKeys.component]\n                const parent = component[specialKeys.parent]\n                component[specialKeys.parent] = parent // Trigger parent setter\n            }\n\n            disconnectedCallback() {\n                console.log('Custom element removed from page.');\n            }\n              \n            adoptedCallback() {\n                console.log('Custom element moved to new page.');\n            }\n\n            attributeChangedCallback(name, oldValue, newValue) {\n                console.log('Custom element attributes changed.', name, oldValue, newValue);\n            }\n        }\n\n        registry[config.name] = {\n            class: ESComponent,\n            autonomous: isAutonomous,\n            tag: config.extends\n        }\n        \n        const cls = registry[config.name].class\n        // Define the Element\n        if (isAutonomous) customElements.define(config.name, cls);\n        else customElements.define(config.name, cls, {extends: config.extends});\n\n    } else {\n        console.log('Already created component...')\n    }\n\n    // // Create the Element\n    // if (isAutonomous) return document.createElement(config.name);\n    // else return document.createElement(config.extends, {is: config.name});\n}\n", "import { Options } from \"../../../../../common/types\";\nimport { EditorProps } from \"../../../../../escode/src\";\nimport { ESComponent, ESElementInfo, GeneralElementType } from \"../../../../../esc/esc\";\nimport { resolve } from \"../../../utils/misc\";\nimport { specialKeys } from \"../../../../../esc/standards\";\n\n// Other Loaders\nimport pathLoader from \"../path\";\nimport * as component from \"./component\";\n\nconst boundEditorKey = `__bound${specialKeys.editor}s`\n\n// Proper SVG Support\n// Incomplete SVG Support List: https://developer.mozilla.org/en-US/docs/Web/SVG/Element\nconst createSVG = (name = 'svg', options?: ElementCreationOptions) => document.createElementNS(\"http://www.w3.org/2000/svg\", name, options)\n\n\nexport type ESComponentStates = {\n\n    // Initial\n    connected: boolean,\n\n    // Element\n    element: HTMLElement // resolved element\n    attributes: ESComponent['__attributes']\n    parentNode: ESComponent['__parent']\n    onresize: ESComponent['__onresize']\n    onresizeEventCallback: Function,\n\n    initial: {\n        start: ESComponent['__onconnected'],\n        stop: ESComponent['__ondisconnected']\n    }\n\n    __source?: ESComponent['__source']\n}\n\n\nfunction checkESCompose (__compose) {\n    if (!__compose) return false\n    const isArr = Array.isArray(__compose)\n    return (isArr) ? !__compose.reduce((a,b) => a * (checkForInternalElements(b) ? 0 : 1), true) : checkForInternalElements(__compose)\n}\n\nfunction checkForInternalElements(node){\n    if (node.__element || checkESCompose(node.__compose)) return true\n    else if (node.__children) return check(node.__children)\n}\n\nfunction check (target) {\n    for (let key in target) {\n        const node = target[key]\n        let res = checkForInternalElements(node)\n        if (res) return true\n    }\n}\n\n\nconst createElement = (args: [string, ElementCreationOptions?], parent) => {\n    if (args[0] === 'svg' || ( parent && parent.__element instanceof SVGElement)) return createSVG(...args)\n    else return document.createElement(...args)\n}\n\nexport function create(id, esm: ESComponent, parent, options:Partial<Options> = {},  states?) {\n\n    const utilities = options?.utilities\n\n    // --------------------------- Get Element ---------------------------\n    let element = esm[specialKeys.element] as ESComponent['__element'] | null; // Always create div at the least\n    const attributes = esm[specialKeys.attributes]\n\n\n    let info: undefined | ESComponent['__element'];\n    if (!(element instanceof Element)) {\n\n\n        const mustShow = (attributes && Object.keys(attributes).length) || checkForInternalElements(esm)\n        const defaultTagName = mustShow ? 'div' : 'link'\n\n        // ------------------ Register Components (children) ------------------\n        const isWebComponent = element && typeof element === 'object' && element.name && element.extends\n        if (isWebComponent) {\n            component.define(element, esm)\n            esm[specialKeys.element] = element = element.name // create a custom element\n        }\n        \n        // Nothing Defined\n        if (element === undefined) element = defaultTagName\n        else if (Array.isArray(element)) element = createElement(element as [string, ElementCreationOptions], parent);\n\n\n        // Configuration Object Defined\n        else if (typeof element === 'object') {\n            info = element as ESElementInfo\n\n            // Get HTML Elememt\n            if (info.selectors) element = document.querySelector(info.selectors)\n            else if (info.id) element = document.getElementById(info.id)\n            else element = defaultTagName // default to div\n        }\n\n        if (typeof element === 'string') element = createElement([element], parent);\n\n        // Automatically Set innerText for inoputs\n        const noInput = Symbol('no input to the default function')\n        if (!esm.hasOwnProperty('default')) {\n            esm.default = function(input = noInput) { \n                if (input !== noInput) this[specialKeys.element].innerText = input  // Set the text of the associated element\n                return this[specialKeys.element] // return whole element\n            }\n        }\n    }\n\n    if (!(element instanceof Element)) throw new Error('Element not created for ' + id);\n\n    // Track All States\n    let intermediateStates = states || {}\n    intermediateStates.element = element,\n    intermediateStates.attributes = attributes,\n    intermediateStates.parentNode = esm[specialKeys.parent] ?? ((parent?.[specialKeys.element] instanceof Element) ? parent[specialKeys.element] : esm[specialKeys.element].parentNode), // Update based on Component hierarchy\u2014or fallback to existing parent (if not nested...)\n    intermediateStates.onresize = esm[specialKeys.resize],\n    intermediateStates.onresizeEventCallback = undefined\n\n    const finalStates = intermediateStates as ESComponentStates\n\n    // // Detect if Child Elements are Added and Need to be Initialized\n    // states.observer = new MutationObserver(function(mutations) {\n    //     mutations.forEach((mutation) =>{\n    //         console.log('mutation', mutation, mutations)\n    //         for(var i = 0; i < mutation.addedNodes.length; i++) {\n    //             const node = mutation.addedNodes[i] as any\n    //             if (node.hasAttribute instanceof Function){\n    //                 if (node.hasAttribute('escomponent')) node.__component.__esReady()\n    //             }\n    //         }\n    //     })\n    // });\n\n    // --------------------------- Assign Things to Element ---------------------------\n    if (typeof id !== 'string') id = `${element.tagName ?? 'element'}${Math.floor(Math.random() * 1000000000000000)}`;\n    if (!element.id) element.id = id;\n\n\n    // Wait to initialize the element until it is inserted into an active DOM node\n    let isConnected, isResolved; \n\n    // track if ready\n    Object.defineProperty(esm, `${specialKeys.connected}`, {\n        value: new Promise(resolve => isConnected = async () => {\n            Object.defineProperty(esm, `__${specialKeys.connected}`, { value: true,  writable: false, enumerable: false })\n            resolve(true)\n        }),\n        writable: false,\n        enumerable: false,\n    })\n\n    Object.defineProperty(esm, `${specialKeys.resolved}`, {\n        value: new Promise(resolve => isResolved = async () => {\n            resolve(true)\n        }),\n        writable: false,\n        enumerable: false,\n    })\n    \n    // trigger if ready\n    Object.defineProperty(esm, `__${specialKeys.connected}`, { value: isConnected,  writable: true, enumerable: false })\n    Object.defineProperty(esm, `__${specialKeys.resolved}`, { value: isResolved,  writable: false, enumerable: false })\n\n\n    const isEventListener = (key, value) => key.slice(0,2) === 'on' && typeof value === 'function'\n    const handleAttribute = (key, value, context) => {\n        if (!isEventListener(key, value) && typeof value === 'function') return value.call(context)\n         else return value\n    }\n\n    const setAttributes = (attributes) => {\n\n        if (esm[specialKeys.element] instanceof Element) {\n            for (let key in attributes) {\n\n                // Set Style Per Attribute\n                if (key === 'style') {\n                    for (let styleKey in attributes.style) esm[specialKeys.element].style[styleKey] = handleAttribute(key, attributes.style[styleKey], esm)\n                }\n\n                // Replace Whole Attribute\n                else {\n                    const value = attributes[key]\n                    if (isEventListener(key, value)) {\n                        const func = value;\n                        esm[specialKeys.element][key] = (...args) => {\n                            const context = esm[specialKeys.proxy] ?? esm\n                            return func.call(context ?? esm, ...args)\n                        }; // replace this scope\n                    } else {\n                        const valueToSet = handleAttribute(key, value, esm)\n\n                        // Set in two different ways\n                        esm[specialKeys.element].setAttribute(key, valueToSet)\n                        try { esm[specialKeys.element][key] = valueToSet} catch (e) {};\n                    }\n                }\n            }\n        }\n    }\n\n    Object.defineProperty(esm, specialKeys.attributes, {\n        get: () => finalStates.attributes,\n        set: (value) => {\n            finalStates.attributes = value;\n            if (finalStates.attributes) setAttributes(finalStates.attributes)\n        }\n    })\n\n    // Listen for Changes to Element\n    Object.defineProperty(esm, specialKeys.element, {\n        get: function() {\n            if (finalStates.element instanceof Element) return finalStates.element\n        },\n        set: function(v) {\n\n            if (v instanceof Element) {\n\n                if (finalStates.element !== v){\n                    finalStates.element.insertAdjacentElement('afterend', v) // Insert New Element\n                    finalStates.element.remove() // Remove Old Element\n                }\n\n                finalStates.element = v\n\n                // Trigger __parent Setter on Nested Components\n                if (esm[specialKeys.path] !== undefined) {\n                    for (let name in esm[specialKeys.hierarchy]) {\n                        const component = esm[specialKeys.hierarchy][name] as ESComponent | Promise<ESComponent>; // TODO: Ensure that this is resolved first...\n                        resolve(component, (res) => {\n                            res[specialKeys.parent] = v;\n                        })\n                    }\n                }\n\n                // Set Attributes\n                setAttributes(finalStates.attributes)\n\n                // finalStates.observer.disconnect()\n                // finalStates.observer.observe(v, { childList: true });\n            }\n        },\n        enumerable:true,\n        configurable: false\n    })\n\n    // Hijack existing parent node properties\n    Object.defineProperty(esm, specialKeys.parent, {\n        get:function () { \n            const parentNode = esm[specialKeys.element].parentNode\n\n            // Return parent component\n            if (parentNode && parentNode.hasAttribute(specialKeys.attribute)) return esm[specialKeys.element].parentNode[specialKeys.component]\n            \n            // Else return a mock parent component\n            else return { [specialKeys.element]: parentNode }\n        },\n        set:(v) => { \n\n            // Get Parent Node from User String\n            if (typeof v === 'string') {\n                const newValue = document.querySelector(v);\n                if (newValue) v = newValue\n                else v = document.getElementById(v);\n            }\n\n            if (v?.__node?.ref) v = v.__node.ref\n\n            // Set Parent Node on Element\n            if (v?.[specialKeys.element] instanceof Element) v = v[specialKeys.element]\n\n\n            const current = esm[specialKeys.element].parentNode\n\n            if (current !== v){\n                if (esm[specialKeys.element] instanceof Element) {\n                    if(current) esm[specialKeys.element].remove()\n                    if (v instanceof Element) {\n\n                        // --------------------------- Place inside ESCode Instance (if created) ---------------------------\n\n                        const desiredPosition = esm[specialKeys.childPosition]\n                        const nextPosition = v.children.length\n\n                        let ref = esm[specialKeys.element]\n\n                        const __editor = esm[`__${specialKeys.editor}`]\n\n                        if (__editor) ref = __editor // Set inside parent. Set focused component in __onconnected\n\n\n                        // Resolved After Siblings Have Been Added\n                        if (desiredPosition !== undefined && desiredPosition < nextPosition) v.children[desiredPosition].insertAdjacentElement('beforebegin', ref)\n                    \n                        // Resolved Immediately or Before Siblings\n                        else v.appendChild(ref);\n\n                        // ------------------ Visualize with ESCode -----------------\n                        if (__editor) __editor.setComponent(esm); // Set the target component\n                    }\n                } \n                \n                // Set Child Parent Nodes to This\n                else {\n                    console.error('No element was created for this Component...', esm)\n                    // for (let name in esm.__children) {\n                    //     const component = esm.__children[name]\n                    //     component.__parent = v\n                    // }\n                }\n            }\n\n\n            if (v instanceof HTMLElement) {\n                pathLoader(specialKeys, esm, id, options, v) // update path\n\n                const parentComponent = v[specialKeys.component]\n        \n                // // Start the component\n                const isConnected = esm[`__${specialKeys.connected}`]\n                const toConnect = isConnected instanceof Function\n\n                if (esm[`__${specialKeys.started}`] !== true && parentComponent?.[`__${specialKeys.started}`] === true)  esm[specialKeys.start]()\n                if (toConnect) isConnected()\n            }\n        },\n        enumerable:true\n    });\n\n    // On Resize Function\n    let onresize = esm[specialKeys.resize]\n    Object.defineProperty(esm,specialKeys.resize,{\n        get: function() { return onresize },\n        set: function(foo) {\n            finalStates.onresize = foo\n            if (finalStates.onresizeEventCallback) window.removeEventListener('resize', finalStates.onresizeEventCallback) // Stop previous listener\n            if (finalStates.onresize) {\n                finalStates.onresizeEventCallback = (ev) => { \n                    if ( finalStates.onresize && esm[specialKeys.element] instanceof Element ) {\n                        const context = esm[specialKeys.proxy] ?? esm\n                        return foo.call(context, ev) \n                    }\n                };\n                window.addEventListener('resize', finalStates.onresizeEventCallback);\n            }\n        },\n        enumerable: true\n    })\n\n\n    // --------------------------- Spawn ESCode Instance ---------------------------\n    if (esm[specialKeys.editor]) {\n        let config = esm[specialKeys.editor]\n        let cls = utilities.code?.class\n\n        if (!cls) {\n            if (typeof config === 'function') cls = config\n            else console.error('Editor class not provided in options.utilities.code')\n        }\n\n\n        if (cls) {\n            let options = utilities.code?.options ?? {}\n            options = ((typeof config === 'boolean') ? options : {...options, ...config}) as EditorProps\n            const bound = options.bind\n            const __editor = new cls(options)\n            __editor.start() // start the editor\n\n            // Attach editor to component (ui)\n            Object.defineProperty(esm, `__${specialKeys.editor}`, { value: __editor })\n\n            // Bind component to editor (graph)\n            if (bound !== undefined) {\n\n                let boundESM = esm // TODO: Use graphscript to find a specific node using relative uri\n                bound.split('/').forEach(str => {\n                    if (str === '..') boundESM = boundESM[specialKeys.states].parentNode[specialKeys.component] // Move to parent\n                    else if (str === '.') return // Do nothing\n                    else boundESM = boundESM[specialKeys.hierarchy][str] // Move to child\n                }) \n\n                const key = boundEditorKey\n                if (!boundESM[key]) Object.defineProperty(boundESM, key, { value: [__editor] })\n                else boundESM[key].push(__editor)\n            }\n        }\n    }\n    \n\n    // --------------------------- Set Element Attributes ---------------------------\n    esm[specialKeys.element][specialKeys.component] = esm\n    esm[specialKeys.element].setAttribute(specialKeys.attribute, '')\n    esm[specialKeys.element] = esm[specialKeys.element] // Trigger __attributes setters\n\n    // --------------------------- Trigger State Changes (if not accessible elsewhere) ---------------------------\n    if (!states) {\n        esm[specialKeys.resize] = finalStates.onresize\n        // console.error('Produced component', esm)\n        if (finalStates.parentNode) esm.__parent = finalStates.parentNode\n    }\n\n\n    return element;\n}", "export const value = (name, value, object) => {\n    Object.defineProperty(object, name, {\n        value,\n        writable: false,\n        configurable: false,\n        enumerable: false\n    })\n}", "\nimport * as standards from '../../../../../esc/standards';\nimport * as define from '../../../utils/define';\n\nconst set = (esm, keys, value, writable=true) => {\n    Object.defineProperty(esm, `__${keys.started}`, { value, writable, configurable: false, enumerable: false })\n}\n\nexport default function (keys, callbacks, asyncCallback?: Function) {\n\n    // Ensure asynchronous loading\n    let output;\n    if (this[keys.options].await) {\n        output = asyncConnect.call(this, keys, async () => {\n            if (asyncCallback) await asyncCallback() // Callback when then entire object is ready\n            connect.call(this, keys, callbacks)\n            set(this, keys, true, false)\n        })\n        set(this, keys, output)\n    } \n    \n    // Default to attempted synchronous loading\n    else {\n        asyncConnect.call(this, keys, asyncCallback)\n        output = connect.call(this, keys, callbacks)\n        set(this, keys, true, false)\n    }\n\n    return output\n}\n\nasync function asyncConnect (keys, onReadyCallback) {\n\n    await this[keys.connected]\n\n    this[keys.states].connected = true\n\n    const boundEditorsKey = `__bound${keys.editor}s`\n    const boundEditors = this[boundEditorsKey]\n    if (boundEditors) boundEditors.forEach(editor => editor.setComponent(this)) // set after all children have been set\n\n    // Initialize Nested Components (and wait for them to be done)\n    for (let name in this[keys.hierarchy]) {\n        let component = this[keys.hierarchy][name]\n        const promise = component[keys.promise]\n        if (promise && typeof promise.then === 'function' ) component = this[keys.hierarchy][name] = await promise // Wait for the component to be ready\n        const init = component[keys.start]\n        if (typeof init === 'function') await init()\n        else console.error(`Could not start component ${name} because it does not have a __onconnected function`)\n    }\n\n    this[`__${keys.resolved}`]() // Tell other programs that the component is resolved\n\n    if (onReadyCallback) await onReadyCallback()\n\n\n    return this\n}\n\nfunction connect (keys, callbacks: Function[] = []) {\n\n    const privateEditorKey = `__${keys.editor}`\n\n    // ------------------ Retroactively set __editor editor on children of the focus element -----------------\n    const __editor = this[keys.parent]?.[privateEditorKey]\n    if (__editor) define.value(privateEditorKey, __editor, this)\n\n    // ------------------ Register Sources (from esmpile) -----------------\n    let source = this[standards.esSourceKey]\n    if (source) {\n        if (typeof source === 'function') source = this[keys.source] = source()\n        delete this[standards.esSourceKey]\n        const path = this[keys.path]\n        if (this[privateEditorKey]) this[privateEditorKey].addFile(path, source)\n    }\n\n    // Call After Children + Before Running (...TODO: Is this right?)\n    const context = this[keys.proxy] ?? this\n\n    if (this[keys.states].initial.start) this[keys.states].initial.start.call(context) // Start callback defined by the user\n\n    // Run Callbacks (e.g. start animations)\n    callbacks.forEach(f => f.call(this))\n\n    return this\n}", "\nexport default function (keys) {\n\n    if ( this[keys.animate] && typeof this[keys.animate].stop === 'function') this[keys.animate].stop()\n\n    // Clear all listeners below this node\n    this[keys.flow].clear()\n\n    // Clear all listeners above this node that reference it\n    let target = this\n    while (target[keys.parent][keys.path] !== undefined) {\n        const res = target[keys.element][keys.parent] // parent is a component\n        if (res) {\n            target = res\n            if (target && target[keys.flow]) target[keys.flow].clear(this[keys.path])\n        } else break\n    }\n\n    if (this[keys.hierarchy]) {\n        for (let name in this[keys.hierarchy]) {\n            const component = this[keys.hierarchy][name]\n            if (typeof component[keys.stop] === 'function') component[keys.stop]()\n            else console.warn('Could not disconnect component because it does not have an __ondisconnected function', name, this.__children)\n        }\n    }\n\n    // Remove Element\n    if ( this[keys.element] instanceof Element) {\n        this[keys.element].remove();\n        if(this[keys.remove]) {\n            const context = this[keys.proxy] ?? this\n            this[keys.remove].call(context); \n        }\n    }\n\n    // Remove code editor\n    const privateEditorKey = `${keys.editor}Attached` // TODO: Ensure this key is standard\n    if (this[privateEditorKey]) this[privateEditorKey].remove() \n\n    const context = this[keys.proxy] ?? this\n\n    const ogStop = this[keys.states].initial.stop\n    if (ogStop) ogStop.call(context)\n\n    // Replace Updated Keywords with Original Values\n    this[keys.start] = this[keys.states].initial.start\n    this[keys.stop] =ogStop\n    return this\n}", "const animations = {}\n\nexport default function animate(keys) {\n\n    const key = keys.animate ?? 'animate'\n    \n    if (this[key]) {\n        let original = this[key]\n\n        const id = Math.random()\n        const interval = (typeof original === 'number') ? original : 'global'\n\n        if (!animations[interval]) {\n        \n            const info = animations[interval] = {objects: {[id]: this}} as any\n\n            const objects = info.objects\n            const runFuncs = () => {\n                for (let key in objects) objects[key].default()\n            }\n\n            // Global Animation Frames\n            if (interval === 'global') {\n                const callback = () => {\n                    runFuncs()\n                    info.id = window.requestAnimationFrame(callback)\n                }\n\n                callback()\n\n                animations[interval].stop = () => {\n                    window.cancelAnimationFrame(info.id)\n                    info.cancel = true\n                }\n            }\n            // Set Interval\n            else {\n                runFuncs() // run initially\n                info.id = setInterval(() => runFuncs(), 1000/interval)\n                animations[interval].stop = () => clearInterval(info.id)\n            } \n        } \n        \n        // Add to Objects\n        else {\n            this.default() // run initially\n            animations[interval].objects[id] = this\n        }\n\n\n        this[key] = {\n            id,\n            original,\n            stop: () => {\n                delete animations[interval].objects[id]\n                this[key] = original // Replace with original function\n                if (Object.keys(animations[interval].objects).length === 0) {\n                    animations[interval].stop()\n                    delete animations[interval]\n                }\n            }\n        }\n    }\n}", "import * as element from '../element'\nimport * as standards from '../../../../../esc/standards';\nimport * as clone from \"../../../../../common/clone.js\"\nimport { Options } from '../../../../../common/types';\nimport * as define from '../../../utils/define'\nimport * as loaders from '../../index'\nimport pathLoader from '../path';\nimport * as component from \"../element/component\";\nimport { isPathString } from '../utils';\n\n\nimport basicStart from './start'\nimport stop from './stop'\nimport animate from './animate'\n\nfunction start(keys) {\n    return basicStart.call(this, keys, [\n        function () { animate.call(this, keys) }\n    ])\n}\n\nexport default (id, esm, parent?, opts: Partial<Options> = {}) => {\n    \n\n    const isGraphScript = Symbol('isGraphScript')\n    esm[standards.specialKeys.isGraphScript] = isGraphScript // Ensure that this is recognized as graphscript\n\n        // Save states that are initially applied to the Component\n        const states = {\n            connected: false,\n            initial: {\n                start: esm[standards.specialKeys.start],\n                stop: esm[standards.specialKeys.stop],\n            }\n        }\n\n        define.value(standards.specialKeys.states, states, esm)\n        define.value(standards.specialKeys.options, opts, esm)\n\n        const copy = clone.deep(esm) // Start with a deep copy. You must edit on the resulting object...\n\n        // try {\n\n            const hierarchyKey = standards.specialKeys.hierarchy\n            for (let name in esm[hierarchyKey]) {\n                const value = esm[hierarchyKey][name]\n                const isUndefined = value == undefined\n                const type = (isUndefined) ? JSON.stringify(value) : typeof value\n\n                // Transform Children Represented as String Paths\n                if (isPathString(value)) esm[hierarchyKey][name] = {[standards.specialKeys.apply]: value} // Use as composition\n\n                // Catch Improper Children\n                else if (type != 'object') {\n                    console.error(`Removing ${name} ${hierarchyKey} field, which is not an ES Component object. Got ${isUndefined ? type :`a ${type}`} instead.`)\n                    delete esm[hierarchyKey][name]\n                }\n            }\n\n            // ------------------ Register Components (keyword) ------------------\n            let registry = esm[standards.specialKeys.webcomponents] ?? {}\n            for (let key in registry) {\n                const esm = registry[key]\n                const info = esm[standards.specialKeys.element]\n                if (info.name && info.extends) component.define(info, esm)\n            }\n\n        \n            // ------------------ Produce a Complete ESM Element ------------------\n\n            let el = element.create(id, esm, parent, opts, states);\n\n            const finalStates = states as element.ESComponentStates\n            \n            esm[standards.specialKeys.element] = el\n\n            // ------------------ Declare Special Functions ------------------\n\n            // Delete Function\n            esm[standards.specialKeys.start] = () => start.call(esm, standards.specialKeys)\n\n            esm[standards.specialKeys.stop] = () => stop.call(esm, standards.specialKeys)\n\n            // -------- Bind Functions to Node --------\n            for (let key in esm) {\n                if (standards.isPrivate(key)) continue;\n                if (typeof esm[key] === 'function') {\n                    const desc = Object.getOwnPropertyDescriptor(esm, key)\n                    if (desc && desc.get && !desc.set) esm = Object.assign({}, esm) // Support ESM Modules: Only make a copy if a problem\n                    const og = esm[key]\n                    esm[key] = (...args) =>  {\n                        const context = esm[standards.specialKeys.proxy] ?? esm\n                        return og.call(context, ...args)\n                    }\n                }\n            }\n\n            pathLoader(standards.specialKeys, esm, opts, id)\n            Object.defineProperty(esm, standards.specialKeys.original, {value: copy, enumerable: false})    \n            esm[standards.specialKeys.resize] = finalStates.onresize\n            esm[standards.specialKeys.parent] = finalStates.parentNode\n\n            return esm;\n\n        // } catch (e){ \n        //     console.error(`Failed to create an ES Component (${typeof id === 'string' ? id : id.toString()}):`, e)\n        //     return copy\n        // }\n}\n", "import compose from '../compose/index'\nimport createComponent from \"./create\"\n\n// Standard Notation\nimport { specialKeys, keySeparator } from \"../../../../../esc/standards\"\n\n// Utilities\nimport { resolve } from \"../../../utils/misc\"\n\n// Types\nimport { Options } from '../../../../../common/types'\n\n// TODO: Ensure that this doesn't have a circular reference\nexport default function hierarchy(o, id: string | symbol, toApply = {}, parent?, directParent?, opts: Partial<Options> = {}, callbacks: any = {}, waitForChildren: boolean = false) {\n\n    const parentId = parent?.[specialKeys.path]\n    const path = (parentId) ? [parentId, id] : ((typeof id === 'string') ? [id] : [])\n\n\n    // ------------------ Create Composition from ESM with __compose Properties ------------------\n    o = compose(o, toApply, path, opts)\n   \n    // After the composition has resolved, create our instance\n    return resolve(o, (o) => {\n\n        // delete applied[specialKeys.compose]\n\n        // ------------------ Create Instance with Special Keys ------------------\n        const instance = createComponent(id, o, parent, opts)\n        const absolutePath = path.join(opts.keySeparator ?? keySeparator)\n\n        if (directParent) directParent[id] = instance // setting immediately\n\n        if (callbacks[id]) callbacks[id](instance)\n        if (callbacks.onInstanceCreated) callbacks.onInstanceCreated(absolutePath, instance)\n\n        // ------------------ Convert Nested Components ------------------\n        const isReady = () => {\n            if (callbacks.onInstanceReady) callbacks.onInstanceReady(absolutePath, instance)\n        }\n\n        if (instance[specialKeys.hierarchy]) {\n\n            let positions = new Set()\n            let position = 0;\n\n            const promises = Object.entries(instance[specialKeys.hierarchy]).map(async ([name, base]: [string, any], i) => {\n\n                base = Object.assign({}, base) // Break ESM reference (to write a childPosition property)\n\n                const pos = base[specialKeys.childPosition]\n                if (pos !== undefined) {\n                    if (positions.has(pos)) console.warn(`[escompose]: Duplicate ${specialKeys.childPosition} value of ${pos} found in ${name} of ${instance[specialKeys.path]}`)\n                    else positions.add(pos)\n                }\n                else {\n                    while (positions.has(position)) position++ // find next available position\n                    base[specialKeys.childPosition] = position; // specify child position\n                    positions.add(position)\n                }\n\n\n                const promise = hierarchy(base, name, undefined, instance, instance[specialKeys.hierarchy], opts, callbacks, true); // converting from top to bottom\n                Object.defineProperty(instance[specialKeys.hierarchy][name], specialKeys.promise, {\n                    value: promise,\n                    writable: false,\n                })\n\n                return resolve(promise)\n\n            })\n\n            // When All Children are Initialized\n            const res = resolve(promises, (resolved) => {\n                isReady()\n                return resolved\n            })\n\n            if (waitForChildren) return resolve(res, () => instance)\n        } else isReady()\n\n        return instance\n    })\n\n}", "import Monitor from \"../../esmonitor/src\"\nimport { deep as deepClone } from \"../../common/clone.js\"\nimport * as standards from \"../../esc/standards\"\nimport { Options } from \"../../common/types\"\nimport * as utils from \"./utils/misc\"\nimport FlowManager from \"../../drafts/edgelord/index\"\n\nimport handleHierarchy from './loaders/native/esc/hierarchy'\nimport compose from './loaders/native/compose'\n\n// Use a global monitor instance to listen to an object property without creating an ES Component \nexport const monitor = new Monitor()\n\n// Merge two objects together without creating an ES Component \nexport const merge = (objects, updateOriginal) => {\n    let base = objects.shift()\n    objects.forEach(o => base = utils.merge(base, o, [], updateOriginal))\n    return base\n}\n\n\nexport const create = (config, toApply:any = {}, options: Partial<Options> = {}) => {\n\n    // -------------- Support Multiple Configuration Types --------------   \n    const typeOf = typeof config    \n\n    // DOM NodeList Support (e.g. from querySelectorAll)\n    if (config instanceof NodeList) config = Array.from(config)\n    \n    // String Resolution\n    if (typeOf === 'string') config =  { [standards.specialKeys.apply]: config } // Compile string to object\n\n    // Apply Component to the Element\n    else if (config instanceof Element) {\n        const component = config[standards.specialKeys.component]\n\n        // Directly Merge into existing element + component pairs (TO FINISH)\n        if (component) {\n\n            toApply = deepClone(toApply) // Clone the applied object to prevent mutation\n\n            // We cannot handle the compose and apply keywords the same way\u2014so we will approximate here.\n            const shouldHaveComposed = toApply.__compose\n            const shouldHaveApplied = toApply.__apply\n            delete toApply.__compose\n            delete toApply.__apply\n\n            if (shouldHaveComposed) {\n                console.warn('Cannot compose a component onto an element that already has a component. Merging with the base object instead...')\n                toApply = Object.assign(shouldHaveComposed, toApply)\n            }\n\n            if (shouldHaveApplied) {\n                console.warn('Cannot apply a component onto an element that already has a component. Applying to the base object instead...')\n                toApply = Object.assign(toApply, shouldHaveApplied)\n            }\n\n            // Actually complete the reverse composition\n            const composition = compose(component, toApply, component[standards.specialKeys.path], options, true)\n            return utils.resolve(composition)\n        }\n        // Create new component with element as the base\n        else {\n            config = { [standards.specialKeys.element]: config } // Compile element to object\n        }\n    }\n\n    // Bulk Operations\n    else if (Array.isArray(config)) {\n        return utils.resolve(config.map(o => create(o, toApply, options)))\n    }\n\n    // Failed Resolution\n    else if (typeOf !== 'object') throw new Error(`Invalid configuration type: ${typeOf}. Expected object or string.`)    \n    \n\n\n    // -------------- Create Complete Options Object --------------         \n    options = deepClone(options)\n    let monitor;\n    if (options.monitor instanceof Monitor) {\n        monitor = options.monitor\n        options.keySeparator = monitor.options.keySeparator // Inherit key separator\n    } else {\n        if (!options.monitor) options.monitor = {}\n        if (!options.monitor.keySeparator) {\n            if (!options.keySeparator) options.keySeparator = standards.keySeparator // Ensure key separator is defined\n            options.monitor.keySeparator = options.keySeparator\n        }\n        options.monitor = new Monitor(options.monitor)\n    }\n\n    \n\n    if (options.clone) config = deepClone(config) // NOTE: If this doesn't happen, the reference will be modified by the create function\n\n\n    // Always fall back to __children\n    options.monitor.options.fallbacks = [standards.specialKeys.hierarchy]\n\n    const fullOptions = options as Options\n\n        let instancePromiseOrObject;\n\n\n        const onConnected = (instance) => {\n\n            const noParent = !instance[standards.specialKeys.parent] // Do not wait if no parent is given (since the app is only ready when placed in the DOM)\n            \n            // Just return instance synchronously\n            if (noParent) return instance\n\n            // Ensure a promise output\n            // else return new Promise(resolve => {\n            //     return utils.resolve(instance[standards.specialKeys.start](), resolve)\n            // })\n\n            // Return synchronously unless the user requests a promise\n            else {\n                const startRes = instance[standards.specialKeys.start]()\n                return utils.resolve(startRes, resolve)\n            }\n\n        }\n\n\n        if (options.nested?.parent && options.nested?.name){\n            // TODO: Figure out how to pass the path for real...\n            instancePromiseOrObject = handleHierarchy(config, options.nested.name, toApply, options.nested.parent, undefined, fullOptions)\n        } else {\n\n            const id = Symbol('root')\n\n            let listeners = {}\n            instancePromiseOrObject = handleHierarchy(config, id, toApply, undefined, undefined, fullOptions, {\n                [id]: (instance) => {\n                    (options.monitor as Monitor).set(id, instance, fullOptions.listeners) // Setting root instance\n                },\n                onInstanceCreated: (absolutePath, instance) => {\n\n                    // Set listeners as soon as possible\n                    if (fullOptions.listen !== false) {\n                        const to = instance[standards.specialKeys.listeners.value] ?? {}  // Uses to \u2014> from syntax | Always set\n                        const manager = listeners[absolutePath] = new FlowManager(to, absolutePath, {\n                            id, instance, monitor: fullOptions.monitor, options: fullOptions\n                        }) // Uses from \u2014> to syntax\n                        instance[standards.specialKeys.listeners.value] = to // Replace with listeners assigned (in case of unassigned)\n\n                        \n                        // Declaring manager\n                        Object.defineProperty(instance, standards.specialKeys.flow, {\n                            value: manager,\n                            enumerable: false,\n                            writable: false\n                        })\n\n                        // -------- Trigger Execution when Ready --------\n                        if (standards.specialKeys.trigger in instance) {\n                            if (!Array.isArray(instance[standards.specialKeys.trigger])) instance[standards.specialKeys.trigger] = []\n                            const args = instance[standards.specialKeys.trigger]\n                            manager.onStart(() => instance.default(...args))\n                            delete instance[standards.specialKeys.trigger]\n                        }\n\n                    }\n                },\n                onInstanceReady: (absolutePath) => {\n                    listeners[absolutePath].start()\n                }\n            })\n        }\n\n        const res = utils.resolve(instancePromiseOrObject, onConnected)\n        return res\n}\n\nexport default create\n\nexport const clone = deepClone\nexport const resolve = utils.resolve", "import * as escompose from '../../escompose/src/index'\n\n\ntype Options = {\n    spa: boolean,\n    element: {\n        root: HTMLElement | string\n        target?: HTMLElement | string\n    },\n}\n\ntype InputOptions = {\n    spa?: boolean,\n    element?: HTMLElement | string | Options['element'],\n}\n\nconst scrollToComponent = (path) => {\n    const el = document.getElementById(path)\n\n    if (el) el.scrollIntoView({ \n        // behavior: 'smooth' \n    })\n    else console.error(`No component found for path: ${path}`)\n}\n\n\nlet DOMContentLoaded = false\nclass Router {\n\n    options: Options\n\n    loaded?: {\n        path: string,\n        ref: any\n    }\n\n    root?: any;\n\n    paths: {[key: string]: any} = {}\n\n    constructor(options: InputOptions){\n\n        options = Object.assign({}, options) // copy\n        if (!options.element) options.element = { root: document.body }\n\n        if (typeof options.element !== 'object' || !('root' in options.element)) {\n            options.element = { root: options.element }\n        }\n\n        this.options = options as Options;\n\n        window.addEventListener('beforeunload', (ev) => this.load(undefined, ev))\n\n        window.addEventListener('popstate', (ev) =>  this.load(undefined, ev))\n        window.addEventListener('DOMContentLoaded', (ev) => {\n            DOMContentLoaded = true\n            if (!this.loaded || this.loaded.path === '') this.load(undefined, ev) \n        });\n    }\n\n    set = (path, esc) => {\n        if (esc === undefined) delete this.paths[path]\n        else this.paths[path] = esc\n    }\n\n    setRoot = (esc) => this.set('', esc)  \n\n    get = (path=this.getPath()) => {\n        let target = this.paths;\n        path.split(/\\.|\\//).forEach((key) => target = target[key] ?? target[''][key]) // Grab from root if missing\n        return target\n    }\n\n    load = (path?: string, ev?: Event, fallback: boolean = true) => {\n\n        let resolvedPath = ((path === undefined) ? this.getPath() : path) as string\n\n        let target = this.get(resolvedPath)\n\n        if (target && ev) ev.preventDefault();\n\n        const useFallback = \n        !target \n        && (!this.loaded  || this.loaded.path !== '')\n         && fallback\n\n        // console.warn('Pass', resolvedPath, target, useFallback, this.loaded)\n        if (useFallback) {\n            resolvedPath = ''\n            target = this.get('') // Fallback to root\n        }\n\n        if (target) {\n\n            let __parent = this.options.element.root\n            const parentTarget = resolvedPath ? this.options.element.target : undefined // Use target if not root\n\n            if (parentTarget) {\n\n                if (!this.loaded || (this.loaded.path !== '' && resolvedPath !== '')) this.load('') // Ensure the root is loaded\n\n                if (typeof parentTarget === 'string') __parent = document.querySelector(parentTarget) as HTMLElement\n                else __parent = parentTarget\n\n                const arr = [...__parent.children]\n                if (__parent) {\n                    for (const child of arr) child.remove()\n                }\n\n            } \n            \n            else if (this.loaded) this.loaded.ref.__element.remove()  // Remove old component\n\n            const config = escompose.clone(target)\n\n            const component = escompose.create(config, {__parent})\n\n            // Transfer Roots\n            if (resolvedPath === '') {\n                if (this.root) this.root.__element.remove()  // Remove old component\n                this.root = component\n            }\n\n            // Register Latest Loaded Component\n            this.loaded = {\n                path: resolvedPath,\n                ref: component\n            }\n\n\n            if (parentTarget) window.scrollTo(0,0) // Scroll to top\n\n            return this.loaded\n\n        }\n        \n        else scrollToComponent(resolvedPath)// Native focusing behavior\n\n        if (useFallback) this.navigate(undefined, undefined, false) // try again\n    }\n\n    navigate = (path=this.getPath(), ev?: Event, fallback: boolean = false) => {\n        const urlPath = path.split(/\\.|\\//).join(this.options.spa ? '/' : '.');\n        history.pushState({}, 'escodeRouterURL', this.options.spa ? `${window.location.origin}/${urlPath}` : `${window.location.origin}#${urlPath}`);\n        this.load(urlPath, ev, fallback);\n    }\n\n    getPath = (path?) => {\n\n        if (path === undefined){\n            \n            if (this.options.spa) path = window.location.pathname.slice(1)\n            \n            // Fallback to query string\n            if (!path) path = window.location.hash.slice(1);\n        }\n\n        return path ?? '' // Path or root\n    }\n\n}\n\n\n\nexport default Router", "\n// -------------- Import Modules --------------\nimport * as reference from './index.esc.js'\nimport * as about from './about.esc.js'\nimport * as work from './work.esc.js'\n\nimport Router from '../../libraries/drafts/router'\n\nconst router = new Router({spa: true, element: { root: document.body, target: '#content'}})\nrouter.setRoot(reference)\nrouter.set('about', about)\nrouter.set('work', work)\n\nrouter.load() // Load root component"],
  "mappings": "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",
  "names": []
}
