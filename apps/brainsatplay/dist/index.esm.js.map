{
  "version": 3,
  "sources": ["../index.esc.js", "../components/statement.esc.js", "../components/feature.esc.js", "../components/twitch.esc.js", "../about.esc.js", "../work.esc.js", "../../../js/packages/common/check.js", "../../../js/packages/esmonitor/src/utils.ts", "../../../js/packages/esmonitor/src/Poller.ts", "../../../js/packages/esmonitor/src/listeners.ts", "../../../js/packages/esmonitor/src/globals.ts", "../../../js/packages/esmonitor/src/info.ts", "../../../spec/properties.js", "../../../js/packages/common/pathHelpers.ts", "../../../js/packages/esmonitor-proxy/src/handlers.ts", "../../../js/packages/esmonitor-proxy/src/globals.ts", "../../../js/packages/esmonitor-proxy/src/define.ts", "../../../js/packages/common/globals.ts", "../../../js/packages/esmonitor-proxy/src/index.ts", "../../../js/packages/esmonitor/src/optionsHelpers.ts", "../../../js/packages/common/drill.js", "../../../js/packages/esmonitor/src/Monitor.ts", "../../../js/packages/esmonitor/src/index.ts", "../../../js/packages/common/properties.ts", "../../../js/packages/common/clone.js", "../../../js/packages/common/utils/index.ts", "../../../js/packages/core/symbols.ts", "../../../js/packages/core/parse.ts", "../../../js/packages/core/utils/loaders.ts", "../../../js/packages/core/escode-props-loader/index.ts", "../../../js/packages/core/escode-parent-loader/index.ts", "../../../js/packages/core/escode-parent-loader/path/index.ts", "../../../js/packages/core/components.ts", "../../../js/packages/core/Root.ts", "../../../js/packages/core/load.ts", "../../../js/packages/core/globals.ts", "../../../js/packages/core/escode-listeners-loader/index.ts", "../../../js/packages/core/escode-listeners-loader/edgelord/index.ts", "../../../js/packages/core/escode-trigger-loader/index.ts", "../../../js/packages/core/index.ts", "../../../js/packages/escode-compose-loader/index.ts", "../../../js/packages/escode-compose-loader/compile/wasm.ts", "../../../js/packages/escode-compose-loader/compile/index.ts", "../../../js/packages/escode-dom/loader/index.ts", "../../../js/packages/escode-dom/loader/escode-define-loader/index.ts", "../../../js/packages/escode-dom/loader/escode-element-loader/index.ts", "../../../js/packages/escode-start-loader/index.ts", "../../../js/packages/escode-animation-loader/index.ts", "../../../js/index.ts", "../../../js/packages/escode-router/index.ts", "../index.ts"],
  "sourcesContent": ["import * as statement from './components/statement.esc.js'\nimport * as feature from './components/feature.esc.js'\nimport * as twitch from './components/twitch.esc.js'\n\nconst borderStyle = {\n    borderBottom: '2px solid white',\n    paddingBottom: '0.5rem',\n    paddingRight: '1rem'\n}\n\nconst list = {\n    list: [],\n    __element: 'ul',\n    __onconnected: function () {\n        this.__element.innerHTML = ''\n        this.list.forEach(link => {\n            const li = document.createElement('li')\n            const a = document.createElement('a')\n            a.innerText = link.label\n            li.appendChild(a)\n            this.__element.appendChild(li)\n\n            if (link.oncreate) link.oncreate(li)\n\n            if (link.onclick) a.onclick = link.onclick\n            else a.href = link.href\n\n        })\n    },\n}\n\nconst links = [\n    { label: 'Home', href: '/' },\n    { label: 'About', href: '#about' },\n    { label: 'Work', href: '#work' },\n    { label: 'Ethos', href: '#ethos' },\n    { label: 'Twitch', href: '#twitch' },\n\n]\n\nexport const nav = {\n    __element: 'nav',\n    __childposition: 0,\n    __attributes: {\n        style: {\n            position: 'fixed',\n            top: '0px',\n            right: '0px',\n            paddingRight: '2rem',\n        }\n    },\n    list: {\n        list: links,\n        __compose: list,\n        __attributes: {\n            style: {\n                textTransform: 'uppercase',\n            }\n        },\n    }\n\n}\n\nexport const content = {\n\n    __element: 'main',\n    __childposition: 0,\n\n\n    hero: {\n        __element: 'section',\n        __childposition: 0,\n        container: {\n            __: Symbol('container'),\n            title: {\n                __element: 'h1',\n                __attributes: {\n                    innerText: 'Brains@Play'\n                },\n            },\n            subtitle: {\n                __element: 'h2',\n                __attributes: {\n                    innerText: 'The Universal Web Development Cooperative'\n                }\n            },\n            description: {\n                __element: 'p',\n                __attributes: {\n                    innerText: 'We empower everyone to build better apps\u2014together.'\n                }\n            }\n        }\n    },\n    about: {\n        __element: 'section',\n        __childposition: 1,\n        __attributes: {\n            style: {\n                background: 'darkslategray'\n            }\n        },\n        container: {\n            __: Symbol('container'),\n            title: {\n                __: Symbol('title'),\n                text: {\n                    __element: 'h2',\n                    __attributes: {\n                        innerText: 'About Us'\n                    }\n                },\n                support: {\n                    __element: 'a',\n                    __attributes: {\n                        href: \"https://opencollective.com/brainsatplay\",\n                        target: \"_blank\",\n                    },\n                    image: {\n                        __element: 'img',\n                        __attributes: {\n                            height: 40,\n                            src: \"https://opencollective.com/brainsatplay/contribute/button@2x.png?color=white\"\n                        }\n                    }\n                },\n                __attributes: {\n                    style: {\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center',\n                        ...borderStyle\n                    }\n                }\n            },\n            description: {\n                __element: 'p',\n                __attributes: {\n                    innerHTML: \"Brains@Play is currently led by two developers\u2014<a href='https://github.com/garrettmflynn' target='_blank'>Garrett Flynn</a> and <a href='https://github.com/garrettmflynn' target='_blank'>Joshua Brewster</a>\u2014working to build a better Web with free software.\"\n                }\n            },\n            statements: {\n                __: Symbol('statements'),\n                __attributes: {\n                    style: {\n                        display: 'flex',\n                        flexWrap: 'wrap'\n                    }\n                },\n                mission: {\n                    header: 'Mission',\n                    text: 'Make code universally <a>shareable</a>, <a>modifiable</a>, and <a>usable</a>.',\n                    __compose: statement,\n                    __attributes: {\n                        style: {\n                            flexBasis: '50%',\n                            padding: '15px'\n                        }\n                    },\n                },\n\n                vision: {\n                    header: 'Vision',\n                    text: 'Engulf the Web in public experiments of communal organization and citizen science, engineering, and art.',\n                    __compose: statement,\n                    __attributes: {\n                        style: {\n                            flexBasis: '50%',\n                            padding: '15px'\n                        }\n                    },\n                }\n            },\n        }\n    },\n    ethos: {\n        __element: 'section',\n        __childposition: 2,\n        container: {\n            __: Symbol('container'),\n            title: {\n                __element: 'h2',\n                __attributes: {\n                    innerText: 'Our Ethos',\n                    style: {\n                        ...borderStyle\n                    }\n                }\n            },\n            featureone: {\n                number: '1',\n                title: 'Recompose the Web',\n                description: 'We are consuming the infrastructure of the Web.',\n                projects: [\n                    {\n                        name: 'ES Components (ESC)',\n                        link: 'https://github.com/brainsatplay/escomponent',\n                        version: '0.1.7',\n                        description: 'A specification for composable JavaScript objects with concurrent message-passing.',\n                    },\n                    {\n                        name: 'ESCode',\n                        link: 'https://github.com/brainsatplay/escode',\n                        version: '0.2.0',\n                        description: 'A framework for using ES Components using graphscript.',\n                    },\n                    {\n                        name: 'Web Source Accessibility Guidelines (WSAG)',\n                        active: false,\n                        version: '0.0.0',\n                        description: 'Identify best practices to allow anyone to use, modify, and share Web Components.',\n                    },\n                ],\n                __compose: feature\n            },\n            featuretwo: {\n                number: '2',\n                title: 'Make Software Yours',\n                description: 'Bring yourself to every page.',\n                projects: [\n                    {\n                        name: 'Browser Extension',\n                        link: 'https://github.com/brainsatplay/brainsatplay-extension',\n                        version: '0.0.0',\n                        oncreate: (element) => {\n\n                            const extensionScriptId = 'brainsatplay-injection-proxy'\n\n                            const openOptions = (id) => {\n                                window.postMessage({\n                                    source: id,\n                                    command: 'openOptions' // direct shortcut command\n                                })\n                            }\n\n                            const checkExtension = () => {\n                                let hasExtension = false;\n\n                                element.onclick = () => {\n                                    const extensionURL = \"https://github.com/brainsatplay/brainsatplay-extension\"\n                                    window.open(extensionURL, '_blank');\n                                }\n\n                                // Check if extension is installed\n                                const el = document.getElementById(extensionScriptId);\n                                if (el) {\n                                    const version = el.getAttribute('data-version')\n                                    if (version) {\n                                        const id = el.getAttribute('data-id')\n                                        // if (version >= requiredVersion) {\n                                        hasExtension = true;\n                                        element.onclick = () => openOptions(id)\n                                        // }\n                                    }\n                                }\n\n                                return hasExtension\n                            }\n\n                            window.onload = function () {\n                                const res = checkExtension()\n                                if (!res) setTimeout(checkExtension, 100)\n                            }\n                        },\n                        description: 'Apply components across web pages.',\n                    },\n                    {\n                        name: 'Desktop App',\n                        link: 'https://github.com/brainsatplay/brainsatplay-electron',\n                        version: '0.0.0',\n                        onclick: () => {\n                            customProtocolCheck(\n                                \"brainsatplay://\",\n                                () => {\n                                    window.open(\"https://github.com/brainsatplay/brainsatplay-desktop\", \"_blank\");\n                                    console.log(\"Custom protocol not found.\");\n                                },\n                                () => {\n                                    console.log(\"Custom protocol found and opened the file successfully.\");\n                                },\n                                // 5000\n                            )\n                        },\n                        description: 'Create composable cross-platform web systems.',\n                    }\n                ],\n                __compose: feature\n            },\n            featurethree: {\n                number: '3',\n                title: 'Free Public Experimentation',\n                description: 'We are supporting new scientific and human-computer interaction (HCI) advances that drive experimentation on the Web and translate quickly across sites.',\n                projects: [\n                    {\n                        name: 'WebNWB',\n                        link: 'https://github.com/brainsatplay/webnwb',\n                        description: 'Enable citizen neuroscience.',\n                        version: '0.0.12',\n                    },\n                    {\n                        name: 'MyAlyce',\n                        link: 'https://myalyce.com',\n                        description: 'Enable citizen neuroscience.',\n                        version: '0.0.0',\n                    }\n                ],\n                __compose: feature\n            },\n        },\n    },\n    twitch,\n}\n\nexport const footer = {\n    __element: 'footer',\n    __childposition: 2,\n    __attributes: {\n        style: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            backgroundColor: 'black',\n            color: 'white',\n            padding: '25px 50px'\n        }\n    },\n        title: {\n                // logo: {\n                //     __element: 'img',\n                //     __attributes: {\n                //         src: 'https://brainsatplay.com/assets/images/logo.png',\n                //     }\n                // },\n                text: {\n                    __element: 'span',\n                    __attributes: {\n                        innerText: '\u00A9 Brains@Play 2022'\n                    }\n                }\n        },\n        links: {\n            __compose: list,\n            list: [\n                ...links\n            ]\n        },\n        social: {\n            __element: 'ul',\n            email: {\n                __element: 'li',\n                link: {\n                    __element: 'a',\n                    __attributes: {\n                        href: 'mailto:contact@brainsatplay.com',\n                        innerText: 'contact@brainsatplay.com'\n                    }\n                },\n            },\n            newsletter: {\n                __element: 'li',\n                link: {\n                    __element: 'a',\n                    __attributes: {\n                        href: 'https://brainsatplay.substack.com',\n                        innerText: 'Sign up for our newsletter',\n                        style: {\n                            fontSize: '0.8rem'\n                        }\n                    }\n                }\n        }\n    }\n}", "export function __onconnected () {\n    if (this.header !== undefined) this.container.header.__element.innerText = this.header\n    if (this.text !== undefined) this.container.text.__element.innerHTML = this.text\n}\n\n\nexport const container = {\n    __: Symbol('container'),\n    header: {\n        __element: 'h3',\n        __attributes: {\n            innerText: 'Header'\n        }\n    },\n    text: {\n        __element: 'p',\n        __attributes: {\n            innerHTML: 'This is the text.'\n        }\n    }\n}", "export function __onconnected () {\n    const properties = ['number', 'title', 'description']\n    properties.forEach(property => {\n        if (this[property] !== undefined) this.container[property].__element.innerText = this[property]\n    })\n\n    if (this.projects !== undefined) {\n        this.projects.forEach(project => {\n            const li = document.createElement('li')\n            const a = document.createElement('a')\n            const span = document.createElement('sub')\n            span.style.fontSize = '75%'\n            span.style.userSelect = 'none'\n\n            if (project.active === false) {\n                li.style.opacity = '0.5'\n                li.style.pointerEvents = 'none'\n                li.style.userSelect = 'none'\n            } else {\n                if (project.oncreate) project.oncreate(li)\n\n                if (project.onclick)  a.onclick = project.onclick\n                else if (project.href) a.href = project.href\n            }\n\n            li.appendChild(a)\n            li.appendChild(span)\n            a.innerText = project.name\n            span.innerText = ` ${project.version}`\n\n            this.container.projects.__element.appendChild(li)\n        })\n    }\n\n}\n\nexport const __attributes = {\n    style: {\n        padding: '1rem',\n    }\n}\n\n    export const container = {\n        __: Symbol('container'),\n            number: {\n                __element: 'p',\n                __attributes: {\n                    innerText: '',\n                    style: {\n                        fontSize: '0.9rem',\n                        paddingBottom: '0.5rem',\n                        margin: '0px'\n                    }\n                }\n            },\n            title: {\n                __element: 'h3',\n                __attributes: {\n                    innerText: 'Feature'\n                }\n            },\n            description: {\n                __element: 'p',\n                __attributes: {\n                    innerText: 'This is a feature that is featured.'\n                }\n            },\n            projects: {\n                __element: 'ul'\n            }\n    }", "\nexport const channel = \"brainsatplay\"\nexport const width = '100%'\nexport const height = 480\n\nexport const __element = 'div'\nexport const __onconnected = function () {\n\n    const script = document.createElement('script')\n    script.src = 'https://embed.twitch.tv/embed/v1.js'\n    document.body.appendChild(script)\n\n    script.onload = () => {\n        new Twitch.Embed(this.__element,{\n            width: this.width,\n            height: this.height,\n            channel: this.channel,\n            // // Only needed if this page is going to be embedded on other websites\n            // parent: [\"embed.example.com\", \"othersite.example.com\"]\n        })\n    }\n}", "\nexport const hero = {\n    __element: 'section',\n    container: {\n            title: {\n                __element: 'h1',\n                __childposition: 0,\n                __attributes: {\n                    innerText: 'About Us'\n                },\n            },\n            subtitle: {\n                __element: 'h2',\n                __childposition: 1,\n                __attributes: {\n                    innerText: 'It all began with a dream of agency for every brain.'\n                }\n            },\n            description: {\n                __element: 'p',\n                __childposition: 2,\n                __attributes: {\n                    innerText: 'We started working in 2021 and never stopped.'\n                }\n            },\n            message: {\n                __element: 'p',\n                __childposition: 3,\n                __attributes: {\n                    innerText: `Now it's cool to have a brain!`\n                }\n            }\n    }\n}\n", "\nexport const hero = {\n        __element: 'section',\n        container: {\n                title: {\n                    __element: 'h1',\n                    __attributes: {\n                        innerText: 'Our Work'\n                    },\n                },\n                subtitle: {\n                    __element: 'h2',\n                    __attributes: {\n                        innerText: 'The Universal Web Development Cooperative'\n                    }\n                },\n        }\n}\n", "const moduleStringTag = '[object Module]'\n\nexport const esm = (object) => {\n    const res = object && (!!Object.keys(object).reduce((a,b) => {\n        const desc = Object.getOwnPropertyDescriptor(object, b)\n        const isModule = (desc && desc.get && !desc.set) ? 1 : 0\n        return a + isModule\n    }, 0) || Object.prototype.toString.call(object) === moduleStringTag)\n\n    return !!res\n}", "import { Options } from \"../../common/types\"\nimport { ArrayPath, MonitorOptions } from \"./types\"\n\n\nexport const isSame = (a,b) => {\n    if (a && typeof a === 'object' && b && typeof b === 'object') {\n        const jA = JSON.stringify(a)\n        const jB = JSON.stringify(b)\n        return jA === jB\n    } else return a === b\n}\n\n\nexport const iterateSymbols = (obj, callback) => {\n    return Promise.all(Object.getOwnPropertySymbols(obj).map((sym: symbol) => callback(sym, obj[sym])))\n}\n\nexport const  getPath = (type, info) => {\n    const pathType = info.path[type]\n    if (!pathType) throw new Error('Invalid Path Type')\n    const filtered = pathType.filter((v) => typeof v === 'string')\n    return filtered.join(info.keySeparator)\n}\n\nexport const getPathInfo = (path, options: MonitorOptions) => {\n    let splitPath = path\n    if (typeof path === 'string') splitPath = path.split(options.keySeparator)\n    else if (typeof path === 'symbol') splitPath = [path]\n    return {\n        id: splitPath[0],\n        path: splitPath.slice(1) as ArrayPath,\n    }\n}\n\nexport const runCallback = (callback, path, info, output, setGlobal=true) => {\n    if (callback instanceof Function) {\n        \n        // Promises\n        if (output && typeof output === 'object' && typeof output.then === 'function') output.then(value => callback(path, info, value))\n\n        // Normal\n        else callback(path, info, output)\n    }\n\n    // ------------------ Set Manually in Inspected State ------------------\n    if (setGlobal && globalThis.ESMonitorState) {\n        const callback = globalThis.ESMonitorState.callback\n        globalThis.ESMonitorState.state[path] = { output, value: info }\n        runCallback(callback, path, info, output, false)\n    }\n}", "import * as utils from './utils'\nimport { ListenerInfo, PollingOptions, ReferenceShortcut } from './types'\n\nconst defaultSamplingRate = 60\n\nexport default class Poller {\n\n    #pollingId?: NodeJS.Timer;\n    #sps: number;\n\n    listeners: {[x:symbol]: ListenerInfo} = {}\n\n    get sps(){\n        return this.#sps\n    }\n\n    set sps(sps: number) {\n        this.#sps = sps\n\n        const listeners = this.listeners\n        const nListeners = Object.keys(listeners).length\n        if (nListeners){\n            this.stop()\n            this.start()\n        }\n    }\n\n    constructor(\n        listeners?: Poller['listeners'],\n        sps?: Poller['sps']\n    ) {\n        if (listeners) this.listeners = listeners // Initialize listeners externally\n        if (sps) this.sps = sps // Set sampling rate externally\n    }\n\n    setOptions = (opts: PollingOptions = {}) => {\n        for (let key in opts) this[key] = opts[key] // Merge polling option\n    }\n\n\n    // Basic Object Manipulation\n    add = (info: ListenerInfo) => {\n        const sub = info.sub\n        this.listeners[sub] = info\n        this.start() // Start polling if not already started\n        return true\n    }\n    get = (sub: ListenerInfo['sub']) => this.listeners[sub]\n    remove = (sub: ListenerInfo['sub']) => {\n        delete this.listeners[sub]\n        if (!Object.keys(this.listeners).length) this.stop() // Stop polling if no listeners\n    }\n\n    // Poll Listeners\n    poll = (listeners) => {\n        utils.iterateSymbols(listeners, (sym, o) => {\n            let { callback, current, history } = o\n\n            // Resolving the path once\n            if (!o.path.resolved) o.path.resolved = utils.getPath('output', o)\n\n            if (!utils.isSame(current, history)){\n                utils.runCallback(callback, o.path.resolved, {}, current)\n                if (typeof current === 'object') {\n                    if (Array.isArray(current)) history = [...current]\n                    else history = {...current}\n                } else listeners[sym].history = current\n            }\n        })\n    }\n\n    // Start Polling\n    start = (listeners = this.listeners) => {\n        if (!this.sps) this.sps = defaultSamplingRate // Set default sampling rate\n        else if (!this.#pollingId) {\n            console.warn('[esmonitor]: Starting Polling!')\n            this.#pollingId = setInterval(() => this.poll(listeners), 1000/this.sps)\n        }\n    }\n\n    // Stop Polling\n    stop = () => {\n        if (this.#pollingId) {\n            console.warn('[esmonitor]: Stopped Polling!')\n            clearInterval(this.#pollingId)\n            this.#pollingId = undefined\n        }\n    }\n}\n", "import { ArrayPath, ListenerInfo, ListenerLookups, ListenerPool, ListenerRegistry, MonitorOptions, ReferenceShortcut } from \"./types\"\nimport * as utils from './utils'\nimport * as infoUtils from './info'\nimport { isProxy } from './globals'\nimport { getFromPath } from \"../../common/pathHelpers\"\nimport { setFromOptions } from \"./optionsHelpers\"\n\nexport const info = (id, callback, path, originalValue, base, listeners, options: MonitorOptions, refShortcut: Partial<ReferenceShortcut> = {}) => {\n    if (typeof path === 'string') path = path.split(options.keySeparator)\n    const relativePath = path.join(options.keySeparator)\n\n    const refs = base\n\n    const shortcutRef = refShortcut.ref\n    const shortcutPath = refShortcut.path\n\n    const get = (path: ArrayPath) => {\n        const thisBase = shortcutRef ?? base\n \n        const res = getFromPath(thisBase, path, {\n            keySeparator: options.keySeparator,\n            fallbacks: options.fallbacks,\n        })\n\n        return res\n    }\n\n    const set = (path: ArrayPath, value) => {\n        const thisBase = shortcutRef ?? base\n\n        setFromOptions(path, value, options, {\n            reference: thisBase,\n            listeners\n        })\n    }\n\n    // Derive onUpdate Function\n    let onUpdate = options.onUpdate\n    let infoToOutput = {}\n\n    if (onUpdate && typeof onUpdate === 'object' && onUpdate.callback instanceof Function) {\n        infoToOutput = onUpdate.info ?? {}\n        onUpdate = onUpdate.callback\n    }\n\n    const absolute = [id, ...path]\n    let pathInfo = {\n        absolute,\n        relative: relativePath.split(options.keySeparator),\n        parent: absolute.slice(0,-1)\n    } as Partial<ListenerInfo['path']>\n\n    pathInfo.output =  pathInfo[options.pathFormat]\n    const completePathInfo = pathInfo as ListenerInfo['path']\n\n    const info = {\n        id, \n        path: completePathInfo, \n        keySeparator: options.keySeparator,\n\n        infoToOutput,\n        callback: (...args) => {\n            const output = callback(...args)\n            \n            // ------------------ Run onUpdate Callback ------------------\n            if (onUpdate instanceof Function) onUpdate(...args)\n\n            // Return Standard Output\n            return output\n        }, \n        get current() { return get(shortcutPath ?? info.path.absolute) },\n        set current(val) { set(shortcutPath ?? info.path.absolute, val) },\n        get parent() { \n            return get(shortcutPath ? shortcutPath?.slice(0,-1) : info.path.parent) \n        },\n        get reference(){ return refs[id] },\n        set reference(val){ refs[id] = val },\n        original: originalValue,\n        history: (typeof originalValue === 'object') ? Object.assign({}, originalValue) : originalValue,\n        sub: Symbol('subscription'),\n        last: path.slice(-1)[0],\n    } as ListenerInfo\n\n    return info\n}\n\n\nconst registerInLookup = (name, sub, lookups) => {\n\n    if (lookups) {\n        const id = Math.random()\n        lookups.symbol[sub] = {\n            name,\n            id \n        } // set in lookup\n        if (!lookups.name[name]) lookups.name[name] = {}\n        lookups.name[name][id] = sub\n    }\n}\n\nexport const register = (info, collection, lookups?: ListenerLookups) => {\n    // Place in Function Registry\n    const absolute = utils.getPath('absolute', info)\n    if (!collection[absolute]) collection[absolute] = {}\n    collection[absolute][info.sub] = info\n\n    // Place in Lookup Registry\n    registerInLookup(absolute, info.sub, lookups)\n    return true\n}\n\nconst listeners = {\n    functions, \n    setters\n}\n\n// Set Listener with Minimal Information\nexport const set = (type, absPath, value, callback, base, allListeners: Partial<ListenerRegistry>, options: MonitorOptions) => {\n\n    const { id, path } = utils.getPathInfo(absPath, options)\n\n    const fullInfo = info(id, callback, path, value, base, listeners, options)\n\n    // ------------------ Set Listener in Registry ------------------\n    if (listeners[type]) listeners[type](fullInfo, allListeners, allListeners.lookup) // goes up to register()\n    else {\n        const path = utils.getPath('absolute', fullInfo)\n        allListeners[type][path][fullInfo.sub] = fullInfo\n        if (allListeners.lookup) registerInLookup(path, fullInfo.sub, allListeners.lookup)\n    }\n}\n\nconst get = (info, collection) => collection[utils.getPath('absolute', info)]\n\n\nconst handler = (info, collection, subscribeCallback, lookups?: ListenerLookups) => {\n    \n    // Create Listener for this Object\n    let success = !!get(info, collection)\n    if (!success) {\n        let parent = info.parent\n        let val = parent?.[info.last] // Parent may not exist yet...but we still want to register a potential listener\n        success = subscribeCallback(val, parent)\n    }\n\n    // Register in Collection\n    // if (success) \n    return register(info, collection, lookups)\n    // else console.warn('Listener revoked for non-existent parent:', info.path.absolute ) \n}\n\n\nexport const setterExecution = (listeners, value) => {\n    return utils.iterateSymbols(listeners, (_, o: ListenerInfo) => {\n        const path = utils.getPath('output', o)\n        utils.runCallback(o.callback, path,  {}, value)\n    })\n}\n\nexport function setters (info: ListenerInfo, collection: ListenerPool, lookups?: ListenerLookups) {\n\n    const thisValue = this \n    return handler(info, collection['setters'], (value, parent) => {\n\n        let val = value\n        if (!parent) return\n\n        if (!parent[isProxy]) { \n\n            let redefine = true\n            try {\n                delete parent[info.last] // removing original definition\n            }  catch (e) {\n                console.error('Unable to redeclare setters. May already be a dynamic object...')\n                redefine  = false\n            }\n\n            if (redefine) {\n                const isGraphScriptProperty = info.last.slice(0,2) === '__' || info.last === 'default'\n                try {\n                    Object.defineProperty(parent, info.last, {\n                        get: () => val,\n                        set: async (v) => {\n                            const isFunction = typeof val === 'function'\n                            val = v\n                            if (!isFunction) {\n                                const listeners = Object.assign({}, collection['setters'][utils.getPath('absolute', info)])\n                                setterExecution(listeners, v)\n                            }\n                            else val = getProxyFunction.call(thisValue, info, collection, val)\n                        },\n                        enumerable: !isGraphScriptProperty,\n                        configurable: true // TODO: Ensure that you are removing later...\n                    })\n                } catch (e) {\n                    throw e\n                }\n            }\n        }\n    }, lookups)\n}\n\n\nexport function getProxyFunction(info, collection, fn) {\n    return function (...args) {\n        const listeners = collection['functions'][utils.getPath('absolute', info)]\n        const res = functionExecution(this, listeners, fn ?? info.original, args)\n        return res.output // Return Standard Output\n    }\n}\n\nexport const functionExecution = (context, listeners, func, args) => {\n    listeners = Object.assign({}, listeners)\n    const keys = Object.getOwnPropertySymbols(listeners)\n    const infoTemplate = listeners[keys[0]] ?? {} as ListenerInfo // Info is same, callback is different\n    const executionInfo = infoUtils.get((...args) => func.call(context, ...args), args, infoTemplate.infoToOutput)\n\n    utils.iterateSymbols(listeners, (_, o: ListenerInfo) => {\n        const path = utils.getPath('output', o)\n        utils.runCallback(o.callback, path, executionInfo.value, executionInfo.output)\n    })\n\n    return executionInfo\n}\n\n\nexport function functions (info: ListenerInfo, collection: ListenerPool, lookups?: ListenerLookups) {\n\n    // Register for functions\n    return handler(info, collection['functions'], (_, parent) => {      \n        if (!parent[isProxy]) { \n            parent[info.last] = getProxyFunction.call(this, info, collection)\n\n            // Also register as a setter\n            return setters(info, collection, lookups)\n        }\n    }, lookups)\n}", "export const isProxy = Symbol(\"isProxy\")\n\nimport { Info } from \"./types\";\n\ntype GlobalESMonitorState = {\n    state: {[x:string]: {output: any, value: any}},\n    callback?: Function | undefined,\n    info: Info\n}\n\ndeclare global {\n    interface Window { ESMonitorState: GlobalESMonitorState; }\n}\n\n// ------------- Global Inspectable (monitored for all changes) -------------\nglobalThis.ESMonitorState = {\n    state: {},\n    callback: undefined,\n    info: {}\n} as GlobalESMonitorState\n\n\nexport default globalThis.ESMonitorState", "import global from './globals'\nimport { ActiveInfo } from './types'\n\nexport const performance = async (callback, args) => {\n    \n    const tic = globalThis.performance.now()\n    const output = await callback(...args)\n    const toc = globalThis.performance.now()\n    \n    return {\n        output,\n        value: toc - tic\n    }\n}\n\nconst infoFunctions = {\n    performance\n}\n\nexport const get = (func, args, info) => {\n\n    let result = {\n        value: { },\n        output: undefined,\n    } as {\n        value: ActiveInfo,\n        output: any\n    }\n    \n    \n    const infoToGet = {...global.info, ...info}\n\n    for (let key in infoToGet)  {\n        if (infoToGet[key] && infoFunctions[key]) {\n            const ogFunc = func\n            func = async (...args) => {\n                const o = await infoFunctions[key](ogFunc, args)\n                result.value[key] = o.value\n                return o.output\n            }   \n        }\n    }\n\n    result.output = func(...args)\n    return result\n}", "export const keySeparator = '.'\n\nexport const defaultPath = 'default'\n\nexport const esSourceKey = '__esmpileSourceBundle'\n\n\nexport const defaultProperties = {\n    root: '__', // Includes path\n    properties: '__props',\n\n    default: defaultPath,\n    operator: '__operator',\n    \n    children: '__children',\n    listeners: {\n        value: '__listeners', // Main property\n\n        // Root Properties\n        branch: '__branch',\n        bind: '__bind',\n        trigger: '__trigger',\n        format: '__format',\n    },\n\n    parent: '__parent',\n    promise: '__childresolved',\n\n    component: '__component',\n    proxy: '__proxy' // Handled by ESMonitor for Listeners\n}\n\nexport const specialKeys = {\n\n   ...defaultProperties,\n\n    start: '__onconnected', // asked to start\n    stop: '__ondisconnected',\n    connected: '__connected', // wait until connected\n    resolved: '__resolved', // wait until fully resolved\n    started: '__started', // wait until started\n\n    element: '__element',\n    webcomponents: '__define',\n    attributes: '__attributes',\n\n    trigger: '__trigger',\n    compose: '__compose',\n    apply: '__apply',\n\n    // Internal to Compose\n    uri: 'src',\n    reference: 'ref',\n\n    childPosition: '__childposition',\n\n    attribute: 'escomponent',\n    options: '__options',\n\n    source: '__source',\n    path: '__path',\n\n    animate: '__animate',\n    states: '__states',\n\n    editor: '__editor',\n\n    original: '__original',\n\n    resize: '__onresize',    \n}", "import { PathFormat, SetValueOptions } from \"../esmonitor/src/types\"\nimport * as standards from '../../../spec/properties'\nimport { deep } from \"./clone\"\n\nconst hasKey = (key, obj) =>  key in obj\n\n\nconst getShortcut = (path, shortcuts, keySeparator) => {\n    const sc = shortcuts[path[0]]\n    if (sc) {\n        const value = sc[path.slice(1).join(keySeparator)]\n        if (value) return value\n    }\n}\n\nexport const getFromPath = (baseObject, path, opts: any = {}) => {\n\n\n    const fallbackKeys = opts.fallbacks ?? []\n    const keySeparator = opts.keySeparator ?? standards.keySeparator\n\n    if (opts.shortcuts) {\n        const shortcut = getShortcut(path, opts.shortcuts, keySeparator)\n        if (shortcut) {\n            if (opts.output === 'info') return { value: shortcut, exists: true, shortcut: true }\n            else return shortcut\n        }\n    }\n\n\n    if (typeof path === 'string') path = path.split(keySeparator).flat()\n    else if (typeof path == 'symbol') path = [path]\n\n    let exists;\n    path = [...path]\n\n    path = path.map(o => (typeof o === \"string\") ? o.split(keySeparator) : o).flat()\n\n\n    let ref =  baseObject\n    const chain = [ref]\n    \n    for (let i = 0; i < path.length; i++) {\n\n        if (ref) {\n\n            const str = path[i]\n            \n            // Try Standard Path\n            exists = hasKey(str, ref)\n\n            if (exists) ref = ref[str]\n            else {\n                ref = undefined\n                exists = true\n            }\n\n            chain.push(ref)\n        }\n    }\n\n    if (opts.output === 'info') return { value: ref, exists,  parent: chain[chain.length - 2] }\n    else return ref\n}\n\n\nexport const setFromPath = (path: PathFormat, value: any, ref:any, opts: SetValueOptions = {}) => {\n    const create = opts?.create ?? false\n    const keySeparator = opts?.keySeparator ?? standards.keySeparator\n\n    if (typeof path === 'string') path = path.split(keySeparator)\n    else if (typeof path == 'symbol') path = [path]\n    path = [...path]\n\n    const copy = [...path]\n    const last = copy.pop() as string | symbol\n\n    for (let i = 0; i < copy.length; i++) {\n        const str = copy[i]  \n        let has = hasKey(str, ref)\n        \n        // Create if not found\n        if (create && !has) {\n            ref[str] = {}\n            has = true\n        }\n\n        // Swap reference\n        if (has) ref = ref[str]\n    }\n\n    ref[last] = value\n\n    return true\n}", "import * as listenerUtils from \"../../esmonitor/src/listeners\";\nimport { runCallback } from \"../../esmonitor/src/utils\";\nimport { \n    fromInspectable,\n    isProxy \n} from \"./globals\";\nimport Inspectable from \"./index\";\nimport define from \"./define\";\n\nexport const functions = function () {\n    const inspectable = this as Inspectable\n    return {\n        apply: async function (target, thisArg, argumentsList) {\n            try {\n\n                let foo = target\n                const isFromInspectable = argumentsList[0]?.[fromInspectable] \n                if (isFromInspectable) {\n                    foo = argumentsList[0].value\n                    argumentsList = argumentsList.slice(1)\n                }\n\n\n\n                let listeners = inspectable.listeners.functions\n                // Notify of Function Execution\n                const pathStr = inspectable.path.join(inspectable.options.keySeparator)\n\n                const toActivate =  (listeners) ? listeners[pathStr] : undefined\n                let output, executionInfo: any = {};\n\n                if (toActivate){\n                    executionInfo = listenerUtils.functionExecution(thisArg, toActivate, foo, argumentsList)\n                    output = executionInfo.output\n                } \n                \n                // Default Behavior\n                else {\n                    output = foo.apply(thisArg, argumentsList);\n                    executionInfo = inspectable?.state?.[pathStr]?.value ?? {}\n                }\n\n                \n                // Notify with Proxy Callback\n                const callback = inspectable.options.callback\n\n                runCallback(callback, pathStr, executionInfo, output)\n\n                // Return output to function\n                return output\n\n            } catch (e) {\n                console.warn(`Function failed:`, e, inspectable.path);\n            }\n        }\n    };\n}\n\nexport const objects = function () {\n    const inspectable = this as Inspectable\n    return {\n\n        get (target, prop, receiver) {\n            if (prop === isProxy) return true;\n            return Reflect.get(target, prop, receiver);\n        },\n        \n        set(target, prop, newVal, receiver) {   \n                        \n\n            if (prop === isProxy) return true;\n\n            const pathStr = [...inspectable.path, prop].join(inspectable.options.keySeparator)\n\n            const isFromProxy = newVal?.[isProxy]\n            const isFromInspectable = newVal?.[fromInspectable]\n            if (isFromInspectable) newVal = newVal.value\n\n            const listeners = inspectable.listeners.setters \n\n            // Set New Listeners Automatically (if global callback is specified)\n            const desc = Object.getOwnPropertyDescriptor(target, prop)\n            const createListener = desc && !desc.get && !desc.set\n\n            if (createListener) {\n                if (typeof inspectable.options.globalCallback === 'function') {\n                    const id = inspectable.path[0]\n                    define.call(inspectable, prop, true) // Get notified when changed on the target\n                    listenerUtils.set('setters', pathStr, newVal, inspectable.options.globalCallback, {[id]: inspectable.root}, inspectable.listeners, inspectable.options)\n                }\n            }\n\n\n            // Create Proxies for Objects\n            if (newVal || typeof newVal === 'function') {\n                const newProxy = inspectable.create(prop, target, newVal)\n                if (newProxy) newVal = newProxy\n            }\n\n            const toActivate = !isFromProxy\n            if (\n                listeners \n                && toActivate // Don't manually trigger for proxies\n                && !inspectable.newKeys.has(prop) // Don't manually trigger for new keys\n            ) {\n                const toActivate = listeners[pathStr]\n                if (toActivate) listenerUtils.setterExecution(toActivate, newVal) // run callbacks\n            }\n\n            const callback = inspectable.options.callback\n            const info = inspectable?.state?.[pathStr]?.value ?? {}\n            runCallback(callback, pathStr, info, newVal)\n\n            if (isFromInspectable || !toActivate) return true\n            else return Reflect.set(target, prop, newVal, receiver);\n        },\n        // deleteProperty(target, key) {\n        //     console.log('Delete', key)\n        //     // if (!(key in target)) { return false; }\n        //     // return target.removeItem(key);\n        //     return true\n        // }\n    }\n}\n", "import { isProxy as isProxyFromMonitor } from '../../esmonitor/src/globals'\n\n\n\nexport const isProxy = isProxyFromMonitor\n\nexport const fromInspectable = Symbol(\"fromInspectable\")\n\nexport const fromInspectableHandler = Symbol(\"fromInspectableHandler\")\n", "import { fromInspectable, isProxy } from \"./globals\";\n\nfunction define(key, registerAsNewKey: boolean) {\n\n    const inspectable = this\n\n    const target = this.target\n\n    if (!this.parent) {\n        let value = target[key]\n\n            try {\n                Object.defineProperty(target, key, {\n                    get: () => value,\n\n                    // Support setting from inspectable too\n                    set: function (val) {\n                        value = val\n                        inspectable.proxy[key] = {[isProxy]: this[isProxy], [fromInspectable]: true, value: val}\n                    },\n                    enumerable: true,\n                    configurable: true // TODO: Ensure that you are removing later...\n                })\n\n            } catch (e) {\n                console.error(`Could not reassign ${key} to a top-level setter...`)\n            }\n    }\n\n    if (registerAsNewKey) this.newKeys.add(key)\n\n    // Create More Proxies Inside\n    this.create(key, target, undefined, true)\n}\n\nexport default define;", "export const isNode = typeof process === 'object'\n", "import * as handlers from './handlers';\nimport * as check from '../../common/check'\nimport { ArrayPath, ListenerRegistry, InspectableOptions } from \"./types\";\nimport * as standards from '../../../../spec/properties'\nimport { setFromPath } from '../../common/pathHelpers';\nimport { isProxy } from \"./globals\";\nimport define from './define';\nimport { isNode } from '../../common/globals';\n\nexport type InspectableProxy = ProxyConstructor & {\n    __proxy: ProxyConstructor,\n    __esInspectable: Inspectable\n}\n\n\nconst canCreate = (parent, key?, val?) => {\n\n    try {\n        if (val === undefined) val = parent[key]\n    } catch (e) {\n        return e\n    }\n\n    // Check if we already have a proxy\n    const alreadyIs = parent[key] && parent[key][isProxy]\n    if (alreadyIs) return false // Already a proxy\n\n\n    const type = typeof val\n    const isObject = type === 'object'\n    const isFunction = type == 'function'\n    \n\n    // Only listen to objects and functions\n    const notObjOrFunc = !val || !(isObject || isFunction )\n    if (notObjOrFunc) return false\n\n    if (!isNode && val instanceof globalThis.Element) return false // Avoid HTML elements\n    if (val instanceof EventTarget) return false // Avoid HTML elements\n\n    const isESM = isObject && check.esm(val)\n\n    if (isFunction) return true\n    else {\n        \n        const desc = Object.getOwnPropertyDescriptor(parent, key)\n\n        if (desc &&((desc.value && desc.writable) || desc.set)) {\n            if (!isESM) return true // Cannot create a Proxy object for ESM\n        } else if (!parent.hasOwnProperty(key)) return true\n    }\n\n    return false\n\n}\n\nexport default class Inspectable {\n\n    path: ArrayPath = []\n    parent?: Inspectable\n    options: InspectableOptions\n    proxy: ProxyConstructor\n    listeners: Partial<ListenerRegistry> = {}\n    newKeys = new Set()\n\n    target: any\n    root: any\n\n    state: {[x:string]: any} = {}\n\n    constructor ( target:any = {}, opts: Partial<InspectableOptions> = {}, name?, parent?) {\n\n        if (!opts.pathFormat) opts.pathFormat = 'relative'\n        if (!opts.keySeparator) opts.keySeparator = standards.keySeparator\n\n        // -------------- Only Listen to ES Components --------------\n\n        if (target.__proxy) this.proxy = target.__proxy\n        else if (target[isProxy]) this.proxy = target\n        else {\n\n            this.target = target\n            this.options = opts as InspectableOptions\n            this.parent = parent\n\n            if (this.parent) {\n                this.root = this.parent.root\n                this.path = [...this.parent.path]\n                this.state = this.parent.state ?? {} // Share state with the parent\n            } else this.root = target\n\n            if (name) this.path.push(name)\n            if (this.options.listeners) this.listeners = this.options.listeners\n\n            if (this.options.path) {\n                if (this.options.path instanceof Function) this.path = this.options.path(this.path)\n                else if (Array.isArray(this.options.path)) this.path = this.options.path\n                else console.log('Invalid path', this.options.path)\n            }\n\n            // remove symbols from the path\n            if (this.path) this.path = this.path.filter(str => typeof str === 'string')\n\n\n            if (!this.options.keySeparator) this.options.keySeparator = standards.keySeparator\n\n            let type = this.options.type\n            if (type != 'object') type = (typeof target === 'function')  ? 'function' : 'object';\n\n            let handler =  handlers[`${type}s`].call(this)\n            if (type === 'function') handler = {...handler, ...handlers.objects.call(this)} // Functions have both\n\n            this.proxy = new Proxy(target, handler)\n\n            // Set status on original\n            Object.defineProperty(target, '__proxy', { value: this.proxy, enumerable: false })\n            Object.defineProperty(target, '__esInspectable', { value: this, enumerable: false })\n\n\n            // Create Nested Inspectable Proxies\n            for (let key in target) define.call(this, key)\n        }\n\n        return this.proxy as any // Replace class passed to the user with the proxy\n\n    }\n\n    set = (path, info, update) => {\n\n        this.state[path] = {\n            output: update,\n            value: info,\n        }\n\n        // Set on Proxy Object\n        setFromPath(path, update, this.proxy, { create: true });\n    }\n\n    check = canCreate\n\n    create = (key, parent, val?, set = false) => {\n\n        const create = this.check(parent, key, val)\n        if (val === undefined) val = parent[key] \n\n        if (create && !(create instanceof Error)) {\n            parent[key] = new Inspectable(val, this.options, key, this)\n            return parent[key]\n        }\n\n        if (set) {\n            try {\n                this.proxy[key] = val ?? parent[key] // Notify on initialization\n            } catch (e) {\n                const isESM = check.esm(parent)\n                const path = [...this.path, key]\n                console.error(`Could not set value (${path.join(this.options.keySeparator)})${isESM ? ' because the parent is an ESM.' : ''}`, isESM ? '' : e)\n            }\n        }\n\n        return\n    }\n}", "import { setFromPath } from \"../../common/pathHelpers\"\nimport Inspectable from \"../../esmonitor-proxy/src/index\"\nimport { MonitorOptions, SetFromOptionsType } from \"./types\"\n\n\nlet ranError = false\n\nexport const setFromOptions = (path, value, baseOptions: MonitorOptions, opts: SetFromOptionsType) => {\n\n        const ref = opts.reference\n        \n        const id = (Array.isArray(path)) ? path[0] : (typeof path === 'string') ? path.split(baseOptions.keySeparator)[0] : path\n        let isDynamic = opts.hasOwnProperty('static') ? !opts.static : false\n\n        if (isDynamic && !globalThis.Proxy) {\n            isDynamic = false\n            console.warn('Falling back to using function interception and setters...')\n        } else if (!ranError) {\n                console.error('TODO: Finish integration of esmonitor-proxy with the core...')\n                ranError = true\n        }\n\n        // if (isDynamic) {\n        //     isDynamic = false\n        //     console.warn('Falling back to using function interception and setters...')\n        //     console.error('TODO: Finish integration of esmonitor-proxy with the core...')\n        // }\n\n        if (isDynamic) {\n            value = new Inspectable(value, {\n                pathFormat: baseOptions.pathFormat,\n                keySeparator: baseOptions.keySeparator,\n                listeners: opts.listeners,\n                path: (path) => path.filter((str) => !baseOptions.fallbacks || !baseOptions.fallbacks.includes(str)),\n                // listenDeeper: ['__path'],\n                // listenDeeper: ['test']\n            }, id)\n        }\n\n        let options = {keySeparator: baseOptions.keySeparator, ...opts}\n        setFromPath(path, value, ref, options)\n\n        return value\n    }", "import { esm } from './check.js'\n\nexport const abortSymbol = Symbol('abort')\n\n\nconst getObjectInfo = (obj, path = []) => {\n    return {\n        typeof: typeof obj,\n        name: obj?.constructor?.name,\n        simple: true,\n        object: obj && typeof obj === 'object',\n        path\n    }\n}\n\nexport const drillSimple = (obj, callback, options = {}) => {\n\n    let accumulator = options.accumulator\n    if (!accumulator) accumulator = options.accumulator = {}\n\n    const ignore = options.ignore || []\n    const path = options.path || []\n    const condition = options.condition ||  true\n\n    const seen = []\n    const fromSeen = []\n    \n    let drill = (obj, acc={}, globalInfo) => {\n\n\n        const path = globalInfo.path\n        if (path.length === 0) {\n            const toPass = condition instanceof Function ? condition(undefined, obj, { ...getObjectInfo(obj, path) }) : condition\n            if (!toPass) return obj // Allow skipping top-level objects too\n        }\n\n        for (let key in obj) {\n            if (options.abort) return\n            if (ignore.includes(key)) continue\n\n            const val = obj[key]\n            const newPath = [...path, key]\n\n            const info = getObjectInfo(val, newPath)\n\n            if (info.object) {\n                const name = info.name\n\n                const isESM = esm(val) // make sure to catch ESM\n\n                if (isESM || name === 'Object' || name === 'Array') {\n                    info.simple = true\n                    const idx = seen.indexOf(val)\n                    if (idx !== -1) acc[key] =fromSeen[idx]\n                    else {\n                        seen.push(val)\n\n                        const pass = condition instanceof Function ? condition(key, val, info) : condition\n                        info.pass = pass\n                        \n                        const res = callback(key, val, info)\n                        if (res === abortSymbol) return abortSymbol\n                        acc[key] = res\n\n                        if (pass) {\n                            fromSeen.push(acc[key])\n                            const res = drill(val, acc[key], {...globalInfo, path: newPath}) // Drill simple objects\n                            if (res === abortSymbol) return abortSymbol\n                            acc[key] = res\n                        }\n                    }\n                } \n                else {\n                    info.simple = false\n                    const res =  callback(key, val, info)\n                    if (res === abortSymbol) return abortSymbol\n                    acc[key] = res\n                }\n            } else {\n                const res =  callback(key, val, info)\n                if (res === abortSymbol) return abortSymbol\n                acc[key] = res\n            }\n\n\n        } \n\n        return acc\n    }\n\n    return drill(obj, accumulator, { path })\n}", "import * as check from '../../common/check'\nimport Poller from './Poller'\n\nimport { PathFormat, InternalOptions, ListenerRegistry, ArrayPath, MonitorOptions, SetFromOptionsType } from './types'\nimport * as listeners from './listeners'\nimport { iterateSymbols, getPath, getPathInfo } from './utils'\nimport { drillSimple } from '../../common/drill'\nimport { getFromPath } from '../../common/pathHelpers'\n\nimport * as standards from '../../../../spec/properties'\nimport { setFromOptions } from './optionsHelpers'\n\nconst createLookup = () => {\n    return { symbol: {}, name: {} }\n}\n\n\nconst isNode = typeof process === 'object'\n\nexport default class Monitor {\n\n    poller = new Poller()\n\n    options: MonitorOptions = {\n        pathFormat: 'relative',\n        keySeparator: standards.keySeparator,\n    }\n    \n    listeners: ListenerRegistry = {\n        polling: this.poller.listeners,\n        functions: {},\n        setters: {},\n        lookup: createLookup()\n    }\n\n    references: {\n        [x:string | symbol]: {\n            [x:string | symbol]: any\n        }\n    } = {}\n\n    constructor(opts:Partial<MonitorOptions>={}){\n\n        // Make listener lookup non-enumerable\n        Object.defineProperty(this.listeners, 'lookup', {\n            value: createLookup(),\n            enumerable: false,\n            configurable: false\n        })\n\n        Object.assign(this.options, opts)\n        this.poller.setOptions(opts.polling)\n    }\n\n    get = (path, output?, reference = this.references) => {\n        return getFromPath(reference, path, {\n            keySeparator: this.options.keySeparator,\n            fallbacks: this.options.fallbacks,\n            output\n        })\n    }\n\n    set = (path, value, opts: SetFromOptionsType= {}) => {\n\n        const optsCopy = {...opts}\n        if (!optsCopy.reference) optsCopy.reference = this.references\n        if (!optsCopy.listeners) optsCopy.listeners = this.listeners\n\n        const set = setFromOptions(path, value, this.options, optsCopy)\n        return set\n    }\n\n    // A simple wrapper for listen()\n    on = (absPath: PathFormat, callback) => {\n        const info = getPathInfo(absPath, this.options)\n        return this.listen(info.id, callback, info.path)\n    }\n\n\n    getInfo = (label, callback, path, original) => {\n\n        const info = listeners.info(label, callback, path, original, this.references, this.listeners, this.options)\n        const id = Math.random()\n        const lookups = this.listeners.lookup\n        const name = getPath('absolute', info)\n        lookups.symbol[info.sub] = {\n            name,\n            id\n        }\n\n        if (!lookups.name[name]) lookups.name[name] = {}\n        lookups.name[name][id] = info.sub\n        \n        return info\n    }\n\n    listen = (id, callback, path: PathFormat = [], __internal: Partial<InternalOptions> = {}) => {\n\n\n        if (typeof path === 'string') path = path.split(this.options.keySeparator)\n        else if (typeof path === 'symbol') path = [path]\n\n        const arrayPath = path as ArrayPath\n\n        let baseRef = this.get(id)\n\n        if (!baseRef) {\n            console.error(`Reference does not exist.`, id)\n            return\n        }\n\n\n        if (!__internal.poll) __internal.poll = check.esm(baseRef) // Inherit ESM status\n        if (!__internal.seen) __internal.seen = []\n\n        const __internalComplete = __internal as InternalOptions\n\n        // Drill Reference based on Path\n        const thisPath = [id, ...arrayPath]\n        const ref = this.get(thisPath)\n\n\n        // Create listeners for Objects\n        const toMonitorInternally = (val, allowArrays=false) => {\n            const first = val && typeof val === 'object'\n            \n            // Only Objects\n            if (!first) return false\n\n            // No Elements\n            if (!isNode) {\n                const isEl = val instanceof globalThis.Element\n                if(isEl) return false\n            }\n\n            if (allowArrays) return true\n            else return !Array.isArray(val)\n        }\n\n\n        // ------------------ Create Subscription ------------------\n\n        // Case #1: Subscribe to each object property individually\n        let subs = {}\n        let success = false\n        const subscribeAll = toMonitorInternally(ref, true)\n        if (subscribeAll) {\n\n            // Simple esmonitor-inspectable integration\n            if (ref.__esInspectable) ref.__esInspectable.options.globalCallback = callback\n\n            drillSimple(ref, (_, __, drillInfo) => {\n                if (drillInfo.pass) return \n                else {\n                    const fullPath = [...arrayPath, ...drillInfo.path]\n                    const internalSubs = this.listen(id, callback, fullPath, __internalComplete) // subscribe to all\n                    Object.assign(subs, internalSubs)\n                }\n            }, {\n                condition: (_, val) => toMonitorInternally(val)\n            })\n\n            success = true\n        } \n\n        // Case #2: Subscribe to specific property\n        let info;\n        try {\n            \n            // Force Polling\n            info = this.getInfo(id, callback, arrayPath, ref)\n\n            if (info && !success) {\n                if (__internalComplete.poll) success = this.poller.add(info)\n\n                // Direct Methods\n                else {\n\n                    let type = 'setters' // trigger setters\n                    if (typeof ref === 'function') type = 'functions' // intercept function calls\n\n                    success = this.add(type, info)\n                }\n            }\n            \n        } catch (e) {\n            console.error('Fallback to polling:', path, e)\n            success = this.poller.add(info)\n            // __internalComplete.poll = true\n        }\n        \n\n        if (success) {\n            subs[getPath('absolute', info)] = info.sub\n\n            // Notify User of Initialization\n            if (this.options.onInit instanceof Function) {\n                const executionInfo = {}\n                for (let key in info.infoToOutput) executionInfo[key] = undefined\n                this.options.onInit(getPath('output', info), executionInfo)\n            }\n\n            return subs\n        } else {\n            console.error('Failed to subscribe to:', path)\n            return\n        }\n    }\n\n    add = (type, info) => {\n        if (listeners[type]) return listeners[type](info, this.listeners, this.listeners.lookup)\n        else {\n            this.listeners[type][getPath('absolute', info)][info.sub] = info\n            return true\n        }\n    }\n\n    // Unsubscribe from a subscription\n    remove = (subs) => {\n\n        // Clear All Subscriptions if None Specified\n        if (!subs) {\n            subs = {\n                ...this.listeners.functions,\n                ...this.listeners.setters,\n                ...this.listeners.polling,\n            }\n        }\n\n\n        if (typeof subs!== 'object') subs = { sub: subs }\n\n        for (let key in subs) {\n\n            let innerSub = subs[key]\n\n            const handleUnsubscribe = (sub) => {\n                const res = this.unsubscribe(sub)\n                if (res === false) console.warn(`Subscription for ${key} does not exist.`, sub)\n            }\n\n            if (typeof innerSub !== 'symbol') iterateSymbols(innerSub, handleUnsubscribe)\n            else handleUnsubscribe(innerSub)\n        }\n\n        return true \n    }\n\n    unsubscribe = (sub) => {\n            const info = this.listeners.lookup.symbol[sub]\n            const absPath = info.name\n\n            // Remove from Polling listeners\n            const polling = this.poller.get(sub)\n\n            const funcs = this.listeners.functions[absPath]\n            const func = funcs?.[sub]\n            const setters = this.listeners.setters[absPath]\n            const setter = setters?.[sub]\n\n            if (polling) this.poller.remove(sub)\n            \n            // Reassign to Original Function\n            else if (func) {\n                delete funcs[sub]\n                if (!Object.getOwnPropertySymbols(funcs).length) {\n                    Object.defineProperty(func.parent, func.last, {\n                        value: func.original,\n                        writable: true\n                    })\n                    delete this.listeners.functions[absPath]\n                }\n            }\n            \n            // Transition Back to Standard Object\n            else if (setter) {\n                delete setters[sub]\n                if (!Object.getOwnPropertySymbols(setters).length) {\n                    const parent = setter.parent\n                    if (parent) {\n                        const last = setter.last\n                        const value = parent[last] // Parent always exists!\n                        Object.defineProperty(parent, last, { value, writable: true })\n                    }\n                    delete this.listeners.setters[absPath]\n                }\n            } else return false\n\n            delete this.listeners.lookup.symbol[sub] // Remove from global listener collection\n\n            const nameLookup = this.listeners.lookup.name[info.name]\n            delete nameLookup[info.id]\n            if (!Object.getOwnPropertyNames(nameLookup).length )delete this.listeners.lookup.name[info.name]\n\n    }\n}", "import Monitor from './Monitor'\n\n\n\nexport default Monitor \n\n// export {\n//     Monitor\n// }", "\n// ------------ Get All Property Names ------------\n\nconst rawProperties = {}\nconst globalObjects = ['Object', 'Array', 'Map', 'Set']\n\nexport function all( obj: any ) {\n\n    var props: string[] = [];\n    if (obj) {\n        do {\n\n            const name = obj.constructor?.name \n            const isGlobalObject = globalObjects.includes(name)\n            if (globalObjects.includes(name)) {\n                if (!rawProperties[name]) rawProperties[name] = [...Object.getOwnPropertyNames(globalThis[name].prototype)]\n            }\n\n            Object.getOwnPropertyNames( obj ).forEach(function ( prop ) {\n                if (isGlobalObject && rawProperties[name].includes(prop)) return; // Skip inbuilt class prototypes\n                if ( props.indexOf( prop ) === -1 ) props.push( prop )\n            });\n        } while ( obj = Object.getPrototypeOf( obj ));\n    }\n\n    return props;\n}\n", "import { drillSimple } from \"./drill\"\nimport { all } from \"./properties\"\n\nexport const shallow = (obj, opts={}) => {\n    if (typeof obj === 'object') {\n        if (Array.isArray(obj)) {\n            obj = [...obj] // Clone the orignal object\n            opts.accumulator = []\n        } else {\n            const keys = all(obj)\n            const newObj = {}\n            for (let key of keys)  newObj[key] = obj[key] // Clone the orignal object\n            obj = newObj\n            opts.accumulator =  {}\n        }\n    }\n\n    return obj\n}\n\nexport const deep = (obj, opts={}) => {\n    if (typeof obj !== 'object') return obj\n    obj = shallow(obj, opts)\n\n    drillSimple(obj, (key, val, info) => {\n        if (info.simple && info.object) return Array.isArray(val) ? [] : {}\n        // else if (info.typeof === 'function') return val.bind({})\n        else return val\n    }, opts)\n\n    return opts.accumulator\n}", "import { shallow } from \"../clone\"\nimport { all } from \"../properties\"\n\nconst isPromise = (o) => typeof o === 'object' && typeof o.then === 'function'\n\n// Resolve if promise or object\nexport const resolve = (object, callback?) => {\n\n    // can resolve arrays with promises\n    if (typeof object === 'object' && Array.isArray(object) && object.find(v => isPromise(v))) object = Promise.all(object)\n\n    // resolves with or without callback \n    if (isPromise(object)) {\n        return new Promise(resolvePromise => {\n            object.then(async (res) => {\n                const output = (callback) ? callback(res) : res\n                resolvePromise(output)\n            })\n        })\n    } else {\n        return (callback) ? callback(object) : object\n    }\n}\n\n// ------------ Merge ------------\n// Merge individual object keys AND nest functions to maintain their bindings\n// -------------------------------\n\n\nconst functionRegistry: {\n    f: Function,\n    list: Function[]\n}[] = []\n\nexport const merge = (\n    main, \n    override, \n    updateOriginal: boolean = false, // choose to update original\n    flipPrecedence: boolean = false, // flip precedence of merge\n    composeFunctions: boolean = false, // use composition on functions\n    seen: any[]=[], // for circular references\n) => {\n\n    let copy = (updateOriginal) ? main : shallow(main) // choose to copy\n\n    if (flipPrecedence) [copy, override] = [override, copy]\n\n\n    if (override){\n\n        const keys = all(copy)\n        const newKeys = new Set(all(override))\n\n        keys.forEach(k => {\n            newKeys.delete(k)\n\n            const exists = k in override\n            const newValue = override[k]\n            if (exists && newValue === undefined)  delete copy[k] // delete if undefined\n\n            // Merge individual object keys\n            else if (typeof newValue === 'object' && !Array.isArray(newValue)) {\n\n                    // Track seen so you don't drill infinitely on circular references\n                    if (typeof copy[k] === 'object') {\n                        const val = copy[k]\n                        const idx = seen.indexOf(val)\n                        if (idx !== -1) copy[k] = seen[idx]\n                        else {\n                            seen.push(val)\n                            copy[k] =  merge(val, newValue, updateOriginal, false, composeFunctions, seen)\n                        }\n                    }\n                    else copy[k] = newValue\n            } \n\n            // Nest functions\n            else if (typeof newValue === 'function') {\n\n                const original = copy[k]\n                const isFunc = typeof original === 'function'\n\n                const newFunc = newValue\n                const composeFunction = newFunc.__compose === true\n\n                // Direct Function Replacement\n                if (!isFunc || (!composeFunctions && !composeFunction)) copy[k] = newFunc\n                \n                // Function Composition\n                else {\n                    let funcList = functionRegistry.find(o => o.f === original)\n\n                    let ogFunc = original\n                    if (!funcList) {\n                        if (ogFunc.__esInspectable) ogFunc = ogFunc.__esInspectable.target // Don't trigger proxies that have been updated\n                        funcList = {f: ogFunc, list: [ogFunc]}\n                        functionRegistry.push(funcList)\n                    }\n\n                    if (!funcList.list.includes(newFunc)) {\n                        const func = copy[k] = function(...args) {\n                            const res = ogFunc.call(this, ...args);\n                            return newFunc.call(this, ...Array.isArray(res) ? res : [res]);\n                        } as Function & {__functionList?: Function[]}\n\n                        funcList.f = func\n                        funcList.list.push(newFunc)\n                    } \n                    else console.warn(`This function was already composed. Ignoring duplicate.`)\n                }\n\n            }\n            \n            // Replace values and arrays\n            else if (k in override) copy[k] = newValue\n        })\n\n\n        newKeys.forEach(k => {\n            const newValue = override[k]\n            if (newValue === undefined) return\n            else copy[k] = newValue\n        })\n    }\n\n    return copy // named exports\n}\n\nexport function isNativeClass (thing) {\n    return isFunction(thing) === 'class'\n}\n\n\nexport function isFunction(x) {\n    const res = typeof x === 'function'\n        ? x.prototype\n            ? Object.getOwnPropertyDescriptor(x, 'prototype').writable\n                ? 'function'\n                : 'class'\n        : x.constructor.name === 'AsyncFunction'\n        ? 'async'\n        : 'arrow'\n    : '';\n\n    return res\n}\n", "export const toReturn = Symbol('return')", "import { Options } from \"../common/types\"\nimport { specialKeys } from \"../../../spec/properties\"\nimport { deep as deepClone } from \"../common/clone\"\nimport { AnyClass, ConfigInput, FinalConfig, Loaders } from \"./types\"\n\nimport { toReturn } from \"./symbols\"\nimport { isNode } from \"../common/globals\"\nimport { merge } from \"../common/utils\"\n\nconst isNativeClass= (o) => typeof o === 'function' && o.hasOwnProperty('prototype') && !o.hasOwnProperty('arguments')\n\n// This function accepts pre-parsed configuration objects and returns a final configuration object\nexport default function parse(config: ConfigInput, overrides: any = {}, options: Partial<Options> = {}) {\n\n    if (!isNode) {\n        if (config instanceof globalThis.NodeList) config = Array.from(config)  // DOM NodeList Support (e.g. from querySelectorAll): Converts to an array of configurations\n    }\n\n\n    if ( typeof config === 'string') config =  { [specialKeys.apply]: config } // String Support: Transform string so that it is compiled from source\n\n    // Function Support: Transform function so that it becomes an object\n    else if ( typeof config === 'function') {\n        if (isNativeClass(config)) config = new (config as AnyClass)(overrides, options) // Create a class\n        else {\n            delete (config as any).__ // remove a triggering __ property from the function\n            config = { [specialKeys.default]: config } // Apply as a default function\n        }\n    }\n\n    // Apply Component to the Element\n    else if (!isNode && config instanceof globalThis.Element) {\n        const component = config[specialKeys.component]\n\n        // Directly Merge into existing element + component pairs (TO FINISH)\n        if (component) {\n\n            overrides = deepClone(overrides) // Clone the applied object to prevent mutation\n\n            // We cannot handle the compose and apply keywords the same way\u2014so we will approximate here.\n            const shouldHaveComposed = overrides.__compose\n            const shouldHaveApplied = overrides.__apply\n            delete overrides.__compose\n            delete overrides.__apply\n\n            if (shouldHaveComposed) {\n                console.warn('Cannot compose a component onto an element that already has a component. Merging with the base object instead...')\n                overrides = Object.assign(shouldHaveComposed, overrides)\n            }\n\n            if (shouldHaveApplied) {\n                console.warn('Cannot apply a component onto an element that already has a component. Applying to the base object instead...')\n                overrides = Object.assign(overrides, shouldHaveApplied)\n            }\n\n            const merged = merge(component, overrides, true); // Basic reverse merge\n            return {[toReturn]: merged} // Return immediately\n        }\n        // Create new component with element as the base\n        else {\n            config = { [specialKeys.element]: config } // Compile element to object\n        }\n    }\n\n    // Bulk Operations\n    else if (Array.isArray(config)) return config // return array to be handled\n\n    // Failed Resolution\n    else if ( typeof config === 'object') {\n        config = (options.clone !== false ? deepClone(config) : config)\n    }\n\n    else throw new Error(`Invalid configuration type: ${ typeof config }. Expected object or string.`)   \n    \n    // -------------- Assign Standard Properties to the Component Object --------------         \n    return config as FinalConfig\n}", "import { defaultProperties } from \"../../../../spec/properties\"\nimport { all } from \"../../common/properties\"\nimport { resolve } from \"../../common/utils\"\nimport { Loaders, SortedLoaders } from \"../types\"\n\n\nconst compose = (callbacks, start, otherArgs: any[] = [], toIgnore: Function) => {\n    return callbacks.reduce(\n        (x, f) => resolve(x, (res) => {\n            let func = (typeof f === 'function') ? f : f.default\n            const output = func(res, ...otherArgs)\n            return (toIgnore && toIgnore(output)) ? res : output\n        }),\n        start\n    )\n}\n\n// Use a function composition technique run the loaders in order\nexport const runLoaders = (loaders: Loaders | SortedLoaders, inputs: {\n    main: any,\n    overrides?: any,\n    options?: any\n}, which?) => {\n\n    const { main, options } = inputs\n\n\n    let preloaded: Loaders | undefined;\n    if (!Array.isArray(loaders)) {\n        if (!loaders[which]) return main\n        const sorted = loaders as SortedLoaders\n        loaders = sorted[which] ?? []\n        switch (which) {\n            case 'load':\n                preloaded = [...sorted.load ?? []]\n                break\n            case 'start':\n                preloaded = [...sorted.load ?? [], ...sorted.activate ?? []]\n            case 'stop':\n                preloaded = [...sorted.load ?? [], ...sorted.activate ?? [], ...sorted.start ?? []]\n                break\n        }\n    }\n\n    const resolvedLoaders = loaders as Loaders\n\n    const loadersToUse = filterLoaders(main, resolvedLoaders, preloaded) // Check which loaders are needed\n\n    if (loadersToUse) return compose(loadersToUse, main, [options], (output) => !output || typeof output !== 'object')\n    else return main\n}\n\nexport const sortLoaders = (loaders: Loaders) => {\n    const sorted: Partial<SortedLoaders> = {}\n    loaders.forEach(o => {\n        const behavior = (typeof o === 'function') ? 'load' : o.behavior ?? 'load'\n        const theseLoaders = sorted[behavior] = sorted[behavior] ?? []\n        theseLoaders.push(o)\n    })\n\n    return sorted as SortedLoaders\n\n}\n\n// TODO: Add a way to move this after the composition loader.\n// This will require defining specific keys on the loaders object to determine the order of execution\n\nexport const filterLoaders = (esc, loaders: Loaders, beenLoaded: Loaders = []) => {\n\n    const keys = all(esc).filter(str => str.slice(0, 2) === '__') // Grab used keys\n\n    const defaultPropertiesCopy = Object.values(defaultProperties)\n    const created = [...defaultPropertiesCopy, ...beenLoaded.map(o => {\n        if (typeof o === 'function') return []\n        else return o.properties.dependents\n    }).flat()] // Assume these are created\n\n    const usedLoaders = loaders.filter(o => {\n        if (o && typeof o === 'object') {\n            const name = o.name\n            const { dependencies, dependents = [] } = o.properties\n            let include = o.required || !dependencies\n            if (!include && dependencies) {\n                const optionalNameMessage = name ? ` (${name})` : ''\n                const found = dependents.find(key => keys.includes(key))\n                if (found) {\n                    const deps = {}\n                    dependencies.forEach((key) => deps[key] = created.includes(key))\n                    const missingDependency = dependencies.filter((key) => !created.includes(key))\n                    if (missingDependency.length) console.warn(`The loader${optionalNameMessage} for ${dependencies.join(', ')} might be loaded too early, since we are missing the following dependencies: ${missingDependency.join(', ')}`)\n                    include = true\n                }\n            }\n\n            if (include && dependents) created.push(...dependents)\n\n            return include\n        }\n    })\n\n    return usedLoaders\n}\n\n\n\n  // Combine loaders\n  export const combineLoaders = (original: Loaders = [], additional: Loaders) => {\n\n    // If there are no original loaders, return the additional\n    if (!original || original.length === 0) return additional\n\n    // If there are no additional loaders, return the original\n    if (!additional || additional.length === 0) return original\n\n    // Filter out duplicate names\n    const seen: string[] = []\n    const all =  [...original, ...additional]\n    return all.filter((o) => {\n        if (typeof o === 'function') return true\n        else {\n            const name = o.name\n            if (!name) return true\n            else {\n                const include = !seen.includes(name)\n                if (!include) return false\n                seen.push(name)\n                return true\n            }\n        }\n    }, undefined) \n}", "import { specialKeys } from \"../../../../spec/properties\"\nimport { all } from \"../../common/properties\"\nimport { isNativeClass } from \"../../common/utils\"\n\nexport const name = 'props'\n\nexport const properties = {\n    dependents: [specialKeys.properties]\n}\n\nconst proxy = (target, source, props?, globalProxy = source) => {\n\n    if (!props) props = all(source)\n    props.forEach(str => {\n        if (!(str in target)) {\n\n            const desc = {\n                get: () => {\n                    return globalProxy[str]\n                },\n                set: (newVal) => {\n                    globalProxy[str] = newVal\n                },\n                enumerable: true,\n                configurable: false\n            }\n\n            // Double proxy this...\n            if (globalProxy !== source) Object.defineProperty(globalProxy, str, desc)\n\n            Object.defineProperty(target, str, desc)\n        }\n    })\n}\n\nconst propsLoader = ( esc ) => {\n\n    const root =  esc[specialKeys.root]\n    const val = esc[specialKeys.properties]\n\n    root.props = {\n        original: [] as string[]\n    }\n\n    let propsAdded: undefined | Object = undefined\n\n    Object.defineProperty(esc, specialKeys.properties, {\n        get: () => {\n            return propsAdded\n        },\n        set: (newProps) => {\n\n            if (typeof newProps !== 'object' && !isNativeClass(newProps)) console.warn('Props must be an object')\n            else {\n\n                const props = all(newProps)\n                // Just set new properties as the props object\n                if (!propsAdded) {\n                    propsAdded = newProps\n                    root.props.original = props\n                }\n\n                // Create a proxy props object if set multiple times\n                else {\n                    const ogProps = propsAdded\n                    propsAdded = {}\n                    proxy(propsAdded, ogProps, root.props.original)\n                }\n\n                proxy(esc, newProps, props, propsAdded)\n            }\n        },\n        enumerable: false,\n        configurable: false\n    })    \n\n    if (val) esc[specialKeys.properties] = val\n\n    return esc\n}\n\n\nexport default propsLoader", "import { specialKeys } from \"../../../../spec/properties\"\nimport ESComponent from \"../../../esc.spec\"\n\nimport pathLoader from \"./path\"\n\nexport const name = 'parent'\n\nexport const required = true\n\nexport const properties = {\n    dependencies: [\n        specialKeys.root,\n    ],\n    dependents: [] // Creates path\n}\n\nconst parentLoader = (esc, options) => {\n\n    const configuration = esc[specialKeys.root]\n\n    configuration.parent = {\n        callbacks: [],\n        add: function (callback) {\n            this.callbacks.push(callback)\n        },\n        get: () => {\n            return parent\n        },\n        start: (force = false) => {\n            if (\n                force || \n                parent[specialKeys.root]?.start?.value === true\n            ) {\n                const isConnected = configuration.connected\n                const toConnect = isConnected instanceof Function    \n                esc[specialKeys.root].start.run() // Run start if the parent already has...\n                if (toConnect) isConnected() // Signal connection to a root component\n            }\n        }\n    }\n\n    const existingParent = esc[specialKeys.parent] //?? overrides[specialKeys.parent]\n\n    let parent = existingParent as ESComponent\n    Object.defineProperty(esc, specialKeys.parent, {\n        get: () => {\n            return configuration.parent.get()\n        },\n        set: (newParent) => {\n\n            const disconnecting = parent && !newParent\n\n            if (parent?.[specialKeys.root]) {\n                const name = configuration.name\n                delete parent[name] // Delete...\n                parent.__.components.delete(name) // Delete...\n            }\n\n            parent = newParent\n\n            const parentConfiguration = parent?.[specialKeys.root]\n            if (parentConfiguration) {\n                const name = configuration.name\n                if (parent[name]) console.error('OVERWRITING EXISTING PROPERTY ON PARENT!')\n                parent[name] = esc // Add...\n                parent.__.components.set(name, esc) // Add...\n            }\n\n            configuration.parent.callbacks.forEach(callback => callback.call(esc, newParent))\n\n            pathLoader(esc) // update path\n            \n            // Signal disconnection (which isn't simply being a root Component)\n            if (disconnecting) esc[specialKeys.root].stop.run() // Try stopping the node\n            \n            // Attempt to Signal Connection and Start the Node\n            else if (parent) configuration.parent.start()\n        }\n    })    \n\n    pathLoader(esc) // update path\n\n}\n\n\nexport default parentLoader", "import { Options } from \"../../../common/types\"\nimport { keySeparator, specialKeys } from \"../../../../../spec/properties\"\nimport { isNode } from \"../../../common/globals\"\n\nexport const name = 'path'\n\nexport const required = true\n\nexport const properties = {\n    dependencies: [\n        specialKeys.root,\n        specialKeys.parent,\n    ],\n    dependents: []\n}\n\nconst Element = globalThis.Element\n\nconst pathLoader = ( esc ) => {\n\n    // Specify the current path of the object        \n    const configuration = esc[specialKeys.root]\n    let parent = esc[specialKeys.parent]\n    const name = configuration.name // Grab name from the configuration\n\n    parent = ( (!isNode && parent instanceof globalThis.Element) ? parent?.[specialKeys.component] : parent) ?? esc[specialKeys.parent]\n\n    const isESC = { value: '', writable: true } as any\n\n    if (parent) {\n        const parentComponentConfiguration = parent[specialKeys.root]\n            \n        if (parentComponentConfiguration){\n            if (typeof name === 'string') {\n                let target = parent\n                const path: string[] = []\n                while (target && target[specialKeys.root]) {\n                    const parentName = target[specialKeys.root].name\n                    if (typeof parentName === 'string') path.push(parentName)\n                    else {\n                        if (typeof parentName === 'symbol') configuration.root = parentName\n                        else console.error('No graph reset occured for', parentName)\n                        break\n                    }\n                    target = target[specialKeys.parent]\n                }\n                isESC.value = [...path.reverse(), name]\n                isESC.value = isESC.value.join(keySeparator)\n            }\n        }\n    }\n\n    Object.defineProperty(configuration, 'path', isESC)    \n}\n\n\nexport default pathLoader", "import { drillSimple, abortSymbol } from \"../common/drill\"\nimport { specialKeys } from \"../../../spec/properties\"\nimport { isNativeClass } from \"../common/utils\"\n\ntype NestedRecord = {\n    name: string,\n    ref: any,\n    parent: any\n}\n\nexport const is = (key) => {\n    return key.includes(specialKeys.root) || key === 'default'\n}\n\nconst basicObjects = ['Object', 'Array']\n\nexport const has = (o) => {\n    let has = false\n    drillSimple(o, (key, val, info) => {\n        if (info.path.length > 1){\n            const found = info.path.find(str => str === '__')\n            if (!found && is(key)) {\n                has = info.path\n                return abortSymbol\n            }\n        }\n    }, {\n\n        // Ignore graphscript root property and other properties that may have nested graphscript properties\n        ignore: ['__', '__parent', '__compose', '__apply'],\n\n        // Avoid drilling elements...\n        condition: (_, o) => {\n            const thisName = o?.constructor?.name\n            const propName = o?.__props?.constructor?.name\n            return (!basicObjects.includes(thisName) && !!globalThis[thisName]) || !!globalThis[propName] ? false : true\n        }\n    })\n\n    return has as false | string[]\n}\n\n// Get all nested components in an object by looking for graphscript properties\nexport function from (parent) {\n\n    if (!parent || typeof parent !== 'object') return null\n\n    let array = Object.entries(parent).map(([name,ref]) => {\n        \n        const mayBeComponent = ref && typeof ref === 'object' || typeof ref === 'function'\n        if (!mayBeComponent) return\n\n        const hasGraphScriptProperties = !name.includes(specialKeys.root) ? Object.keys(ref).find(is) : false\n        if (hasGraphScriptProperties) {\n            if (name === 'constructor' && isNativeClass(ref)) return // Don't consider componentized classes as components on their instances...\n            return { ref, parent, name } as NestedRecord\n        }\n    }).filter((v) => v && v.ref) as NestedRecord[]\n    \n    let hasProperties = array.length > 0\n\n    // // NOTE: This is an important feature to have if we don't keep the __children property\n    // // This makes sure that nested components have graphscript properties\n    // if (!hasProperties) {\n    //     const found = has(parent)\n    //     if (found) {\n    //         const sliced = found.slice(0, -2)\n    //         let target = parent\n    //         sliced.forEach(str=> {\n    //             target = target[str]\n    //             target.__ = true // Force recognition as a component\n    //         })\n    //         const name = found[0]\n    //         array = [{\n    //             ref: parent[name],\n    //             parent,\n    //             name\n    //         }]\n    //         hasProperties = true\n    //     }\n    // }\n\n    if (hasProperties) return array\n    else return null\n}", "import ESComponent from \"../../esc.spec\"\n\nimport { keySeparator, specialKeys } from \"../../../spec/properties\"\nimport create, { resolve } from \"./index\"\nimport { from, is } from \"./components\"\nimport load from \"./load\"\nimport { all } from \"../common/properties\"\nimport { isNativeClass } from \"../common/utils\"\nimport { Options } from \"../common/types\"\nimport { Loaders } from \"./types\"\n\ntype RootInfo = {\n    parent?: ESComponent,\n    original: any,\n    name?: string,\n    loaders: Loaders\n}\n\nexport default class Root {\n\n    name: string | symbol\n    symbol: symbol\n    root: symbol\n    path: string\n    options: Partial<Options>\n    original: any\n    states: any\n    loaders: {\n        available: Loaders\n    } = {\n        available: [],\n    }\n\n    components = new Map()\n\n    connected: boolean = false\n    resolved: boolean = false\n\n    // ---------- Creation Managers ----------\n    create = function (esc) {\n        return create(esc, undefined, this.loaders.available)\n    }\n\n    // ---------- Lifecycle Managers ----------\n    stop = {\n        name: 'stop',\n        value: false,\n        add: addCallback,\n        run: () => runRecursive.call(this.stop, this.loaded.value),\n        callbacks: {\n            before: [],\n            main: [],\n            after: [],\n        },\n    }\n\n    start = {\n        name: 'start',\n        value: false,\n        add: addCallback,\n        run: () => runRecursive.call(this.start, this.loaded.value),\n        callbacks: {\n            before: [],\n            main: [],\n            after: [],\n        },\n    }\n\n    loaded = {\n        value: false,\n        callbacks: [],\n        add: function (callback) {\n            this.callbacks.push(callback)\n            return true\n        },\n        run: function(resolved){\n            if (resolved) this.value = resolved\n            runSequentially(this.callbacks, [this.value])\n        }\n    }\n\n    // Additional Loader Properties\n    // boundEditors?: Editor[]\n    // editor?: Editor,\n\n    constructor(esc, info: RootInfo, options: Partial<Options>) {\n\n\n        const { parent, original, name = Symbol('root'), loaders } = info\n\n\n        // Specify the current path of the object\n        const parentId = parent?.[specialKeys.root].path\n        const path = (parentId) ? [parentId, name] : ((typeof name === 'string') ? [name] : [])\n        const absolutePath = path.join(keySeparator)\n\n\n        const ogRoot = esc[specialKeys.root]\n        const ogSymbol = typeof ogRoot === 'symbol'\n    \n        const isSymbol = typeof name === 'symbol'\n        const symbol = (ogSymbol) ? ogRoot : ((isSymbol) ? name : Symbol('root')) // A unique value to compare against (reuse names if possible)\n        \n        this.name = (isSymbol && ogSymbol) ? ogRoot : name\n        this.symbol = symbol\n        this.root = isSymbol ? name : parent[specialKeys.root].root // Set graph property\n        this.path = absolutePath // Temporary Path Property\n        this.options = options\n        this.original = original\n        this.states = {}\n        this.loaders.available = loaders\n        this.loaded.add(loadNestedComponents)\n\n        Object.defineProperty(esc, specialKeys.root, {\n            value: this,\n            enumerable: false,\n            configurable: false,\n            writable: false\n        }) \n    }\n}\n\n\n\nfunction loadNestedComponents(esc) {\n\n    const configuration = esc[specialKeys.root]\n    \n    // Resolve Nested Components\n    const nested = from(esc)\n\n    const promises = (nested) ? nested.map((info) => {\n        const copy = Object.assign({}, configuration.options)\n        const name = copy.name = info.name\n        delete copy.overrides // Only apply to the root node\n        copy.parentObject = info.parent\n        copy.parent = esc\n        const ref = info.ref\n\n        if (ref) {\n\n            // Existing ES Component (reparent)\n            if (ref.__?.symbol) {\n                console.error('Has an existing component', ref.__.path)\n                const parent = ref.__.parent\n                if (parent) console.error(`Changing parent of existing component (${ref.__.path}) from ${parent.__.path} to ${configuration.path}`)\n                ref.__.name = name // Update the name of a component. TODO: Make sure to check for side-effects\n                ref.__parent = esc\n            } \n            \n            // New Component Template (load)\n            else {\n\n                const resolution = load(ref, configuration.loaders.available, copy) // Apply loaders to nested components\n\n                // Allow users to await the resolution of all children\n                Object.defineProperty(info.parent[name], specialKeys.promise, { value: resolution, writable: false, })\n\n                // Set components here\n                const promise = resolve(resolution, (res) => {\n                    configuration.components.set(name, res)\n                    return res\n                })\n\n                configuration.components.set(name, promise)\n            }\n        } else {\n            delete info.parent[name]\n            console.error('No reference found for nested component', info)\n        }\n    }) : []\n\n        // Allow the user to wait until all the chidren are resolved by awaiting the promise\n        let isResolved\n        const resolvePromise = new Promise(resolve => isResolved = async () => {\n            configuration.resolved = true\n            resolve(true)\n        })\n\n        Object.defineProperty(esc, `${specialKeys.resolved}`, { value: resolvePromise })\n        configuration.resolved = false // To resolve the promise\n\n        // Signal that the component is ready\n        resolve(promises, () => isReady(esc, isResolved))\n        \n}\n\n\n    // On Ready Callback\n    function isReady (esc, isResolved) {\n\n        const configuration = esc[specialKeys.root]\n\n        // -------- Bind Functions to Node --------\n        for (let key in esc) {\n            const og = esc[key]\n            if (typeof og === 'function' && !isNativeClass(og)) {\n                const context = esc[specialKeys.proxy] ?? esc\n                // const og = esc[key]\n                esc[key] = og.bind(context)\n            }\n        }\n\n        // Add Stop Method\n        configuration.stop.initial = esc[specialKeys.stop]\n        esc[specialKeys.stop] = configuration.stop.run\n\n\n        // Ensure all GraphScript properties are non-enumerable\n        // And bind all functions to the node\n        const keys = all(esc)\n\n        for (let key of keys) {\n            if (is(key)) {\n                const desc = Object.getOwnPropertyDescriptor(esc, key)\n                if (desc?.enumerable) Object.defineProperty(esc, key, { ...desc, enumerable: false })\n            }\n\n            // if (typeof esc[key] === 'function') esc[key] = esc[key].bind(esc) // ensure all functions are bound to the node\n        }\n\n        // Trigger Parent / Path Loader\n        const finalParent = esc[specialKeys.parent]\n        esc[specialKeys.parent] = finalParent\n\n        isResolved()\n    }\n\n\n// -------- Basic Helper Function --------\nconst run = (f, context, args, x?) => resolve(x, () => f.call(context, ...args))\n\nconst runSequentially = (callbacks: Function[], args: any[] = [], context?) => {\n    if (callbacks.length) {\n        return callbacks.reduce((x,f) => run(f, context, args), undefined) // Must use undefined as the second argument to trigger the first callback\n    }\n\n}\n\nfunction addCallback(callback, priority: 'before' | 'after' | 'main' = 'main') {\n    const { callbacks } = this\n    callbacks[priority].push(callback)\n    return true\n}\n\nfunction runRecursive(resolved) {\n    const { callbacks, name } = this\n\n    if (!this.value) {\n\n        const isStop = name === 'stop'\n\n        const configuration = resolved[specialKeys.root]\n\n        const callback = isStop ? configuration.stop.initial : resolved[specialKeys[name]]\n        this.value = true\n\n\n        if (!isStop) configuration.stop.value = false\n\n        const toCall = (callback && !isStop) ? [...callbacks.before, callback, ...callbacks.main] : [...callbacks.before, ...callbacks.main]\n\n        const result = runSequentially(toCall, [resolved], resolved)\n        return resolve(result, () => {\n\n            const hierarchy = Array.from(resolved[specialKeys.root].components.entries()) as [string, ESComponent][]\n\n            // Initialize Nested Components (and wait for them to be done)\n            const ranOnChildren = resolve(hierarchy.map(async ([tag, component]) => {\n                const promise = component[specialKeys.promise]\n                if (promise && typeof promise.then === 'function') component = hierarchy[tag] = await promise // Wait for the component to be ready\n\n                return await component[specialKeys.root][name].run() // Run the component start / stop function\n            }))\n\n            return resolve(ranOnChildren, () => {\n\n                // After All Components Resolved\n                const result = runSequentially(callbacks.after, [resolved], resolved)\n                return resolve(result, () => {\n\n                    // Call Final Function or Return\n                    if (isStop) {\n                        if (callback) callback.call(resolved, resolved) // Run general stop function last\n\n                        // Clear all listeners below esc node\n                        resolved[specialKeys.listeners.value].clear()\n\n                        // Clear all listeners above the Component that reference it\n                        const path = resolved[specialKeys.root].path\n                        let target = resolved\n                        const parent = target[specialKeys.parent]\n                        while (parent && parent[specialKeys.root] !== undefined) {\n                            const res = target[specialKeys.parent] // parent is a component\n                            if (res) {\n                                target = res\n                                if (target) {\n                                    const configuration = target[specialKeys.root]\n                                    if (configuration) target[specialKeys.listeners.value].clear(path)\n                                }\n                            } else break\n                        }\n\n                        configuration.start.value = false // Can be restarted\n                    }\n\n                    return true\n                })\n            })\n        })\n    }\n}\n\n\n", "import { merge, resolve } from '../common/utils/index'\nimport { specialKeys } from \"../../../spec/properties\"\nimport parse from \"./parse\"\nimport { ApplyOptions, Loaders } from \"./types\"\nimport { toReturn } from \"./symbols\"\nimport ESComponent from \"../../esc.spec\"\n\nimport { sortLoaders, runLoaders } from './utils/loaders'\n\n// Native Loaders\nimport * as propsLoader from \"./escode-props-loader\"\nimport * as parentLoader from \"./escode-parent-loader\"\nimport Root from './Root'\n\nexport default function load(esc, loaders: Loaders = [], options: ApplyOptions): ESComponent {\n    \n    const tic = performance.now()\n\n\n    const parent = options.parent // Make sure not to proxy the window if undefined...\n    const {\n        parentObject,\n        overrides = {},\n        opts = {},\n        name,\n    } = options as ApplyOptions\n\n    // Track the original component structure\n    const original = esc\n\n    // Parse the configuration object into a final configuration object\n    esc = parse(esc, overrides, opts)\n\n    // Shortcut to return an existing (but updated) component\n    if (esc[toReturn]) return esc[toReturn] \n\n    // Return bulk operation requests\n    if (Array.isArray(esc)) return resolve(esc.map(o => load(o, loaders, options)))\n\n    // ------------- Main Load Sequence -------------\n    const info = { name, parent, original, loaders }\n    const root = new Root(esc, info, opts) // Create root property on the objct\n\n    esc = merge(esc, overrides) // Merge with overrides\n\n    // Run the initialiation components\n    const sortedLoaders = sortLoaders(loaders)\n    const loaded = runLoaders(sortedLoaders, { main: esc, overrides: overrides, options: opts }, 'init') // Complete component resolution\n\n    const component = resolve(loaded, loaded => {\n\n        // Load the parent property\n        if (!loaded[specialKeys.parent] && parent)  loaded[specialKeys.parent] = parent // This is currently required...\n        const parented = runLoaders([parentLoader], { main: loaded, options: opts }) // Use original parent here (in case none are specified later)\n\n        // Load the props property\n        const propped = runLoaders([propsLoader], { main: parented }) // Use original parent here (in case none are specified later)\n\n        // Load all other properties\n        const res = runLoaders(sortedLoaders, { main: propped, options: opts }, 'load') // Recognize all special keys\n\n        // Return the resolved component\n        return resolve(res, (esc) => {\n            if (parentObject) parentObject[name] = esc // set resolved component immediately on the parent\n            root.loaded.run(esc) // onload callbacks (including from root)\n            return esc\n        })\n    })\n\n    // Track Performance\n    const creationToc = performance.now()\n    const toCreateTime = creationToc - tic\n\n    resolve(component, (esc) => {\n        if (!Array.isArray(esc)) {\n            const resolveToc = performance.now()\n            const resolveTime = resolveToc - tic\n            resolve(esc.__resolved, () => {\n                const toc = performance.now()\n                const resolveAllTime = toc - tic\n                globalThis.escomposePerformance.resolve.push(resolveTime)\n                globalThis.escomposePerformance.resolveAll.push(resolveAllTime)\n                globalThis.escomposePerformance.create.push(toCreateTime)\n\n            })\n        }\n    })\n\n    // Return the resolved component\n    return component\n}", "globalThis.escomposePerformance = {\n    create: [],\n    resolve: [],\n    resolveAll: [],\n    listeners: {\n        create: [],\n        resolve: [],\n    },\n    averages: function () {\n\n        const averages = {\n            create: 0,\n            resolve: 0,\n            resolveAll: 0,\n            listeners: {\n                create: 0,\n                resolve: 0,\n            }\n        }\n\n        for (const key in averages) {\n            if (typeof this[key] === 'object' && !Array.isArray(this[key])) {\n                for (const subKey in this[key]) {\n                    averages[key][subKey] = this[key][subKey].reduce((a, b) => a + b, 0) / this[key][subKey].length\n                }\n            } else averages[key] = this[key].reduce((a, b) => a + b, 0) / this[key].length\n        }\n        return averages\n    }\n}", "import { specialKeys } from \"../../../../spec/properties\"\nimport Monitor from \"../../esmonitor/src\"\nimport FlowManager from \"./edgelord/index\"\n\nexport const name = 'listeners'\n\nexport const required = true // Only applied if listeners\n\nexport const properties = {\n    dependents: [specialKeys.listeners.value]\n}\n\n// const manager = new FlowManager()\n\nconst monitor = new Monitor()\n\n// LOADER WITH OPTIONS: The only option use here is the options.listen callback to get updates...\nconst listenerLoader = ( esc, options ) => {\n\n    const configuration = esc[specialKeys.root]\n    const manager = new FlowManager() // Currently instance specific\n    const listeners = esc[specialKeys.listeners.value]\n\n    manager.setInitialProperties(listeners, configuration.path, {\n        id: configuration.root, // NOTE: Make sure this can change with the root\n        monitor,\n        options: options\n    })\n\n    monitor.set(configuration.symbol, esc), // Setting listeners with each reference\n\n    Object.defineProperty(esc, specialKeys.listeners.value, {\n        value: manager,\n        enumerable: false,\n        configurable: false,\n        writable: false\n    })    \n\n\n    configuration.start.add(() => { \n        manager.start()\n    })\n\n    return esc\n}\n\n\nexport default listenerLoader", "// import { Graph } from \"../../../Graph2\"\n\nimport { keySeparator, specialKeys } from '../../../../../spec/properties'\nimport '../../globals'\n\n\n// Special Key Definition\nconst defaultPath = specialKeys.default\nconst operatorPath = specialKeys.operator\n\n// Symbols to Recognize\nconst listenerObject = Symbol('listenerObject')\nconst toSet = Symbol('toSet')\nconst subscriptionKey = Symbol('subscriptionKey')\nconst configKey = Symbol('configKey')\nconst toResolveWithKey = Symbol('toResolveWithKey')\n\n// Configuration Options\nconst isConfigObject = (o) => specialKeys.listeners.format in o || specialKeys.listeners.branch in o || specialKeys.listeners.trigger in o || specialKeys.listeners.bind in o\n\n// Status Definitions\nconst initializedStatus = 'INITIALIZED'\nconst registeredStatus = 'REGISTERED'\n\n// Global References\nconst globalFrom = {} as any\nconst globalTo = {} as any\nconst globalActive = {}\n\n\nclass Edgelord {\n\n    original = {};\n    active = {}\n    globals: any = {}\n    context: any = {\n        options: {},\n    }\n    rootPath: string = ''\n    status = ''\n\n    graph: any // Graph\n    \n    #triggers: any[] = []\n    #queue: any[] = []\n    #toResolveWith: Edgelord\n\n    constructor (listeners?, root?, context?) {\n        if (listeners || root || context) this.setInitialProperties(listeners, root, context)\n    }\n\n    setInitialProperties = (listeners = {}, root, context: any ={}) => {\n\n        Object.assign(this.context, context)\n        if (root) this.rootPath = root\n        \n        this.original = listeners\n\n        const globals = [{name: 'active', ref: globalActive}, {name: 'from', ref: globalFrom}, {name: 'to', ref: globalTo}]\n        globals.forEach((o) => {\n            if (!o.ref[this.context.id]) o.ref[this.context.id] = {}\n            this.globals[o.name] = o.ref[this.context.id]\n        })\n\n        this.#toResolveWith = this.getManager()\n        this.runEachListener(listeners, this.addToGlobalLog)\n    }\n\n    getManager = (mode ='from') => {\n        \n            // Check if a higher-level listener is sending information from this root context\n            let target = (mode === 'to') ? this.globals.to : this.globals.from\n            this.rootPath.split(keySeparator).forEach((key) => {\n                if (!target[key]) target[key] = {}\n                target = target[key]\n            })\n\n            // if (Object.keys(target).length) this.#sendsToExternalGraph = true\n            return target[toResolveWithKey] ?? this\n    }\n\n    onStart = (f) => {\n        const res = this.#toResolveWith\n        const isSame = res === this\n        if (isSame) {\n            if (this.status === initializedStatus) f()\n            else this.#queue.push(f)\n        } else res.onStart(f)\n    }\n\n    runEachListener = (listeners, callback) => {\n        if (!callback) return\n        for (const first in listeners) {\n            const second = listeners[first]\n\n            if (!second) {\n                console.warn('Skipping empty listener:', first)\n                continue;\n            }\n\n            // NOTE: Listener sheets are to / from\n            if (second && typeof second === 'object') {\n                const from = second\n                const to = first\n                for (let fromPath in from) {\n                    callback(\n                        fromPath,  // From Path\n                        to, // To Path\n                        from[fromPath] // Value\n                    )\n                }\n            } \n            \n            // Immediate Absolute Paths Only\n            // NOTE: Direct listeners are from / to\n            else {\n                const from = first\n                const to = second\n\n                const typeOf = typeof to\n                if (typeOf === 'function') callback(from, '', to)\n                else if (typeOf === 'string') callback(from, to, to)\n                else console.error('Improperly Formatted Listener', to)\n            }\n        }\n\n    }\n\n    register = (listeners = this.original) =>  {\n\n        this.runEachListener(listeners, this.add)\n        this.status = registeredStatus\n    }\n\n    #initialize = (o) => {\n        const res = this.context.monitor.get(o.path, 'info')\n        if (typeof res.value === 'function') {\n            const args = (Array.isArray(o.args)) ? o.args : [o.args]\n            res.value(...args)\n        }\n        else console.error('Cannot yet trigger values...', o)\n    }\n\n    initialize = (o?) => {\n        if (!this.status) this.#triggers.push(o)\n        else if (this.status === registeredStatus) {\n            this.status = initializedStatus\n            this.#triggers.forEach(this.#initialize)\n            this.#queue.forEach(f => f())\n            this.#queue = []\n            this.#triggers = []\n        } else this.#initialize(o)\n    }\n\n    start = () => {\n        this.register()\n        this.initialize()\n    }\n\n    #getAbsolutePath = (name) => {\n        return (\n            !name \n            || !this.rootPath \n            || (this.rootPath === name.slice(0, this.rootPath.length) && name[this.rootPath.length] === keySeparator)\n        ) ? name : [this.rootPath, name].join(keySeparator)\n    }\n\n    #getPathInfo = (path) => {\n\n        const output = {\n            absolute: {},\n            relative: {}\n        } as any\n\n        // Transform name to absolute \n        path =  this.#getAbsolutePath(path)\n        let rel = this.rootPath ? path.replace(`${this.rootPath}.`, '') : path\n        const baseArr = path.split(keySeparator)\n        output.absolute.array = [this.context.id, ...baseArr]\n        output.relative.array = rel.split(keySeparator)\n\n        let obj = this.context.monitor.get(\n            output.absolute.array,  // For General Use\n            undefined, \n            // this.context.instance, \n        ) // Allow for getting properties\n\n\n        // Fallback to direct graph reference\n        if (this.context.graph) {\n\n            // Correct for paths that are relative to the bound object\n            if (obj && this.context.bound) {\n                output.absolute.array = [this.context.id, this.context.bound, ...output.absolute.array.slice(1)]\n                output.relative.array.unshift(this.context.bound)\n            } \n            \n            // Assume you are targeting the global graph\n            else if (!obj) {\n                const rel = output.relative.array.join(keySeparator)\n                obj = this.context.graph.get(rel)\n            }\n        }\n        \n        const isGraphScript = obj && typeof obj === 'object' && specialKeys.root in obj\n\n        // Fallback to default updates\n        const useOperator = obj && isGraphScript && obj[operatorPath]\n        const useDefault = obj && obj[defaultPath]\n        const extraPath = (useOperator) ? operatorPath : (useDefault) ? defaultPath : undefined\n        if (extraPath) {\n            output.absolute.array.push(extraPath)\n            output.relative.array.push(extraPath)\n        }\n\n        output.absolute.value = output.absolute.array.slice(1).join(keySeparator) // update path\n        output.relative.value = output.relative.array.join(keySeparator) // update path\n        \n        return output\n    }\n\n    add = (from, to, value: any = true, subscription?) => {\n\n        const tic = performance.now()\n\n        if (!value) return // Any non-truthy value is not accepted\n\n        const fromInfo = this.#getPathInfo(from)\n        const toInfo = this.#getPathInfo(to)\n\n        // Check global for subscription\n        const absPath = fromInfo.absolute.value\n        if (!subscription) subscription = this.globals.active[absPath]?.[subscriptionKey]\n\n        // Only subscribe once\n        if (!subscription) {\n            subscription =this.context.monitor.on(fromInfo.absolute.array, (path, _, update) => this.activate(path, update), {\n                ref: this.context.instance, // TODO: What does this do?\n                path: fromInfo.relative.array\n            })\n            // console.log('Subscribing', fromInfo.absolute.array, subscription)\n        }\n\n        // Use updated string value if modified\n        if (typeof value == 'string') value = toInfo.absolute.array.slice(1).join(keySeparator)\n\n        const info = {\n            value,\n            [listenerObject]: true\n        }\n\n        const refs = [this.active, this.globals.active]\n\n        refs.forEach(ref => {\n            if(!ref[absPath]) ref[absPath] = {}\n            const base = ref[absPath]\n            if (!base[subscriptionKey]) {\n                Object.defineProperty(base, subscriptionKey, {\n                    value: subscription,\n                    configurable: true\n                })\n            }\n            base[toInfo.absolute.value] = info\n        })\n\n        // // Update Original\n        // let base = this.original[toInfo.relative.value]\n        // if (!base) base = this.original[toInfo.relative.value] = {}\n        // if (typeof base !== 'object') {\n        //     if (typeof base === 'function') base = this.original[toInfo.relative.value] = {[Symbol('function listener')]: base} // Move function to arbitrary key\n        //     else base = this.original[toInfo.relative.value] = {[base]: true} // Move string to  a complex listener\n        // }\n        // base[fromInfo.relative.value] = value // complex listener\n\n        // Initalize triggers (possible on higherl-level manager)\n        const args = value[specialKeys.listeners.trigger]\n        if (args) this.#toResolveWith.initialize({\n            path: fromInfo.absolute.array,\n            args\n        })\n\n        this.addToGlobalLog(absPath)\n\n        const toc = performance.now()\n\n        globalThis.escomposePerformance.listeners.create.push(toc - tic)\n\n        return info\n    }\n\n    addToGlobalLog = (path, mode = 'from') => {\n\n        const absolutePath = this.#getAbsolutePath(path)\n\n        // Register in global registry\n        let target = (mode === 'to') ? this.globals.to : this.globals.from\n        const globalPath = absolutePath.split(keySeparator)\n        globalPath.forEach((key) => {\n            if (!target[key]) target[key] = {}\n            target = target[key]\n            if (!(target[toResolveWithKey])) target[toResolveWithKey] = this // Always set with the lowest\n        })\n\n    }\n\n    // Local removal\n    remove = (from, to) => {\n        const fromInfo = this.#getPathInfo(from)\n        const toInfo = this.#getPathInfo(to)\n\n        const path = [fromInfo.absolute.value, toInfo.absolute.value]\n        const toRemove = [\n            { ref: this.active, path },\n            { ref: this.globals.active, path, unlisten: true }, // Remove subscription if required\n            // { ref: this.original, path: [toInfo.relative.value, fromInfo.relative.value] }, // Just removing from the list\n        ]\n\n\n        toRemove.forEach(o => {\n            const { ref, path, unlisten } = o\n\n            let base = ref[path[0]]\n\n            if (typeof base === 'object') {\n                delete base[path[1]] // complex listener\n                if (Object.keys(base).length === 0) {\n                    delete ref[path[0]]\n                    const sub = base[subscriptionKey]\n                    if (unlisten && sub) {\n                        this.context.monitor.remove(sub) // Cleaning up subscriptions (active only)\n                    }\n                    delete base[subscriptionKey]\n                }\n\n            } else delete ref[path[0]] // simple listener\n\n        })\n\n    }\n\n    // Local clearing\n    clear = (name) => {\n        const value = this.#getAbsolutePath(name)\n\n        Object.keys(this.active).forEach(from => {\n            Object.keys(this.active[from]).forEach(to => {\n                if (\n                    !value\n                    || from.slice(0, value.length) === value // Matches from\n                    || to.slice(0, value.length) === value // Matches to\n                ) this.remove(from, to)\n            })\n        })\n    }\n\n    has = (from, ref=this.active) => !!ref[from]\n\n    get = (from, ref=this.active) => ref[from]\n\n\n\n    // ----------------- Global Flow Activation Management -----------------\n    activate = (from, update) => {\n\n        this.context.options.listen?.(from, update) // TODO: Move this directly to the monitor\n\n\n    const listenerGroups = [{\n        info: this.get(from, this.globals.active),\n        name: from // TODO: Check that this is correct\n    }]\n\n    listenerGroups.forEach(group => {\n\n        const info = group.info\n\n        if (info) {\n\n            if (info[listenerObject]) {\n\n                const tic = performance.now()\n\n                this.pass(from, {\n                    value: info.value,\n                    parent: this.active,\n                    key: group.name,\n                    subscription: info.subscription,\n                    __value: true\n                }, update)\n\n                const toc = performance.now()\n                globalThis.escomposePerformance.listeners.resolve.push(toc - tic)\n\n            } else if (typeof info === 'object') {\n\n                const tic = performance.now()\n\n                for (let key in info) {\n                    this.pass(from, {\n                        parent: info,\n                        key,\n                        subscription: info[key].subscription,\n                        value: info[key].value,\n                    }, update)\n\n                    const toc = performance.now()\n\n                    globalThis.escomposePerformance.listeners.resolve.push(toc - tic)\n\n                }\n            } else console.error('Improperly Formatted Listener', info)\n        }\n    })\n    \n}\n\npass = (from, target, update) => {\n\n    const id = this.context.id\n    const isValue = target?.__value\n    let parent = target.parent\n    let to = target.key\n\n\n    // const rootArr = root.split(keySeparator)\n    const info = target.parent[to]\n    target = info.value\n\n    let config = info?.[configKey] // Grab config\n\n    let ogValue = target\n    const type = typeof target\n\n    const checkIfSetter = (path, willSet) => {\n\n        const info = this.context.monitor.get(path, 'info')\n        if (info.exists) {\n            const val = info.value\n            const noDefault = typeof val !== 'function' && !val?.default\n            const value = (noDefault) ? toSet : val\n\n            const res = { value, bound: info.parent } // Ensure you have access to the bound parent\n\n            if (willSet) {\n                target = res.value\n                parent[to] = res\n            }\n\n            return res\n        } else return { value: undefined } //, root: undefined }\n\n    }\n\n    const transform = (willSet?) => {\n        const fullPath = [id]\n        // if (root) fullPath.push(...rootArr) // correcting for relative string\n        fullPath.push(...to.split(keySeparator))\n        return checkIfSetter(fullPath, willSet)\n    }\n\n    // ------------------ Grab Correct Target to Listen To ------------------\n\n\n    const getPathArray = (latest) => {\n        const path = [id]\n        const topPath: any[] = []\n        if (this.rootPath) topPath.push(...this.rootPath.split(keySeparator)) // correcting for relative string\n        topPath.push(...latest.split(keySeparator))\n        path.push(...topPath)\n        return path\n    }\n\n    // Confirmation of the target\n    if (typeof target === 'boolean') {\n        if (!isValue) transform(true)\n        else console.error(`Cannot use a boolean for ${specialKeys.listeners.value}...`)\n    }\n\n    // Name of the target\n    else if (type === 'string') {\n        const path = getPathArray(ogValue)\n        checkIfSetter(path, true)\n\n        if (isValue) {\n            parent[to] = { [ogValue]: parent[to] }\n            to = ogValue\n        }\n    }\n\n    else if (target && type === 'object') {\n\n        // Check if configuration object\n        const isConfig = isConfigObject(ogValue)\n\n        if (isConfig) {\n\n            if ('value' in ogValue) {\n                if (isValue) {\n                    target = parent[to] = ogValue.value // setting value\n                } else {\n                    target = parent[to].value = ogValue.value // setting value\n                }\n            } else transform(true)\n\n            if (ogValue){\n                if (ogValue) config = ogValue\n            }\n\n            Object.defineProperty(parent[to], configKey, { value: config })\n        }\n\n    }\n\n    // ------------------ Special Keywords ------------------\n    let isValidInput = true\n\n    if (config) {\n\n        \n        const bindKey = specialKeys.listeners.value\n        if (bindKey in config) {\n\n            // (de)Register listeners at runtime...\n            const path = getPathArray(config[bindKey].original ?? config[bindKey])\n            if (typeof config[bindKey] === 'string') {\n                const res = this.context.monitor.get(path)\n                if (!res)  target = `because ${path.slice(1).join(keySeparator)} does not point correctly to an existing component.`\n                else {\n                    config[bindKey] = {\n                        value: res,\n                        original: config[bindKey]\n                    }\n                }\n            } else if (!config[bindKey].value.__parent) {\n                target = `because ${config[bindKey].original ?? id.toString()} has become unparented.`\n            }\n\n        } \n        \n        else {\n\n            const branchKey = specialKeys.listeners.branch\n            const formatKey = specialKeys.listeners.format\n\n            if (branchKey in config) {\n\n                const isValid = config[branchKey].find(o => {\n\n                    let localValid: boolean[] = []\n                    if ('if' in o) localValid.push(o.if(update)) // Condition Function\n                    if ('is' in o) localValid.push(o.is === update) // Equality Check\n                    const isValidLocal = localValid.length > 0 && localValid.reduce((a, b) => a && b, true)\n\n                    if (isValidLocal) {\n                        if ('value' in o)  update = o.value // set first argument to branch value\n                    }\n\n                    return isValidLocal\n                })\n\n                if (!isValid) isValidInput = false\n            }\n\n\n            \n            // NOTE: May turn into an array here\n            if (formatKey in config) {\n                try {\n                    update = config[formatKey](update)\n                    if (update === undefined) isValidInput = false\n                } catch (e) { console.error('Failed to format arguments', e) }\n            }\n\n        }\n    }\n\n    // ------------------ Handle Target ------------------\n    if (\n        isValidInput // Ensure input is valid\n        && update !== undefined // Ensure input is not exactly undefined (though null is fine)\n    ) {\n\n        const arrayUpdate = Array.isArray(update) ? update : [update]\n\n\n        // Set New Value on Parent\n        if (target === toSet) {\n            const parentPath = [id]\n            // if (root) parentPath.push(...rootArr) // TODO: Check if this needs fixing\n            parentPath.push(...to.split(keySeparator))\n            const idx = parentPath.pop()\n            const info = this.context.monitor.get(parentPath, 'info')\n            if (info.value) info.value[idx] = update\n            else console.error(`Cannot set value on ${parentPath.filter(str => typeof str !== 'symbol').join(keySeparator)} from ${from}`)\n        }\n\n        // Direct Object with Default Function\n        else if (target?.default) {\n            target.default.call(target, ...arrayUpdate) // Call with parent context\n        }\n\n        // Direct Function\n        else if (typeof target === 'function') {\n\n            // const noContext = parent[to][listenerObject]\n            // if (noContext) \n            const boundTo = config?.[specialKeys.listeners.bind]?.value ?? info.bound ?? this.context.instance\n            if (boundTo) target.call(boundTo, ...arrayUpdate) // Call with top-level context\n            else target(...arrayUpdate) // Call with default context\n        }\n\n        // Failed\n        else {\n\n            let baseMessage = (to) ? `listener: ${from} \u2014> ${to}` : `listener from ${from}`\n            if (parent) {\n                console.warn(`Deleting ${baseMessage}`, target)\n                delete parent[to]\n            } else console.error(`Failed to add ${baseMessage}`, target)\n        }\n    }\n}\n\n\n}\n\nexport default Edgelord", "import { specialKeys } from \"../../../../spec/properties\"\n\nexport const name = 'trigger'\n\nconst key = specialKeys.trigger\n\nexport const properties = {\n    dependents: [key],\n    dependencies: [specialKeys.listeners.value]\n}\n\nconst triggerLoader = ( esc ) => {\n\n    console.log('triggerLoader', esc)\n    const configuration = esc[specialKeys.root]\n    let val = esc[key]\n\n    Object.defineProperty(esc, key, {\n        value: val,\n        enumerable: false,\n        configurable: false,\n        writable: false\n    })    \n\n\n    // configuration.start.add(() => { })\n    if (!Array.isArray(val)) val = [val]\n    esc[specialKeys.listeners.value].onStart(() => esc.default(...val))\n    return esc\n}\n\n\nexport default triggerLoader\n", "import Monitor from \"../esmonitor/src/index\"\nimport { deep as deepClone } from \"../common/clone.js\"\nimport { Options } from \"../common/types\"\nimport * as utils from \"../common/utils\"\n\nimport { ConfigInput } from \"./types\"\nimport load from \"./load\"\n\nimport * as components from \"./components\"\n\nimport { specialKeys } from \"../../../spec/properties\"\nimport ESComponent from \"../../esc.spec\"\n\nimport './globals'\n\n// Default Loaders\nimport * as listenerLoader from \"./escode-listeners-loader\"\nimport * as childrenLoader from \"./escode-trigger-loader\"\nimport { combineLoaders } from \"./utils/loaders\"\n\n// Use a global monitor instance to listen to an object property without creating an ES Component \nexport const monitor = new Monitor()\n\n// This function is the user interface for creating ES Components\nexport const create = (\n    config: ConfigInput, // This is a configuration object, which can be many things\n    overrides: any = {}, // This is an object that is applied to resulting objects from the configuration object\n    options: Partial<Options> = {}, // There are a few options that the user can set to configure their Components\n) => {\n\n    const copy = deepClone(options) as Options // Clone the options object\n    copy.loaders = combineLoaders(copy.loaders, [listenerLoader, childrenLoader]) // Specify the loaders\n    const fullOptions = copy as Options // Define as a complete options object\n\n    // Load the component\n    const component = load(config, fullOptions.loaders, {\n        overrides,\n        opts: fullOptions,\n        waitForChildren: false\n    })\n\n    // Start the component after it has been properly instantiated\n    return utils.resolve(component, (esc) => {\n        const isArray = Array.isArray(esc)\n        let arr = (!isArray) ? [esc] : esc\n\n        // Activate if it has a parent\u2014or it is the root\n        arr.map(esc => {\n            if (esc[specialKeys.parent] || esc.__.path === '') {\n                const configuration = esc[specialKeys.root]\n                const hasStarted = configuration.start.value\n                if (hasStarted === false) {\n                    const onRun = configuration.start.run()\n                    return utils.resolve(onRun, resolve) // Return synchronously unless the user requests a promise\n                }\n            } else return esc // Just return instance synchronously since the component is only activated when placed in the DOM\n        })\n\n        if (!isArray) return arr[0] as ESComponent\n        else return arr as ESComponent[]\n    }) as ESComponent\n\n}\n\nexport default create\n\n\n// Find components on an object\nexport const find = components.from\n\n// Apply a callback to promises and direct references\nexport const resolve = utils.resolve\n\n// Deep clone an object without creating an ES Component\nexport const clone = deepClone\n\n// Merge two objects together without creating an ES Component \nexport const merge = (objects, updateOriginal) => {\n    let base = objects.shift()\n    objects.forEach(o => base = utils.merge(base, o, updateOriginal))\n    return base\n}\n", "// Utilities\nimport { resolve, merge as basicMerge } from \"../common/utils\"\n\n// Helpers\nimport compile from './compile'\nimport { esSourceKey, specialKeys } from '../../../spec/properties'\n\ntype anyObj = {[key: string]: any}\ntype esComposeType = anyObj | anyObj[]\n\n\nexport const name = 'compose'\n\nconst localSpecialKeys = {\n    compose: specialKeys.compose,\n    apply: specialKeys.apply,\n\n    // Added with library\n    bundle: esSourceKey\n}\n\nexport const behavior = 'init'\n\nexport const properties = {\n    dependents:  Object.values(localSpecialKeys),\n}\n\nconst isPathString = (value) => typeof value === 'string' && (value.includes('/') || value.includes('.'))\n\n// ------------ Composition Loader Function ------------\n// This function is used to load the __compose property of an object\n// LOADER WITH OPTIONS: This uses the relativeTo option\u2014and others to get the user-supplied bundler...\n// -----------------------------------------------------\nfunction compose(o, opts, updateOriginal=false) {\n    \n    o = compileAndMerge(o, o[localSpecialKeys.compose], opts, true, updateOriginal) // Basic Composition Support\n\n    return resolve(o, (o) => {\n\n        // ------------------ Set __apply Properties on Composition ------------------\n        const toApply = o[localSpecialKeys.apply]\n        const toApplyFlag = (toApply && (typeof toApply === 'object' || isPathString(toApply)))\n        o = toApplyFlag ? compileAndMerge(o,toApply, opts, false, updateOriginal) : o // Reverse Composition Support\n        return resolve(o)\n    })\n}\n\nexport default compose\n\n// ------------ Merge Helper ------------\n// This merge function is used to merge two objects together WHILE RESOLVING COMPONENTS THAT MUST BE COMPILED\n// --------------------------------------\nfunction compileAndMerge(properties, composition: esComposeType = {}, opts: any = {}, flipPrecedence=false, updateOriginal=false) {\n\n    // Ensure __compose is an array\n    if (!Array.isArray(composition)) composition = [composition]\n\n    // Merge nested __compose objects\n    let promise = resolve(composition.map(o => {\n       const compiled = compile(o, opts) // Resolve from text if required\n\n       const checkAndPushTo = (target, acc: any[] = [], forcePush = true) => {\n\n        if (Array.isArray(target)) target.forEach(o => checkAndPushTo(o, acc), true)\n\n        else if (target[localSpecialKeys.compose]) { \n\n                acc.push(target)\n\n                const val = target[localSpecialKeys.compose]    \n                delete target[localSpecialKeys.compose]\n                const newTarget = resolve(compile(val, opts)) // Resolve from text if required\n                checkAndPushTo(newTarget, acc)\n        }\n        else if (forcePush) acc.push(target)\n\n        return acc\n       }\n       \n       return resolve(compiled, (compiled) => checkAndPushTo(compiled))\n    }))\n\n    return resolve(promise, (composition) => {\n\n        const flat = composition.flat();\n\n        let composed = {}\n\n        flat.forEach((toCompose) => composed = basicMerge(\n            composed, \n            toCompose, \n            false, \n            false, \n            // true // NOTE: Would allow functions to be nested inside each other\n        ));\n\n        return basicMerge(\n            properties, \n            composed, \n            updateOriginal, \n            flipPrecedence, \n            // true\n        );\n    })\n}", "const fetchAndInstantiateTask = async (uri, importObject) => {\n    const wasmArrayBuffer = await fetch(uri).then(response => response.arrayBuffer());\n    return WebAssembly.instantiate(wasmArrayBuffer, importObject);\n};\n\n// https://github.com/torch2424/wasm-by-example/blob/master/demo-util/\nconst load = async (uri, importObject) => {\n\n    if (!importObject) importObject = { env: { abort: () => console.log(\"Abort!\") } };\n\n    if (WebAssembly.instantiateStreaming) return await WebAssembly.instantiateStreaming( fetch(uri), importObject );\n    else return await fetchAndInstantiateTask(uri, importObject);\n};\n\nexport default load", "import { Options } from \"../../common/types\"\nimport { specialKeys } from \"../../../../spec/properties\"\nimport { deep as deepClone } from \"../../common/clone\"\n\nimport wasm from './wasm'\n\n\nconst catchError = (o, e) => {\n    // Insert an Error Component\n    if (o[specialKeys.reference]) {\n        console.warn('[escode]: Falling back to ES Component reference...', e)\n        return o[specialKeys.reference] // fallback to reference key\n    }\n    else return createErrorComponent(e.message)\n}\n\nconst genericErrorMessage = `Cannot transform ${specialKeys.compose} string without a compose utility function`\n\nexport default function compile(o, opts: Options) {\n            \n    // Special URL key\n    let uri = (typeof o === 'string') ? o : o[specialKeys.uri]\n\n    if (uri && uri.slice(-5) === '.wasm') {\n        let relTo = o.relativeTo ?? opts?.relativeTo ?? window.location.href\n        if (relTo.slice(-1)[0] !== '/') relTo += '/'\n        const absoluteURI = new URL(uri, relTo).href\n        return new Promise(async (resolve) =>  {\n            const info = await wasm(absoluteURI, o.importOptions)\n            const copy = Object.assign({}, info.instance.exports) as any\n            // WebAssembly Support\n            for (let key in copy){\n                const val = copy[key]\n                if (val instanceof WebAssembly.Memory) copy[key] = new Uint8Array(val.buffer); // Replace Memory with Typed Array\n                else if (val instanceof WebAssembly.Global) {\n                    Object.defineProperty(copy, key, {\n                        get: () => val.value,\n                        set: (v) => val.value = v\n                    })\n                }\n            }\n\n            resolve(copy)\n        })\n    }\n\n    else if (uri && opts.utilities) {\n\n        // Get Text Bundle\n        const bundleOpts = opts.utilities.bundle\n        const gotBundleOpts = bundleOpts && typeof bundleOpts.function === 'function'\n        const compileOpts = opts.utilities.compile\n        const gotCompileOpts  = compileOpts && typeof compileOpts.function === 'function'\n        \n        if (!gotBundleOpts && !gotCompileOpts) o = catchError(o, new Error(genericErrorMessage))\n        else {\n            return new Promise(async (resolve) => {\n\n                try {\n\n                    if (gotBundleOpts) {\n                        const options = bundleOpts.options ?? {}\n                        if (!options.bundler) options.bundler = 'datauri' // link as datauri\n                        if (!options.bundle) options.collection ='global' // same collection across all instances on the page\n                        if (!options.relativeTo) options.relativeTo = opts.relativeTo ?? '.' // Specify relativeTo in different locations\n                        const bundle = bundleOpts.function(uri, options)\n\n                        // Track Bundle Resolution\n                        await bundle.compile()\n\n                        o = Object.assign({}, bundle.result)\n                    } \n                    \n                    // Just Compile\n                    else if (gotCompileOpts) {\n                        const options = compileOpts.options ?? {}\n                        if (!options.relativeTo) options.relativeTo = opts.relativeTo ?? '.' // Specify relativeTo in different locations\n                        const resolved = await compileOpts.function(o, options)\n                        o = resolved\n                    } \n                    \n                    // Show Error Message\n                    else {\n                        throw new Error(genericErrorMessage)\n                    }\n                } catch (e) { \n                    o = catchError(o, e)       \n                }\n\n                resolve(deepClone(o))\n            })\n        }\n    }\n\n    return deepClone(o[specialKeys.reference] ?? o) \n}\n\n\nfunction createErrorComponent (message) {\n    return {\n        [specialKeys.element]: 'p',\n        b: {\n            [specialKeys.element]: 'b',\n            [specialKeys.attributes]: {\n                innerText: 'Error: '\n            }\n        },\n        span: {\n            [specialKeys.element]: 'span',\n            [specialKeys.attributes]: {\n                innerText: message\n            }\n        }\n    }\n}", "import * as element from './escode-element-loader'\nimport * as define from './escode-define-loader'\nimport { ESComponent } from '../../../esc.spec'\nimport { Options } from '../../common/types'\nimport { specialKeys } from '../../../../spec/properties'\n\nexport const name = 'dom'\n\nexport const required = true\n\nconst dependents = new Set([\n    ...element.properties.dependents,\n    ...define.properties.dependents,\n])\n\n\nconst dependencies = new Set([\n    ...element.properties.dependencies,\n    ...define.properties.dependencies,\n])\n\ndependencies.delete(specialKeys.element)\n\nexport const properties = {\n    dependents: Array.from(dependents),\n    dependencies: Array.from(dependencies)\n}\n\nexport default function create(esm: ESComponent, options:Partial<Options> = {}) {\n    const el = element.default(esm, options)\n    const defined = define.default(el)\n    return defined\n}", "import { specialKeys } from \"../../../../../spec/properties\"\nimport { deep } from '../../../common/clone'\nimport { isNode } from \"../../../common/globals\"\n\nexport const name = 'define'\n\nexport const properties = {\n    dependents: [specialKeys.webcomponents],\n    dependencies: [specialKeys.element, specialKeys.component, specialKeys.parent]\n}\n\nexport default (esc) => {\n\n        // ------------------ Register Components (keyword) ------------------\n        let registry = esc[specialKeys.webcomponents] ?? {}\n        for (let key in registry) {\n            const model = registry[key]\n            const config =  model[specialKeys.element]\n            if (config.name && config.extends) define(config, esc, model)\n        }\n\n        return esc\n}\n\n// Allow Specifying a Customized Element using Autonomous Element format\nconst registry = {}\n\nif (!isNode) {\n    const ogCreateElement = document.createElement\n    document.createElement = function (name, options) {\n        const info = registry[name]\n        const created = (info && !info.autonomous) ? ogCreateElement.call(this, info.tag, {is: name}) : ogCreateElement.call(this, name, options)\n        return created\n    }\n}\n\n// TODO: Add support for componentizing SVG elements\nconst tagToClassMap = {\n    li: 'LI',\n    ol: 'OL',\n    ul: 'UL',\n    br: 'BR',\n    p: 'Paragraph',\n    textarea: 'TextArea',\n    a: 'Anchor',\n}\n\nconst isAutonomous = false\n\n\nexport const define = (config, esc, model = esc) => {\n\n    // Register the Component\n    if (!registry[config.name]) {\n\n        // Split the Instances\n        const copy = deep(model)\n\n        // Derive the Base Class Name\n        const clsName = (isAutonomous) ? '' : (tagToClassMap[config.extends] ?? config.extends[0].toUpperCase() + config.extends.slice(1))\n\n        const BaseClass = (new Function(`\n\n        class ESComponentBase extends HTML${clsName}Element { \n            #properties;\n            constructor(properties={}){\n                super()\n               this.#properties = properties\n            }\n        }\n        return ESComponentBase;\n\n        `))() as CustomElementConstructor;\n        \n        // Create a New Class Per Definition\n        class ESComponent extends BaseClass {\n            __component;\n\n            constructor(properties){\n                super(properties)\n                copy[specialKeys.element] = this\n                esc[specialKeys.root].create(copy)\n            }\n\n            connectedCallback() {\n                const component = this[specialKeys.component]\n                const parent = component[specialKeys.parent]\n                component[specialKeys.parent] = parent // Trigger parent setter\n            }\n\n            disconnectedCallback() {\n                console.log('Custom element removed from page.');\n            }\n              \n            adoptedCallback() {\n                console.log('Custom element moved to new page.');\n            }\n\n            attributeChangedCallback(name, oldValue, newValue) {\n                console.log('Custom element attributes changed.', name, oldValue, newValue);\n            }\n        }\n\n        registry[config.name] = {\n            class: ESComponent,\n            autonomous: isAutonomous,\n            tag: config.extends\n        }\n        \n        const cls = registry[config.name].class\n        // Define the Element\n        if (isAutonomous) customElements.define(config.name, cls);\n        else customElements.define(config.name, cls, {extends: config.extends});\n\n    } else {\n        console.log('Already created component...')\n    }\n\n    // // Create the Element\n    // if (isAutonomous) return document.createElement(config.name);\n    // else return document.createElement(config.extends, {is: config.name});\n}\n", "import { Options } from \"../../../common/types\";\nimport { EditorProps } from \"../../../escode-ide/src\";\nimport { ESComponent, ESDefineInfo, ESElementInfo } from \"../../../../spec/index\";\nimport { resolve } from \"../../../common/utils\";\nimport { specialKeys } from \"../../../../../spec/properties\";\n\n// Other Loaders\nimport * as component from \"../escode-define-loader/index\"; // TODO: Fully separate this out...\n\n// Proper SVG Support\n// Incomplete SVG Support List: https://developer.mozilla.org/en-US/docs/Web/SVG/Element\nconst createSVG = (name = 'svg', options?: ElementCreationOptions) => document.createElementNS(\"http://www.w3.org/2000/svg\", name, options)\n\n\nexport type ESComponentStates = {\n\n    // Initial\n    connected: boolean,\n\n    // Element\n    element: HTMLElement // resolved element\n    attributes: ESComponent['__attributes']\n    parentNode: ESComponent['__parent']\n    onresize: ESComponent['__onresize']\n    onresizeEventCallback: EventListener,\n\n    __source?: ESComponent['__source']\n}\n\n\nfunction checkESCompose (__compose) {\n    if (!__compose) return false\n    const isArr = Array.isArray(__compose)\n    return (isArr) ? !__compose.reduce((a,b) => a * (checkForInternalElements(b) ? 0 : 1), true) : checkForInternalElements(__compose)\n}\n\nfunction checkForInternalElements(esc){\n    if (esc.__element || checkESCompose(esc.__compose)) return true\n    else if (esc.__) return check(esc.__.components)\n}\n\nfunction check (components) {\n    return Array.from(components.values()).find(esc => {\n        if (checkForInternalElements(esc)) return true\n    })\n}\n\n\nconst createElement = (args: [string, ElementCreationOptions?], parent) => {\n    if (args[0] === 'svg' || ( parent && parent.__element instanceof SVGElement)) return createSVG(...args)\n    else return document.createElement(...args)\n}\n\nexport const name = 'element'\n\nexport const required = true\n\nexport const properties = {\n    dependents: [\n        specialKeys.element, \n        specialKeys.attributes, \n        specialKeys.resize, \n        specialKeys.childPosition, \n        specialKeys.editor, \n        specialKeys.component, \n        specialKeys.attribute,\n\n        // Track Connection to the DOM\n        specialKeys.connected, \n    ],\n    dependencies: [\n        specialKeys.parent, \n        specialKeys.root, \n        specialKeys.proxy, \n    ],\n}\n\n\nconst document = globalThis.document\nconst addEventListener = globalThis.addEventListener\nconst removeEventListener = globalThis.removeEventListener\n\n\n// LOADER WITH OPTIONS: This uses the options for loading the IDE..which should be separated\nexport default function create(esm: ESComponent, options:Partial<Options> = {}) {\n\n    const configuration = esm[specialKeys.root]\n    let states = configuration.states\n    let id = configuration.name\n\n    const parent = esm[specialKeys.parent] // Grab temporary parent\n\n    // --------------------------- Get Element ---------------------------\n    let element = esm[specialKeys.element] as ESComponent['__element'] | null; // Always create div at the least\n    const attributes = esm[specialKeys.attributes] ?? {}\n\n\n    let info: undefined | ESComponent['__element'];\n    if (!(element instanceof globalThis.Element)) {\n        const mustShow = (attributes && Object.keys(attributes).length) || checkForInternalElements(esm)\n        const defaultTagName = mustShow ? 'div' : 'span' // If unsure, use span to avoid extra space\n\n        // ------------------ Register Components (children) ------------------\n        const isWebComponent = element && typeof element === 'object' && (element as any).name && (element as any).extends\n        if (isWebComponent) {\n            const esDefineInfo = element as ESDefineInfo\n            const config = esm[specialKeys.element]\n            component.define(config, esm)\n            esm[specialKeys.element] = element = esDefineInfo.name // create a custom element\n        }\n        \n        // Nothing Defined\n        if (element === undefined) element = defaultTagName\n        else if (Array.isArray(element)) element = createElement(element as [string, ElementCreationOptions], parent);\n\n\n        // Configuration Object Defined\n        else if (typeof element === 'object') {\n            info = element as ESElementInfo\n\n            // Get HTML Elememt\n            if (info.selectors) element = document.querySelector(info.selectors)\n            else if (info.id) element = document.getElementById(info.id)\n            else element = defaultTagName // default to div\n        }\n\n        if (typeof element === 'string') element = createElement([element], parent);\n\n        // Automatically Set innerText for inoputs\n        const noInput = Symbol('no input to the default function')\n        if (!esm.hasOwnProperty('default')) {\n            esm.default = function(input = noInput) { \n                if (input !== noInput) this[specialKeys.element].innerText = input  // Set the text of the associated element\n                return this[specialKeys.element] // return whole element\n            }\n        }\n    }\n\n    if (!(element instanceof globalThis.Element)) throw new Error('Element not created for ' + id);\n\n    // Track All States\n    let intermediateStates = states || {};\n    intermediateStates.element = element;\n    intermediateStates.attributes = attributes;\n    if (parent instanceof globalThis.Element) intermediateStates.parentNode = parent;\n    else intermediateStates.parentNode = parent?.[specialKeys.element] instanceof globalThis.Element ? parent[specialKeys.element] : element.parentNode; // Update based on Component hierarchy\u2014or fallback to existing parent (if not nested...)\n    intermediateStates.onresize = esm[specialKeys.resize];\n    intermediateStates.onresizeEventCallback = undefined;\n\n    const finalStates = intermediateStates as ESComponentStates\n\n    // // Detect if Child Elements are Added and Need to be Initialized\n    // states.observer = new MutationObserver(function(mutations) {\n    //     mutations.forEach((mutation) =>{\n    //         console.log('mutation', mutation, mutations)\n    //         for(var i = 0; i < mutation.addedNodes.length; i++) {\n    //             const node = mutation.addedNodes[i] as any\n    //             if (node.hasAttribute instanceof Function){\n    //                 if (node.hasAttribute('escomponent')) node.__component.__esReady()\n    //             }\n    //         }\n    //     })\n    // });\n\n    // --------------------------- Assign Things to Element ---------------------------\n    if (typeof id !== 'string') id = `${element.tagName ?? 'element'}${Math.floor(Math.random() * 1000000000000000)}`;\n    if (!element.id) element.id = id;\n\n\n    // Wait to initialize the element until it is inserted into an active DOM node\n    let isConnected; \n\n    // track if ready\n    Object.defineProperty(esm, `${specialKeys.connected}`, {\n        value: new Promise(resolve => isConnected = async () => {\n            configuration.connected = true\n            resolve(true)\n        }),\n    })\n\n    configuration.connected = isConnected\n\n    const isEventListener = (key, value) => key.slice(0,2) === 'on' && typeof value === 'function'\n    const handleAttribute = (key, value, context) => {\n        if (!isEventListener(key, value) && typeof value === 'function') return value.call(context)\n         else return value\n    }\n\n    const setAttributes = (attributes) => {\n\n        if (esm[specialKeys.element] instanceof globalThis.Element) {\n            for (let key in attributes) {\n\n                // Set Style Per Attribute\n                if (key === 'style') {\n                    for (let styleKey in attributes.style) esm[specialKeys.element].style[styleKey] = handleAttribute(key, attributes.style[styleKey], esm)\n                }\n\n                // Replace Whole Attribute\n                else {\n                    const value = attributes[key]\n                    if (isEventListener(key, value)) {\n                        const func = value;\n                        esm[specialKeys.element][key] = (...args) => {\n                            const context = esm[specialKeys.proxy] ?? esm\n                            return func.call(context ?? esm, ...args)\n                        }; // replace this scope\n                    } else {\n                        const valueToSet = handleAttribute(key, value, esm)\n\n                        // Set in two different ways\n                        esm[specialKeys.element].setAttribute(key, valueToSet)\n                        try { esm[specialKeys.element][key] = valueToSet} catch (e) {};\n                    }\n                }\n            }\n        }\n    }\n\n    Object.defineProperty(esm, specialKeys.attributes, {\n        get: () => finalStates.attributes,\n        set: (value) => {\n            finalStates.attributes = value;\n            if (finalStates.attributes) setAttributes(finalStates.attributes)\n        }\n    })\n\n    // Listen for Changes to Element\n    Object.defineProperty(esm, specialKeys.element, {\n        get: function() {\n            if (finalStates.element instanceof globalThis.Element) return finalStates.element\n        },\n        set: function(v) {\n\n            if (v instanceof globalThis.HTMLElement) {\n\n                if (finalStates.element !== v){\n                    finalStates.element.insertAdjacentElement('afterend', v) // Insert New Element\n                    finalStates.element.remove() // Remove Old Element\n                }\n\n                finalStates.element = v\n\n                // Trigger __parent Setter on Nested Components\n                const configuration = esm[specialKeys.root]\n                if (configuration) {\n                    const components = configuration.components\n                    for (let name in components) {\n                        const component = components[name] as ESComponent | Promise<ESComponent>; // TODO: Update these types since resolution order is different\n                        if (component && component[specialKeys.root]){\n                            resolve(component, (res) => res[specialKeys.parent] = v)\n                        }\n                    }\n                }\n\n                // Set Attributes\n                setAttributes(finalStates.attributes)\n\n                // finalStates.observer.disconnect()\n                // finalStates.observer.observe(v, { childList: true });\n            }\n        },\n    })\n\n    const ogGet = configuration.parent.get\n    configuration.parent.get = () => {\n\n        const fallback = ogGet()\n\n        const parentNode = esm[specialKeys.element].parentNode // Grab parent from DOM\n\n        if (parentNode) {\n            const isComponent = parentNode.hasAttribute(specialKeys.attribute)\n            if (isComponent) return parentNode[specialKeys.component] // Actual parent component\n            else return  { [specialKeys.element]: parentNode }  // Mock parent component\n        }\n        \n        else return fallback // Original parent\n    }\n\n    configuration.parent.add(function (v) {\n\n        //  Get Parent Node from User String\n        if (typeof v === 'string') {\n            const newValue = document.querySelector(v);\n            if (newValue) v = newValue\n            else v = document.getElementById(v);\n        }\n\n        // Set Parent Node on Element\n        if (v?.[specialKeys.element] instanceof globalThis.Element) v = v[specialKeys.element]\n\n        const current = this[specialKeys.element].parentNode\n\n        if (current !== v){ \n            if (this[specialKeys.element] instanceof globalThis.Element) {\n                if(current) this[specialKeys.element].remove()\n\n                if (v instanceof globalThis.Element) {\n\n                    // --------------------------- Place inside ESCode Instance (if created) ---------------------------\n                    const desiredPosition = this[specialKeys.childPosition]\n\n                    let ref = this[specialKeys.element]\n\n                    const __editor = configuration.editor\n\n                    if (__editor) ref = __editor // Set inside parent. Set focused component in __onconnected\n\n                    // Properly sort children that have a desired position\n                    const length = v.children.length\n                    if (!length || typeof desiredPosition !== 'number') v.appendChild(ref); // append directly\n                    else {\n                        const before = [...v.children].slice(0, desiredPosition)\n                        let toCheck, inserted\n                        while (before.length) {\n                            toCheck = before.pop()\n                            const beforeComponent = toCheck[specialKeys.component]\n                            const beforedDesiredPosition = beforeComponent[specialKeys.childPosition]\n                            if (typeof beforedDesiredPosition === 'number') {\n                                const location = (beforedDesiredPosition > desiredPosition) ? 'beforebegin' : 'afterend'\n                                toCheck.insertAdjacentElement(location, ref)\n                                inserted = true\n                                break;\n                            }\n                        }\n                        if (!inserted) v.insertAdjacentElement('afterbegin', ref); // append to top\n                    }\n                    \n                    if (__editor) __editor.setComponent(this); // Set the target component on ESCode visualization\n\n                    // // Signal connection to the DOM\u2014which is a valid parent\n                    // configuration.parent.start() // NOTE: Not functional at the moment...because tests on accessify broke the panel\n                }\n            } \n            \n            // Set Child Parent Nodes to This\n            else {\n                console.error('No element was created for this Component...', this)\n            }\n        }\n    })\n\n    // On Resize Function\n    let onresize = esm[specialKeys.resize]\n    Object.defineProperty(esm,specialKeys.resize,{\n        get: function() { return onresize },\n        set: function(foo) {\n            finalStates.onresize = foo\n            if (finalStates.onresizeEventCallback) removeEventListener('resize', finalStates.onresizeEventCallback) // Stop previous listener\n            if (finalStates.onresize) {\n                finalStates.onresizeEventCallback = (ev) => { \n                    if ( finalStates.onresize && esm[specialKeys.element] instanceof globalThis.Element ) {\n                        const context = esm[specialKeys.proxy] ?? esm\n                        return foo.call(context, ev) \n                    }\n                };\n                addEventListener('resize', finalStates.onresizeEventCallback);\n            }\n        },\n    })\n\n\n    // --------------------------- Spawn ESCode Instance ---------------------------\n    const utilities = options?.utilities\n    if (utilities && esm[specialKeys.editor]) {\n        let config = esm[specialKeys.editor]\n        let cls = utilities.code?.class\n\n        if (!cls) {\n            if (typeof config === 'function') cls = config\n            else console.error('Editor class not provided in options.utilities.code')\n        }\n\n\n        if (cls) {\n            let options = utilities.code?.options ?? {}\n            options = ((typeof config === 'boolean') ? options : {...options, ...config}) as EditorProps\n            const bound = (options as any).bind\n            const __editor = new cls(options)\n            __editor.start() // start the editor\n\n            // Attach editor to component (ui)\n            configuration.editor = __editor\n\n            // Bind component to editor (graph)\n            if (bound !== undefined) {\n\n                let boundESM = esm // TODO: Use graphscript to find a specific node using relative uri\n                const configuration = esm[specialKeys.root]\n                bound.split('/').forEach(str => {\n                    if (str === '..') boundESM = boundESM[specialKeys.root].states.parentNode[specialKeys.component] // Move to parent\n                    else if (str === '.') return // Do nothing\n                    else boundESM = boundESM[str] // Move to child\n                }) \n                \n                if (!configuration.boundEditors) configuration.boundEditors = [__editor]\n                else configuration.boundEditors.push(__editor)\n            }\n        }\n    }\n    \n\n    // --------------------------- Set Element Attributes ---------------------------\n    esm[specialKeys.element][specialKeys.component] = esm\n    esm[specialKeys.element].setAttribute(specialKeys.attribute, '')\n    esm[specialKeys.element] = esm[specialKeys.element] // Trigger __attributes setters\n\n    // --------------------------- Trigger State Changes (if not accessible elsewhere) ---------------------------\n    // if (!states) {\n\n    configuration.start.add(() =>{\n        esm[specialKeys.resize] = finalStates.onresize\n    }, 'before')\n\n    configuration.stop.add(() => {\n\n        esm[specialKeys.element].remove();\n\n        // Remove code editor\n        const privateEditorKey = `${specialKeys.editor}Attached` // TODO: Ensure esc key is standard\n        if (esm[privateEditorKey]) esm[privateEditorKey].remove() \n\n    })\n\n    return esm;\n}", "import { esSourceKey, specialKeys } from \"../../../spec/properties\"\nimport ESComponent from \"../../esc.spec\"\n\nexport const name = 'start'\n\nexport const required = true\n\nexport const properties = {\n    dependents: [\n        specialKeys.source, // Activates this from the composition\n    ],\n    dependencies: [\n        esSourceKey,\n        specialKeys.root,\n        specialKeys.editor,\n        specialKeys.parent,\n        specialKeys.proxy,\n        specialKeys.connected,\n        specialKeys.promise,\n        specialKeys.resolved,\n    ],\n}\n\nexport default (esc) => {\n    esc[specialKeys.root].start.add(() => start(esc))\n}\n\nconst set = (esm, value) => esm[specialKeys.root].start.value = value\n\nfunction start (\n    esc: ESComponent, \n    callbacks: Function[] = [],\n    asyncCallback?: Function\n) {\n    asyncConnect.call(esc, asyncCallback)\n    let output = connect.call(esc, callbacks)\n    set(esc, true)\n    return output\n}\n\nasync function asyncConnect (onReadyCallback) {\n\n\n    const configuration = this[specialKeys.root]\n    await this[specialKeys.connected]\n    configuration.connected = true // Ensure the configuration shows a connection\n\n    // Set resolved component on any editors\n    const boundEditors = configuration.boundEditors\n    if (boundEditors) boundEditors.forEach(editor => editor.setComponent(this)) // set after all children have been set\n\n    // Run additional callback\n    if (onReadyCallback) await onReadyCallback()\n\n    return this\n}\n\nfunction connect (callbacks: Function[] = []) {\n\n    // ------------------ Retroactively set __editor editor on children of the focus element -----------------\n    const configuration = this[specialKeys.root]\n    const parentConfiguration = this[specialKeys.parent]?.[specialKeys.root]\n    const __editor = parentConfiguration?.editor\n    if (__editor) configuration.editor = __editor\n\n    // ------------------ Register Sources (from esmpile) -----------------\n    let source = this[esSourceKey]\n    if (source) {\n        if (typeof source === 'function') source = this[specialKeys.source] = source()\n        delete this[esSourceKey]\n        const path = this[specialKeys.root].path\n        if (configuration.editor) configuration.editor.addFile(path, source)\n    }\n\n    // Run Callbacks (e.g. start animations)\n    callbacks.forEach(f => f.call(this))\n\n    return this\n}", "import { specialKeys } from \"../../../spec/properties\"\nimport { isNode } from \"../common/globals\"\n\nconst animations = {}\n\n\nexport const name = 'animation'\n\nconst key = specialKeys.animate\n\nexport const properties = {\n    dependents: [specialKeys.animate]\n}\n\nexport default function animate(esc) {\n\n    \n    if (esc[key]) {\n\n        let original = esc[key]\n\n        const id = Math.random()\n        const interval = (typeof original === 'number') ? original : (isNode) ? 60 : 'global'\n\n        let startFunction;\n\n        if (!animations[interval]) {\n        \n            const info = animations[interval] = {objects: {[id]: esc}} as any\n\n            const objects = info.objects\n            const runFuncs = () => {\n                for (let key in objects) objects[key].default()\n            }\n\n            // Global Animation Frames\n            if (interval === 'global') {\n                const callback = () => {\n                    runFuncs()\n                    info.id = globalThis.requestAnimationFrame(callback)\n                }\n\n                startFunction = callback\n\n                animations[interval].stop = () => {\n                    globalThis.cancelAnimationFrame(info.id)\n                    info.cancel = true\n                }\n            }\n            // Set Interval\n            else {\n                startFunction = () => {\n                    runFuncs() // run initially\n                    info.id = setInterval(() => runFuncs(), 1000/interval)\n                }\n\n                animations[interval].stop = () => clearInterval(info.id)\n            } \n        } \n        \n        // Add to Objects\n        else {\n            startFunction = () => {\n                esc.default() // run initially\n                animations[interval].objects[id] = esc\n            }\n        }\n\n        esc[specialKeys.root].start.add(startFunction)\n\n        // Stop Animation\n        esc[specialKeys.root].stop.add(() => {\n            delete animations[interval].objects[id]\n            esc[key] = original // Replace with original function\n            if (Object.keys(animations[interval].objects).length === 0) {\n                animations[interval].stop()\n                delete animations[interval]\n            }\n        })\n    }\n}", "import * as core from './packages/core/index'\n\n\n// Loaders\nimport * as compose from \"./packages/escode-compose-loader\"\nimport * as dom from \"./packages/escode-dom/loader/index\"\nimport * as start from \"./packages/escode-start-loader\"\nimport * as animate from \"./packages/escode-animation-loader\"\n\nimport { isNode } from './packages/common/globals'\nimport { ConfigInput, ConfigObject, Loaders } from './packages/core/types'\nimport { Options } from './packages/common/types'\n\n// --------- Specifying Loaders ---------\nconst standardLoaders: Loaders = []\n\n// Object Composition\nstandardLoaders.push(compose)\n\n// DOM Elements\nif (!isNode) standardLoaders.push(dom)\n\n// Lifecycle Functions\nstandardLoaders.push(start)\n\n// Additional Default Loaders\nstandardLoaders.push(animate)\n\n// Allow editing core loaders\nexport const loaders = standardLoaders\n\n// Exports from Core\nexport const monitor = core.monitor // Monitor any object for changes\nexport const resolve = core.resolve // Apply a callback to promises and direct references\nexport const clone = core.clone // Deep clone an object without creating an ES Component\nexport const merge = core.merge // Merge two objects together without creating an ES Component \nexport const find = core.find // Find components on an object\n\n// Exports Modified from Core\nexport const create = (config: ConfigInput, overrides?: ConfigObject, options: Partial<Options> = {}) => {\n\n    // Merge Default Loaders\n    if (options.loaders) options.loaders = Array.from(new Set([...options.loaders, ...standardLoaders]))\n    else options.loaders = standardLoaders\n\n    // Create the Component\n    return core.create(config, overrides, options)\n}\nexport default create", "import * as esc from '../../index'\n\n\ntype Options = {\n    spa: boolean,\n    element: {\n        root: HTMLElement | string\n        target?: HTMLElement | string\n    },\n}\n\ntype InputOptions = {\n    spa?: boolean,\n    element?: HTMLElement | string | Options['element'],\n}\n\nconst scrollToComponent = (path) => {\n    const el = document.getElementById(path)\n\n    if (el) el.scrollIntoView({ \n        // behavior: 'smooth' \n    })\n    else console.error(`No component found for path: ${path}`)\n}\n\n\nlet DOMContentLoaded = false\nclass Router {\n\n    options: Options\n\n    loaded?: {\n        path: string,\n        ref: any\n    }\n\n    root?: any;\n\n    paths: {[key: string]: any} = {}\n\n    constructor(options: InputOptions){\n\n        options = Object.assign({}, options) // copy\n        if (!options.element) options.element = { root: document.body }\n\n        if (typeof options.element !== 'object' || !('root' in options.element)) {\n            options.element = { root: options.element }\n        }\n\n        this.options = options as Options;\n\n        window.addEventListener('beforeunload', (ev) => this.load(undefined, ev))\n\n        window.addEventListener('popstate', (ev) =>  this.load(undefined, ev))\n        window.addEventListener('DOMContentLoaded', (ev) => {\n            DOMContentLoaded = true\n            if (!this.loaded || this.loaded.path === '') this.load(undefined, ev) \n        });\n    }\n\n    set = (path, esc) => {\n        if (esc === undefined) delete this.paths[path]\n        else this.paths[path] = esc\n    }\n\n    setRoot = (esc) => this.set('', esc)  \n\n    get = (path=this.getPath()) => {\n        let target = this.paths;\n        path.split(/\\.|\\//).forEach((key) => target = target[key] ?? target[''][key]) // Grab from root if missing\n        return target\n    }\n\n    load = (path?: string, ev?: Event, fallback: boolean = true) => {\n\n        let resolvedPath = ((path === undefined) ? this.getPath() : path) as string\n\n        let target = this.get(resolvedPath)\n\n        if (target && ev) ev.preventDefault();\n\n        const useFallback = \n        !target \n        && (!this.loaded  || this.loaded.path !== '')\n         && fallback\n\n        // console.warn('Pass', resolvedPath, target, useFallback, this.loaded)\n        if (useFallback) {\n            resolvedPath = ''\n            target = this.get('') // Fallback to root\n        }\n\n        if (target) {\n\n            let __parent = this.options.element.root\n            const parentTarget = resolvedPath ? this.options.element.target : undefined // Use target if not root\n\n            if (parentTarget) {\n\n                if (!this.loaded || (this.loaded.path !== '' && resolvedPath !== '')) this.load('') // Ensure the root is loaded\n\n                if (typeof parentTarget === 'string') __parent = document.querySelector(parentTarget) as HTMLElement\n                else __parent = parentTarget\n\n                const arr = [...__parent.children]\n                if (__parent) {\n                    for (const child of arr) child.remove()\n                }\n\n            } \n            \n            else if (this.loaded) this.loaded.ref.__element.remove()  // Remove old component\n\n            const config = esc.clone(target)\n\n            const component = esc.create(config, {__parent})\n\n            // Transfer Roots\n            if (resolvedPath === '') {\n                if (this.root) this.root.__element.remove()  // Remove old component\n                this.root = component\n            }\n\n            // Register Latest Loaded Component\n            this.loaded = {\n                path: resolvedPath,\n                ref: component\n            }\n\n\n            if (parentTarget) window.scrollTo(0,0) // Scroll to top\n\n            return this.loaded\n\n        }\n        \n        else scrollToComponent(resolvedPath)// Native focusing behavior\n\n        if (useFallback) this.navigate(undefined, undefined, false) // try again\n    }\n\n    navigate = (path=this.getPath(), ev?: Event, fallback: boolean = false) => {\n        const urlPath = path.split(/\\.|\\//).join(this.options.spa ? '/' : '.');\n        history.pushState({}, 'escodeRouterURL', this.options.spa ? `${window.location.origin}/${urlPath}` : `${window.location.origin}#${urlPath}`);\n        this.load(urlPath, ev, fallback);\n    }\n\n    getPath = (path?) => {\n\n        if (path === undefined){\n            \n            if (this.options.spa) path = window.location.pathname.slice(1)\n            \n            // Fallback to query string\n            if (!path) path = window.location.hash.slice(1);\n        }\n\n        return path ?? '' // Path or root\n    }\n\n}\n\n\n\nexport default Router", "\n// -------------- Import Modules --------------\nimport * as reference from './index.esc.js'\nimport * as about from './about.esc.js'\nimport * as work from './work.esc.js'\n\nimport Router from '../../js/packages/escode-router'\n\nconst router = new Router({spa: true, element: { root: document.body, target: '#content'}})\nrouter.setRoot(reference)\nrouter.set('about', about)\nrouter.set('work', work)\n\nrouter.load() // Load root component"],
  "mappings": "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",
  "names": []
}
